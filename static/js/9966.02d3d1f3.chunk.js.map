{"version":3,"file":"static/js/9966.02d3d1f3.chunk.js","mappings":"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","sources":["components/Nexos/Global/FormStep2.tsx","components/Nexos/pages/schecdulle/VisitsDemosMeetings/ModalVisitsDemosMeetingsForm.tsx","components/Nexos/pages/schecdulle/VisitsDemosMeetings/VisitsDemosMeetingsForm.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Nexos/ui/ListResults.tsx","components/Nexos/ui/InputField.tsx","../node_modules/@mui/material/esm/Icon/iconClasses.js","../node_modules/@mui/material/esm/Icon/Icon.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Row,\n    Col,\n    Card,\n    FormGroup,\n    Form,\n} from \"react-bootstrap\";\nimport { Icon, IconButton, SelectChangeEvent } from \"@mui/material\";\nimport {\n    CForm,\n    CCol,\n    CFormLabel,\n    CFormInput,\n    CButton,\n} from \"@coreui/react\";\n\n// Importaciones para el campo fecha\nimport dayjs, { Dayjs } from \"dayjs\";\nimport validator from \"validator\";\n\n// icons\nimport { useAddInputs, useTokenQuoteCheck } from \"../hooks\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { ItemCotizacionByNitForm2 } from \"../Interfaces/Pages/CotizacionFormulario.interface\";\nimport { ItemCreateCotizacionForm2 } from \"../Interfaces/Pages/Item.interface\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { City } from \"../Interfaces/utils.interface\";\nimport { isValidEmail, isValidNit } from \"../../../helpers\";\nimport { TitleComponent, InputErrorMessage } from \"./\";\n\nconst initialState: ItemCotizacionByNitForm2 | ItemCreateCotizacionForm2 = {\n    id: 0,\n    city_id: null,\n    description: \"\",\n    email: \"\",\n    name: \"\",\n    nit: \"\",\n    phone: \"\",\n    status_id: 0,\n    address: \"\",\n    email2: null,\n    email3: null,\n    phone2: null,\n    phone3: null,\n    units_total: \"0\",\n    units_budget: \"0\",\n};\n\nconst initialErrors = {\n    name: \"\",\n    email: \"\",\n    contact_phone: \"\",\n    phone: \"\",\n    nit: \"\",\n    city_id: \"\",\n    address: \"\",\n    contact_person: \"\",\n    units_total: \"\",\n    units_budget: \"\"\n};\n\nconst FormStep2 = ({ form_nit, state, storageQuoteId, serviceType, handleClose }: any) => {\n    const [date, setDate] = useState<Dayjs | null | any>(dayjs(\" \"));\n    const { handlerRedirect } = useTokenQuoteCheck();\n    const { getAllData, postData, getAllDataStringify, error } = useFetch();\n    const [searchNit, setSearchNit] = useState(\"\");\n    const [validatedCustom, setValidatedCustom] = useState(false);\n    const [isPasswordTouched, setIsPasswordTouched] = useState(false);\n    const [isSearchNitChange, setIsSearchNitChange] = useState(false);\n    const [errors, setErrors] = useState<any>(initialErrors);\n    const [hasErrors, setHasErrors] = useState(true);\n    const [cities, setCities] = useState<City[]>([]);\n    const [listMenu, setListMenu] = useState<ItemCotizacionByNitForm2[]>([]);\n    const [showListMenu, setShowListMenu] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n    const location: any = useLocation();\n    const [hasChangeNit, setHasChangeNit] = useState(true);\n\n    //datos del formulario\n    const [data, setData] = useState<ItemCotizacionByNitForm2 | ItemCreateCotizacionForm2 | any>(initialState);\n    const {\n        nit,\n        name,\n        address,\n        contact_phone,\n        phone,\n        phone2,\n        phone3,\n        email,\n        email2,\n        email3,\n        units_total,\n        units_budget,\n    } = data;\n\n    const [selectedCity, setSelectedCity] = useState(0);\n    // handle States\n    const {\n        handleAddInput: handleAddInputEmail,\n        handleRemoveInput: handleRemoveInputEmail,\n        handleChangeInput: handleInputChangeEmail,\n        changeIsDisabled: changeIsDisabledEmail,\n        handleResetInputs: handleResetInputsEmail,\n        mapInputArray: mapInputArrayEmail,\n        setInputs: setInputsEmail,\n        inputs: inputsEmail,\n    } = useAddInputs(errors, setData, setErrors, setHasErrors);\n    const {\n        handleAddInput: handleAddInputPhone,\n        handleRemoveInput: handleRemoveInputPhone,\n        handleChangeInput: handleInputChangePhone,\n        changeIsDisabled: changeIsDisabledPhone,\n        handleResetInputs: handleResetInputsPhone,\n        mapInputArray: mapInputArrayPhone,\n        setInputs: setInputsPhone,\n        inputs: inputsPhone,\n    } = useAddInputs(errors, setData, setErrors, setHasErrors);\n\n    //functions\n    const BtnAddInput = ({ handleAddInputType, isDisabled }: { handleAddInputType: any, isDisabled: any }) => {\n        return (\n            <IconButton\n                style={{ fontSize: '24px' }}\n                className={`text-primary ms-2 ${isDisabled ? 'disabled text-muted' : ''}`}\n                onMouseDown={isDisabled ? null : handleAddInputType}\n            >\n                <Icon>add_circle</Icon>\n            </IconButton>\n        );\n    };\n\n    const BtnSubsInput = ({\n        name,\n        index,\n        handleSubsInputType,\n    }: {\n        name: string;\n        index: number;\n        handleSubsInputType: any;\n    }) => {\n        return (\n            <IconButton\n                style={{ fontSize: '24px' }}\n                className={`text-primary ms-2`}\n                onMouseDown={() => { handleSubsInputType(name); }}\n            >\n                <Icon>remove_circle</Icon>\n            </IconButton>\n        );\n    };\n\n    const handlerSelect = (e: any) => {\n        setSelectedCity(e.target.value);\n        e.target.value = e.target.value.toString();\n        handleChange(e);\n        setData({ ...data, [e.target.name]: e.target.value });\n    };\n\n    const handlePhonesValidation = (e: any, validationErrors: any, index: number) => {\n        // Limpiar caracteres no numéricos\n        e.target.value = e.target.value.replace(/[^\\d]/g, \"\");\n        // Limitar a 10 dígitos\n        e.target.value = e.target.value.slice(0, 10);\n\n        if (e.target.length > 10 || e.target.value === \"\" || validator.isEmpty(e.target.value) || e.target.length === 0) {\n            validationErrors[e.target.name] = \"Número telefonico no válido\";\n            handleInputChangePhone(index, e.target.value);\n            changeIsDisabledPhone(index, true);\n        } else {\n            changeIsDisabledPhone(index, false);\n            delete validationErrors[e.target.name];\n        }\n\n        handleInputChangePhone(index, e.target.value);\n        setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    const handleEmailsValidation = (e: any, validationErrors: any, index: number) => {\n        if (!isValidEmail(e.target.value) || validator.isEmpty(e.target.value) || e.target.value === \"\") {\n            changeIsDisabledEmail(index, true);\n            validationErrors[e.target.name] = \"Correo Invalido o vacio\";\n        } else {\n            changeIsDisabledEmail(index, false);\n            delete validationErrors[e.target.name];\n        }\n        handleInputChangeEmail(index, e.target.value);\n        setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    const handleChange = (e: any | SelectChangeEvent<number>, index: number = 0) => {\n        const validationErrors: any = { ...errors };\n        if (e.target.name === \"name\" && isPasswordTouched) {\n            // Validar el campo de nombre (required)\n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.name = \"El nombre de la entidad es obligatoria\";\n            } else {\n                delete validationErrors.name;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n        if (e.target.name === \"address\" && isPasswordTouched) {\n            // Validar el campo de address (required)\n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.address = \"La dirección de la entidad es obligatoria\";\n            } else {\n                delete validationErrors.address;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n        if (e.target.name === \"contact_person\" && isPasswordTouched) {\n            // Validar el campo de address (required)\n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.contact_person = \"La persona dirigida de la entidad es obligatoria\";\n            } else {\n                delete validationErrors.contact_person;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n        if (e.target.name === \"units_total\" && isPasswordTouched) {\n            // Enteros no negativos\n            e.target.value = e.target.value.replace(/^0+|[^0-9]/g, \"\");\n            // Validar el campo de nombre (required)\n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.units_total = \"La cantidad total de únidades es obligatoria\";\n            } else {\n                delete validationErrors.units_budget;\n                delete validationErrors.units_total;\n            }\n\n            if (e.type === \"change\") {\n                setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value, \"units_budget\": e.target.value }));\n            } else {\n                setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n            }\n        }\n        if (e.target.name === \"units_budget\" && isPasswordTouched) {\n            // Enteros no negativos\n            e.target.value = e.target.value.replace(/^0+|[^0-9]/g, \"\");\n            // Validar el campo de nombre (required)\n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.units_budget = \"La cantidad de únidades cotizadas es obligatoria\";\n            } else if (Number(e.target.value) > Number(units_total)) {\n                validationErrors.units_budget = \"La cantidad de únidades cotizadas no puede ser mayor a la cantidad de únidades totales\";\n            } else {\n                delete validationErrors.units_budget;\n                delete validationErrors.units_total;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n        if (e.target.name === \"nit\" && isPasswordTouched) {\n            // Validar el campo de nit (required)      \n            if (validator.isEmpty(e.target.value)) {\n                validationErrors.nit = \"El nit de la entidad es obligatoria\";\n            } else if (!isValidNit(e.target.value)) {\n                validationErrors.nit = 'El nit debe tener un formáto válido (\"123456-2\")';\n            } else {\n                delete validationErrors.nit;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n        if (e.target.name === \"city_id\" && isPasswordTouched) {\n            // Validar el campo de city_id (required)      \n            if (validator.isEmpty(e.target.value) || Number(e.target.value) === 0) {\n                validationErrors.city_id = \"Elija una ciudad\";\n            } else {\n                delete validationErrors.city_id;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n        }\n\n        if ((e.target.name === \"email\" || e.target.name === \"email2\" || e.target.name === \"email3\") && isPasswordTouched) {\n            handleEmailsValidation(e, validationErrors, index);\n        }\n        if ((e.target.name === \"phone\" || e.target.name === \"phone2\" || e.target.name === \"phone3\") && isPasswordTouched) {\n            handlePhonesValidation(e, validationErrors, index);\n        }\n\n        if (e.target.name === \"contact_phone\" && isPasswordTouched) {\n            const value = e.target.value;\n            const isNumeric = /^\\d+$/.test(value);\n\n            // Validar el campo de contact_phone (required)      \n            if (validator.isEmpty(value)) {\n                validationErrors.contact_phone = \"El telefono encargado es obligatorio\";\n            } else if (!isNumeric) {\n                validationErrors.contact_phone = \"El telefono debe contener solo números\";\n            } else {\n                delete validationErrors.contact_phone;\n            }\n            setData((prev: any) => ({ ...prev, [e.target.name]: value }));\n        }\n        if (e.target.name === \"status_id\") {\n            setData((prev: any) => ({\n                ...prev,\n                [e.target.name]: Number(e.target.value),\n            }));\n        }\n\n        // Si hay errores, actualiza el estado con ellos\n        if (Object.keys(validationErrors).length > 0) {\n            setErrors(validationErrors);\n            setHasErrors(true);\n        } else {\n            setErrors({});\n            setHasErrors(false);\n        }\n    };\n    const handleSubmit = async (event: any) => {\n        setValidatedCustom(true);\n        event.preventDefault();\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const dataEmails = {\n                email: inputsEmail[0]?.value ?? \"\",\n                email2: inputsEmail[1]?.value ?? \"\",\n                email3: inputsEmail[2]?.value ?? \"\",\n            };\n            const dataPhones = {\n                phone: inputsPhone[0]?.value ?? \"\",\n                phone2: inputsPhone[1]?.value ?? \"\",\n                phone3: inputsPhone[2]?.value ?? \"\",\n            };\n\n            const { city_name, description, status_id, email, email2, email3, phone, phone2, phone3, ...rest } = data;\n\n            const formData = {\n                ...rest,\n                id: 0,\n                ...dataEmails,\n                ...dataPhones,\n            };\n            // let result = await postData(formData, \"quote/create\");\n            return;\n        }\n    };\n\n    // Función para seleccionar un resultado de la busqueda por NIT\n    const selectedSearchResult = (item: ItemCotizacionByNitForm2) => {\n        const { ...rest } = item;\n        const cityIsAvailable = cities?.some((city: City) => city.id === item.city_id);\n        if (cityIsAvailable) {\n            setSelectedCity(item.city_id!);\n        }\n        setData({\n            ...rest,\n        });\n        addDataUseInputs(item);\n        resetChangeErrors(item);\n        setShowListMenu(false);\n    };\n\n    const resetChangeErrors = (item: any) => {\n        setIsPasswordTouched(false);\n        setHasErrors(true);\n        const objErrors: any = {\n            name: (!item.name) ? \"El campo está vacío\" : null,\n            email: (!item.email) ? \"El campo está vacío\" : null,\n            phone: (!item.phone) ? \"El campo está vacío\" : null,\n            nit: (!item.nit) ? \"El campo está vacío\" : null,\n            city_id: (!item.city_id) ? \"El campo está vacío\" : null,\n            address: (!item.address) ? \"El campo está vacío\" : null,\n        }\n        // Elimina los campos que no tienen error (valor es null)\n        Object.keys(objErrors).forEach(key => {\n            if (objErrors[key] == null) {\n                delete objErrors[key];\n            }\n        });\n        if (Object.keys(objErrors).length === 0) {\n            setIsPasswordTouched(false);\n            setHasErrors(false);\n        }\n        setErrors(objErrors);\n    }\n\n    const addDataUseInputs = (item: any) => {\n        console.log({ item })\n        const itemsEmailValues = [];\n        const itemsEmails = [];\n        const itemsPhoneValues = [];\n        const itemsPhones = []\n\n        // Emails Values Set Inputs\n        if (item[`email`] != \"\" && item[`email`] != null && item[`email`] != false) {\n            itemsEmailValues.push(item.email1);\n        }\n        if (item[`email2`] != \"\" && item[`email2`] != null && item[`email2`] != false) {\n            itemsEmailValues.push(item.email2)\n        }\n        if (item[`email3`] != \"\" && item[`email3`] != null && item[`email3`] != false) {\n            itemsEmailValues.push(item.email3)\n        }\n        // Phone Values Set Inputs\n        if (item[`phone`] != \"\" && item[`phone`] != null && item[`phone`] != false) {\n            itemsPhoneValues.push(item.phone)\n        }\n        if (item[`phone2`] != \"\" && item[`phone2`] != null && item[`phone2`] != false) {\n            itemsPhoneValues.push(item.phone2)\n        }\n        if (item[`phone3`] != \"\" && item[`phone3`] != null && item[`phone3`] != false) {\n            itemsPhoneValues.push(item.phone3)\n        }\n        // Emails Set Inputs\n        if (itemsEmailValues.length === 1) {\n            itemsEmails.push({\n                value: item.email,\n                showRemove: false,\n                isDisabled: false\n            })\n        }\n\n        if (itemsEmailValues.length === 2) {\n            itemsEmails.push({\n                value: item.email,\n                showRemove: true,\n                isDisabled: false\n            }, {\n                value: item.email2,\n                showRemove: false,\n                isDisabled: false\n            })\n        }\n\n        if (itemsEmailValues.length === 3) {\n            itemsEmails.push({\n                value: item.email,\n                showRemove: true,\n                isDisabled: false\n            },\n                {\n                    value: item.email2,\n                    showRemove: true,\n                    isDisabled: false\n                },\n                {\n                    value: item.email3,\n                    showRemove: true,\n                    isDisabled: false\n                })\n        }\n\n        // Phones Set Inputs\n        if (itemsPhoneValues.length === 1) {\n            itemsPhones.push({\n                value: item.phone,\n                showRemove: false,\n                isDisabled: false\n            })\n        }\n\n        if (itemsPhoneValues.length === 2) {\n            itemsPhones.push({\n                value: item.phone,\n                showRemove: true,\n                isDisabled: false\n            }, {\n                value: item.phone2,\n                showRemove: false,\n                isDisabled: false\n            })\n        }\n\n        if (itemsPhoneValues.length === 3) {\n            itemsPhones.push({\n                value: item.phone,\n                showRemove: true,\n                isDisabled: false\n            },\n                {\n                    value: item.phone2,\n                    showRemove: true,\n                    isDisabled: false\n                },\n                {\n                    value: item.phone3,\n                    showRemove: true,\n                    isDisabled: false\n                })\n        }\n\n        setInputsEmail(itemsEmails);\n        setInputsPhone(itemsPhones);\n    }\n\n    // Obtiene la lista de opciones de cotizaciones de acuerdo al nit que se ingrese en el buscador\n    const getData = async () => {\n        const params = { nit: searchNit };\n        try {\n            setShowListMenu(true);\n            setIsLoading(true);\n            const response = await getAllData(\"api/residential/list\", params);\n\n            // console.log({response}, {form: form_nit}, { searchNit}, { location: location.state });\n            if (response.length === 1 && (form_nit && form_nit?.length > 5) && hasChangeNit && !isSearchNitChange) {\n                // En caso de haber nit en local storage. Enviar directamente la informacion al formulario\n                selectedSearchResult(response[0]);\n                // console.log(\"ENTRA EN PRIMERA:::\", {response});\n            } else {\n                // En caso de hacer una busqueda normal\n                const limitedSearchResults = response.slice(0, 15);\n                setListMenu(limitedSearchResults);\n            }\n            setHasChangeNit(false);\n            setIsLoading(false);\n        }\n        catch (error) {\n            console.log(\"Error\");\n        }\n    }\n\n    // Obtiene la lista de ciudades y establece a la primera ciudad de la lista como el item seleccionado dentro del select de ciudades \n    const getCities = async () => {\n        const response: City[] = await getAllData(\"api/cities/list\");\n        setCities(response);\n    }\n\n    useEffect(() => {\n        getCities();\n    }, []);\n\n    useEffect(() => {\n        if (searchNit.length >= 5 && cities.length > 0) {\n            getData();\n        } else {\n            setListMenu([]);\n        }\n    }, [searchNit, cities]);\n\n    useEffect(() => {\n\n        if (location?.state && location?.state.name && !isSearchNitChange) {\n            const { status, status_id, meeting_date, ...rest } = location?.state;\n            setSelectedCity(rest.city_id!);\n            setDate(dayjs(meeting_date));\n            setData({\n                ...rest,\n                meeting_date: dayjs(meeting_date)\n            });\n            addDataUseInputs(location?.state);\n            resetChangeErrors(rest);\n            setShowListMenu(false);\n            setIsLoading(false);\n            setIsSearchNitChange(true);\n        }\n\n    }, [location]);\n\n    // Tercer useEffect para manejar cambios en 'form_nit' y 'hasChangeNit'\n    useEffect(() => {\n        if (form_nit && form_nit.length > 5 && hasChangeNit) {\n            setSearchNit(form_nit);\n        }\n    }, [form_nit, hasChangeNit]);\n\n    useEffect(() => {\n        if (serviceType === 'cotizacion') {\n            handlerRedirect(storageQuoteId);\n        }\n    }, [storageQuoteId]);\n\n    return (\n        <div>\n            <div className=\"mt-5 w-100\">\n                {/* <!--Formulario--> */}\n                <TitleComponent subtitle=\"FORMULARIO CREAR CLIENTE\" align=\"center\" />\n                <div className=\"\">\n                    <Col lg={12} md={12}>\n                        <Card>\n                            <Card.Body>\n                                <CForm\n                                    className=\"needs-validation\"\n                                    noValidate\n                                    validated={validatedCustom}\n                                    onSubmit={handleSubmit}\n                                >\n                                    {/* name, send to */}\n                                    <Row>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom01\">\n                                                Nombre de la entidad*\n                                            </CFormLabel>\n                                            <InputErrorMessage message={errors.name} inputFocus={isPasswordTouched}>\n                                                <CFormInput\n                                                    type=\"text\"\n                                                    id=\"validationCustom01\"\n                                                    name=\"name\"\n                                                    value={name ? name : \"\"}\n                                                    onChange={handleChange}\n                                                    onBlur={handleChange}\n                                                    onFocus={() => setIsPasswordTouched(true)}\n                                                    required\n                                                />\n                                            </InputErrorMessage>\n                                            {/* <CFormFeedback invalid>Porfavor indica una direccion valida.</CFormFeedback> */}\n                                        </Col>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom03\">\n                                                NIT*\n                                            </CFormLabel>\n                                            <InputErrorMessage message={errors.nit} inputFocus={isPasswordTouched}>\n                                                <CFormInput\n                                                    type=\"text\"\n                                                    id=\"validationCustom03\"\n                                                    name=\"nit\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleChange}\n                                                    onFocus={() => setIsPasswordTouched(true)}\n                                                    value={nit ? nit : \"\"}\n                                                    required\n                                                />\n                                            </InputErrorMessage>\n                                            {/* <CFormFeedback invalid>¿a quien va dirigido?</CFormFeedback> */}\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom03\">\n                                                Direccion*\n                                            </CFormLabel>\n                                            <InputErrorMessage message={errors.address} inputFocus={isPasswordTouched}>\n                                                <CFormInput\n                                                    type=\"text\"\n                                                    id=\"validationCustom03\"\n                                                    name=\"address\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleChange}\n                                                    onFocus={() => setIsPasswordTouched(true)}\n                                                    required\n                                                    value={address ? address : \"\"}\n                                                />\n                                            </InputErrorMessage>\n                                            {/* <CFormFeedback invalid>Porfavor indica una direccion valida.</CFormFeedback> */}\n                                        </Col>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom03\">\n                                                Ciudad*\n                                            </CFormLabel>\n                                            {\n                                                cities.length > 0 && (\n                                                    <InputErrorMessage message={errors.city_id} inputFocus={isPasswordTouched}>\n                                                        <Form.Select\n                                                            name=\"city_id\"\n                                                            aria-label=\"Default select example\"\n                                                            className=\"selectproduct w-100\"\n                                                            value={selectedCity}\n                                                            onFocus={() => setIsPasswordTouched(true)}\n                                                            onBlur={() => setIsPasswordTouched(false)}\n                                                            onChange={handlerSelect}\n\n                                                        >\n                                                            <option value={0}>Seleccionar ciudad</option>\n                                                            {\n                                                                cities.map((city: any) => (\n                                                                    <option key={city.id} value={city.id}>{city.name}</option>\n                                                                ))\n                                                            }\n                                                        </Form.Select>\n                                                    </InputErrorMessage>\n                                                )\n                                            }\n                                            {/* <CFormFeedback invalid>Seleciona una ciudad</CFormFeedback> */}\n                                        </Col>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom03\">\n                                                Unidades*\n                                            </CFormLabel>\n                                            <InputErrorMessage message={errors.units_total} inputFocus={isPasswordTouched}>\n                                                <CFormInput\n                                                    type=\"number\"\n                                                    id=\"validationCustom03\"\n                                                    name=\"units_total\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleChange}\n                                                    onFocus={() => setIsPasswordTouched(true)}\n                                                    value={units_total}\n                                                    required\n                                                />\n                                            </InputErrorMessage>\n                                            {/* <CFormFeedback invalid>Porfavor provee una Unidad</CFormFeedback> */}\n                                        </Col>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            <CFormLabel htmlFor=\"validationCustom03\">\n                                                Unidades Cotizadas\n                                            </CFormLabel>\n                                            <InputErrorMessage message={errors.units_budget} inputFocus={isPasswordTouched}>\n                                                <CFormInput\n                                                    type=\"number\"\n                                                    id=\"validationCustom03\"\n                                                    name=\"units_budget\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleChange}\n                                                    onFocus={() => setIsPasswordTouched(true)}\n                                                    value={units_budget}\n                                                    required\n                                                />\n                                            </InputErrorMessage>\n                                            {/* <CFormFeedback invalid>Porfavor provee una Unidad</CFormFeedback> */}\n                                        </Col>\n                                    </Row>\n                                    {/* email, phone */}\n                                    <Row>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            {inputsEmail?.map((inputValue, index) => (\n                                                <React.Fragment key={index}>\n                                                    <CCol style={{ paddingLeft: 0 }}>\n                                                        <div id=\"multiCollapseExample1\">\n                                                            <FormGroup className=\"form-group\">\n                                                                <CFormLabel htmlFor=\"validationCustom03\">\n                                                                    {index === 0\n                                                                        ? \"Correo*\"\n                                                                        : `Correo-${index + 1}`}\n                                                                </CFormLabel>\n                                                                <div className=\"d-flex\">\n                                                                    <InputErrorMessage message={index === 0 ? errors[`email`] : errors[`email${index + 1}`]} inputFocus={isPasswordTouched}>\n                                                                        <Form.Control\n                                                                            name={index === 0 ? \"email\" : `email${index + 1}`}\n                                                                            onFocus={() => setIsPasswordTouched(true)}\n                                                                            onBlur={(e) => { handleChange(e, index); }}\n                                                                            onChange={(e) => {\n                                                                                handleChange(e, index);\n                                                                            }}\n\n                                                                            value={((index === 0) ? email : (index === 1) ? email2 : email3) || inputValue.value}\n                                                                            type=\"email\"\n                                                                        />\n                                                                    </InputErrorMessage>\n                                                                    {inputValue.showRemove ? (\n                                                                        <BtnSubsInput\n                                                                            name={\"email\"}\n                                                                            index={index}\n                                                                            handleSubsInputType={\n                                                                                handleRemoveInputEmail\n                                                                            }\n                                                                        />\n                                                                    ) : (\n                                                                        <BtnAddInput\n                                                                            handleAddInputType={handleAddInputEmail}\n                                                                            isDisabled={inputValue.isDisabled}\n                                                                        />\n                                                                    )}\n                                                                </div>\n                                                            </FormGroup>\n                                                        </div>\n                                                    </CCol>\n                                                </React.Fragment>\n                                            ))}\n                                        </Col>\n                                        <Col xs={12} sm={12} md={6} lg={6} xl={6}>\n                                            {inputsPhone?.map((inputValue, index) => (\n                                                <React.Fragment key={index}>\n                                                    <CCol style={{ paddingLeft: 0 }}>\n                                                        <div id=\"multiCollapseExample1\">\n                                                            <FormGroup className=\"form-group\">\n                                                                <CFormLabel htmlFor=\"validationCustom03\">\n                                                                    {index === 0\n                                                                        ? \"Telefono*\"\n                                                                        : `Telefono-${index + 1}`}\n                                                                </CFormLabel>\n                                                                <div className=\"d-flex\">\n                                                                    <InputErrorMessage message={index === 0 ? errors[`phone`] : errors[`phone${index + 1}`]} inputFocus={isPasswordTouched}>\n                                                                        <Form.Control\n                                                                            name={index === 0 ? \"phone\" : `phone${index + 1}`}\n                                                                            onFocus={() => setIsPasswordTouched(true)}\n                                                                            // onBlur={handleChange}\n                                                                            onBlur={(e) => {\n                                                                                handleChange(e, index);\n                                                                            }}\n                                                                            onChange={(e) => {\n                                                                                handleChange(e, index);\n                                                                            }}\n                                                                            value={((index === 0) ? phone : (index === 1) ? phone2 : phone3) || inputValue.value}\n                                                                            type=\"text\"\n                                                                        />\n                                                                    </InputErrorMessage>\n                                                                    {inputValue.showRemove ? (\n                                                                        <BtnSubsInput\n                                                                            name={\"phone\"}\n                                                                            index={index}\n                                                                            handleSubsInputType={\n                                                                                handleRemoveInputPhone\n                                                                            }\n                                                                        />\n                                                                    ) : (\n                                                                        <BtnAddInput\n                                                                            handleAddInputType={handleAddInputPhone}\n                                                                            isDisabled={inputValue.isDisabled}\n                                                                        />\n                                                                    )}\n                                                                </div>\n                                                            </FormGroup>\n                                                        </div>\n                                                    </CCol>\n                                                </React.Fragment>\n                                            ))}\n                                        </Col>\n                                    </Row>\n                                    <CCol className=\" d-flex justify-content-end mt-5\">\n                                        <CCol className=\" d-flex justify-content-end \">\n                                            <CButton\n                                                color=\"primary\"\n                                                onClick={handleClose}\n                                            >Cerrar\n                                            </CButton>\n                                        </CCol>\n                                        <CButton\n                                            color=\"primary\"\n                                            type=\"submit\"\n                                        >Continuar\n                                        </CButton>\n                                    </CCol>\n                                </CForm>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FormStep2;","import Modal from 'react-bootstrap/Modal';\nimport FormStep2 from '../../../Global/FormStep2';\n\nconst ModalVisitsDemosMeetingsForm = ({\n  show,\n  handleClose,\n  searchNit\n}: any) => {\n  return (\n    <Modal\n      size=\"lg\"\n      show={show}\n      onHide={() => handleClose}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Body>\n        <FormStep2 \n          serviceType={'demos'}\n          handleClose={handleClose}\n          searchNit={searchNit}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default ModalVisitsDemosMeetingsForm\n","import { useEffect, useState } from \"react\";\nimport { Form, FormGroup, Row, Col, Card, Button } from \"react-bootstrap\";\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { TextField } from \"@mui/material\";\nimport dayjs from \"dayjs\";\nimport { BreadCrumb, InputErrorMessage, Loader, TitleComponent } from \"../../../Global\";\nimport { useErrors, useFetch } from \"../../../hooks\";\nimport { useLocation } from \"react-router-dom\";\nimport { ItemCotizacionByNit } from \"../../../Interfaces/Pages/CotizacionFormulario.interface\";\nimport { ListResults } from \"../../../ui\";\nimport validator from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport ModalVisitsDemosMeetingsForm from \"./ModalVisitsDemosMeetingsForm\";\n\nconst initialForm = {\n  id: 0,\n  residential_id: null,\n  demo_date: dayjs().format(\"L\"),\n  contact_name: \"\",\n  contact_phone: \"\",\n  contact_email: \"\",\n  schedule_type: \"\",\n  description: \"\",\n  client_type: \"\",\n  meeting_type: \"\",\n};\n\nconst VisitsDemosMeetingsForm = () => {\n  const form_nit = localStorage.getItem(\"form_nit\");\n  const location: any = useLocation();\n  const { state } = location;\n\n  // Hooks\n  const { getAllData, postData, putData } = useFetch();\n  const { errors, setError, clearError } = useErrors();\n\n  // State\n  const [data, setData] = useState<any>([]);\n  const [nameClient, setNameClient] = useState('');\n  const [onfocus, setOnfocus] = useState(false);\n  const [searchNit, setSearchNit] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [listMenu, setListMenu] = useState<ItemCotizacionByNit[]>([]);\n  const [showListMenu, setShowListMenu] = useState(false);\n  const [hasChangeNit, setHasChangeNit] = useState(true);\n  const [form, setForm] = useState<any>(initialForm);\n\n  //modal states\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n\n  // Función para validar errores en el formulario\n  const validateErrors = (nameData: any, valueData: any) => {\n    const validationErrors: any = { ...errors };\n    if (nameData === \"demo_date\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.demo_date = \"El campo fecha de demo es obligatorio\";\n      } else {\n        delete validationErrors.demo_date;\n      }\n    }\n    if (nameData === \"contact_name\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.contact_name = \"El campo de Encargado es obligatorio\";\n      } else if (!validator.isNumeric(valueData)) {\n        validationErrors.price = [\"El campo valor debe ser numérico\"];\n      } else {\n        delete validationErrors.contact_name;\n      }\n    }\n    if (nameData === \"contact_phone\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.contact_phone = \"El campo de Teléfono es obligatorio\";\n      } else if (!validator.isNumeric(valueData)) {\n        validationErrors.contact_phone = \"El campo teléfono de contacto debe ser numérico\";\n      } else {\n        delete validationErrors.contact_phone;\n      }\n    }\n    if (nameData === \"contact_email\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.contact_email = \"El campo de Correo es obligatorio\";\n      } else {\n        delete validationErrors.contact_email;\n      }\n    }\n    if (nameData === \"schedule_type\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.schedule_type = \"Debe seleccionar al menos un tipo de cotización\";\n      } else {\n        delete validationErrors.schedule_type;\n      }\n    }\n    if (nameData === \"client_type\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.client_type = \"El campo lugar de la reunion es obligatorio\";\n      } else {\n        delete validationErrors.client_type;\n      }\n    }\n    if (nameData === \"description\") {\n      if (validator.isEmpty(valueData)) {\n        validationErrors.description = \"El campo descripción es obligatorio\";\n      } else {\n        delete validationErrors.description;\n      }\n    }\n    // Set the errors for each field separately\n    setError(\"demo_date\", validationErrors.demo_date);\n    setError(\"contact_name\", validationErrors.contact_name);\n    setError(\"contact_phone\", validationErrors.contact_phone);\n    setError(\"contact_email\", validationErrors.contact_email);\n    setError(\"schedule_type\", validationErrors.schedule_type);\n    setError(\"description\", validationErrors.description);\n    setError(\"client_type\", validationErrors.client_type);\n  };\n\n  // Obtener datos iniciales\n  const getData = async () => {\n    try {\n      const res: any = await getAllData(\"api/residential/scheduling/type/list/active\");\n      setData(res);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Función para seleccionar un resultado de la búsqueda por NIT\n  const selectedSearchResult = (item: ItemCotizacionByNit) => {\n    setForm({\n      id: 0,\n      residential_id: item.id,\n      contact_name: item.contact_person,\n      contact_phone: item.phone,\n      contact_email: item.email,\n      schedule_type: \"\",\n      description: \"\",\n      client_type: \"\",\n      meeting_type: \"\",\n    });\n    setNameClient(item.name);\n    setShowListMenu(false);\n    console.log(item)\n  };\n\n  // Obtener datos por NIT\n  const getDataByNit = async () => {\n    const params = { nit: searchNit };\n    try {\n      setShowListMenu(true);\n      setIsLoading(true);\n      const response = await getAllData(\"api/residential/list\", params);\n      if (response.length === 1 && (form_nit && form_nit?.length > 5) && hasChangeNit) {\n        selectedSearchResult(response[0]);\n      } else {\n        const limitedSearchResults = response.slice(0, 15);\n        setListMenu(limitedSearchResults);\n      }\n      setHasChangeNit(false);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(\"Error\");\n    }\n  };\n\n  // Handle para Crear y Editar \n  const handleSubmit = async (e: any) => {\n    const { id, ...rest } = form;\n    let payload;\n    let demoDateFormatted;\n    if (state.id) {\n      // Format the demo_date using ISO 8601 format\n      demoDateFormatted = dayjs(form.demo_date).format(\"YYYY-MM-DDTHH:mm:ssZ\");\n      payload = {\n        id: state.id,\n        residential_id: rest.residential_id,\n        demo_date: demoDateFormatted,\n        contact_name: rest.contact_name,\n        contact_phone: rest.contact_phone,\n        contact_email: rest.contact_email,\n        schedule_type: rest.schedule_type,\n        description: rest.description,\n        client_type: rest.client_type,\n        meeting_type: form.meeting_type === 'Llamada' ? 'No aplica' : form.meeting_type\n      };\n\n      await putData(payload, \"residential/demoScheduling/edit\", 'visitasdemosreuniones');\n    } else {\n      // Format the demo_date using ISO 8601 format\n      demoDateFormatted = dayjs(form.demo_date).format(\"YYYY-MM-DDTHH:mm:ssZ\");\n      payload = {\n        ...rest,\n        id: 0,\n        demo_date: demoDateFormatted,\n        meeting_type: form.meeting_type === 'Llamada' ? 'No aplica' : form.meeting_type\n      };\n      await postData(payload, \"residential/demoScheduling/create\", false ,'visitasdemosreuniones');\n    }\n  };\n\n  // Manejar cambios en los campos del formulario\n  const handleChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"contact_phone\") {\n      const numericValue = value.replace(/\\D/g, \"\");\n      setForm((prevForm: any) => ({\n        ...prevForm,\n        [name]: numericValue,\n      }));\n    } else if (name === \"schedule_type\") {\n      setForm((prevForm: any) => ({\n        ...prevForm,\n        [name]: value,\n        meeting_type: value === 'visita' ? 'presencial' : prevForm.meeting_type,\n      }));\n    } else {\n      setForm((prevForm: any) => ({\n        ...prevForm,\n        [name]: value,\n      }));\n    }\n    clearError(name);\n    validateErrors(name, value);\n  };\n\n  // Manejar cambio de fecha\n  const handleDateChange = (date: any) => {\n    setForm((prevForm: any) => ({\n      ...prevForm,\n      demo_date: date || dayjs(),\n    }));\n  };\n\n  // Manejar cambio en el campo de NIT\n  const handlerNit = (e: any) => {\n    setSearchNit(e.target.value);\n  };\n\n  // Efecto para obtener datos iniciales\n  useEffect(() => {\n    getData();\n    if (state) {\n      setForm({\n        ...initialForm,\n        ...state,\n      });\n    }\n  }, [state]);\n\n  // Efecto para obtener datos por NIT\n  useEffect(() => {\n    if (searchNit.length >= 5) {\n      getDataByNit();\n    } else {\n      setListMenu([]);\n    }\n  }, [searchNit]);\n\n  // Componente de error personalizado\n  const CustomError = () => {\n    return (\n      <Card\n        className=\"p-4\"\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          left: \"0\",\n          top: \"110%\",\n          textAlign: \"center\",\n          zIndex: 1000,\n        }}\n      >\n        <Card.Text className=\"text-danger\">No se encontraron clientes por ese NIT</Card.Text>\n        <Button onClick={() => setShow(true)}>Agregar Nuevo</Button>\n      </Card>\n    );\n  };\n\n  return (\n    <>\n      {/* Breadcrumb */}\n      <BreadCrumb\n        items={[\"inicio\", \"lista visitas, demos, reuniones\", \"form visitas, demos, reuniones\"]}\n        baseURL={[\"inicio\", \"nexos/visitasdemosreuniones\", \"\"]}\n      />\n      {/* Component Title */}\n      <TitleComponent title=\"PASO 1\" subtitle={\"VISITAS, DEMOS, REUNIONES\"} align=\"center\" />\n\n      <ModalVisitsDemosMeetingsForm\n        show={show}\n        handleClose={handleClose}\n        searchNit={searchNit}\n      />\n      {/*  Modulo de search */}\n      <div className=\"mt-5 w-100\">\n        <Row className=\"justify-content-center\">\n          <Col sm={12} md={12} lg={12} xl={12}>\n            <Card className=\"w-75 mx-auto\">\n              <Card.Body className=\"relative\">\n                <Form.Control\n                  id=\"outlined-basic\"\n                  type=\"text\"\n                  placeholder=\"Buscar por Nit\"\n                  className=\"form-control p-3\"\n                  size=\"sm\"\n                  value={searchNit}\n                  onChange={handlerNit}\n                />\n                {listMenu.length === 0 && searchNit.length >= 5 && isLoading && (\n                  <Loader />\n                )}\n                {listMenu.length === 0 && searchNit.length >= 5 && !isLoading && showListMenu && (\n                  <CustomError />\n                )}\n                {listMenu.length > 0 && searchNit.length >= 5 && showListMenu && (\n                  <ListResults\n                    listMenu={listMenu}\n                    selectedSearchResult={selectedSearchResult}\n                    showListMenu={showListMenu}\n                    setShowListMenu={setShowListMenu}\n                  />\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {/* Form */}\n\n        <Card className=\"p-4\">\n\n          <Row className=\"\">\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <Form.Label className=\"form-label \">\n                Tipo de agendamiento\n              </Form.Label>\n              <InputErrorMessage message={errors.schedule_type} inputFocus={onfocus}>\n                <FormGroup className=\"control-group form-group m-0 d-flex w-100\">\n                  <div className=\"d-flex align-items-start flex-column w-100\">\n                    <Form.Select\n                      name=\"schedule_type\"\n                      style={{ padding: 8, border: '0.5px solid gray' }}\n                      aria-label=\"Default select example\"\n                      className={onfocus ? 'border-primary' : ''}\n                      onChange={handleChange}\n                      value={form?.schedule_type ?? \"\"}\n                      onFocus={() => setOnfocus(true)}\n                      onBlur={() => setOnfocus(false)}\n                    >\n                      {!form.schedule_type ? (\n                        <option\n                          value=\"\">Seleccione el tipo de agendamiento</option>\n                      ) : null}\n                      {data && data.map((item: any) => (\n                        <option\n                          key={item.id} value={item.name}>\n                          {item.name}\n                        </option>\n                      ))}\n                    </Form.Select>\n                  </div>\n                </FormGroup>\n              </InputErrorMessage>\n            </Col>\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <FormGroup className=\"form-group m-0\">\n                <Form.Label className=\"form-label\">\n                  Nombre del cliente\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  disabled\n                  className=\"form-control\"\n                  value={form?.residential_name ?? nameClient}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </Col>\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <FormGroup className=\"form-group m-0\">\n                <Form.Label className=\"form-label\">\n                  Encargado\n                </Form.Label>\n                <InputErrorMessage message={errors.contact_name} inputFocus={onfocus}>\n                  <Form.Control\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    name=\"contact_name\"\n                    value={form?.contact_name ?? \"\"}\n                    required\n                    onChange={handleChange}\n                  />\n                </InputErrorMessage>\n              </FormGroup>\n            </Col>\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <FormGroup className=\"form-group m-0\">\n                <Form.Label className=\"form-label\">\n                  lugar de la reunion\n                </Form.Label>\n                <InputErrorMessage message={errors.client_type} inputFocus={onfocus}>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"client_type\"\n                    value={form?.client_type ?? \"\"}\n                    className=\"form-control\"\n                    onChange={handleChange}\n                  />\n                </InputErrorMessage>\n              </FormGroup>\n            </Col>\n            {form.schedule_type != 'Llamada' ?\n              < Col sm={12} md={12} lg={6} xl={6}>\n                <FormGroup className=\"form-group m-0\">\n                  <Form.Label className=\"form-label\">\n                    Tipo de reunion\n                  </Form.Label>\n                  <InputErrorMessage message={errors.meeting_type} inputFocus={onfocus}>\n                    <div className=\"d-flex align-items-start flex-column w-100\">\n                      <Form.Select\n                        name=\"meeting_type\"\n                        style={{ padding: 8, border: '0.5px solid gray' }}\n                        aria-label=\"Default select example\"\n                        className={onfocus ? 'border-primary' : ''}\n                        onChange={handleChange}\n                        value={form?.meeting_type ?? \"\"}\n                        onFocus={() => setOnfocus(true)}\n                        onBlur={() => setOnfocus(false)}\n                      >\n                        <option value=\"\">Seleccione el tipo de reunion</option>\n                        <option value={'presencial'}> Presencial </option>\n                        <option value={'virtual'}> Virtual </option>\n                      </Form.Select>\n                    </div>\n                  </InputErrorMessage>\n                </FormGroup>\n              </Col>\n              : null}\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <FormGroup className=\"form-group m-0\">\n                <Form.Label className=\"form-label\">\n                  Correo\n                </Form.Label>\n                <InputErrorMessage message={errors.contact_email} inputFocus={onfocus}>\n                  <Form.Control\n                    type=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    name=\"contact_email\"\n                    value={form?.contact_email ?? \"\"}\n                    required\n                    onChange={handleChange}\n                  />\n                </InputErrorMessage>\n              </FormGroup>\n\n            </Col>\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <FormGroup className=\"form-group m-0\">\n                <Form.Label className=\"form-label\">\n                  Telefono\n                </Form.Label>\n                <InputErrorMessage message={errors.contact_phone} inputFocus={onfocus}>\n                  <Form.Control\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"\"\n                    value={form?.contact_phone ?? \"\"}\n                    name=\"contact_phone\"\n                    required\n                    onChange={handleChange}\n                  />\n                </InputErrorMessage>\n              </FormGroup>\n            </Col>\n            <Col sm={12} md={12} lg={6} xl={6}>\n              <Form.Label className=\"form-label\">\n                Fecha de demostración\n              </Form.Label>\n              <InputErrorMessage message={errors.demo_date} inputFocus={onfocus}>\n                <LocalizationProvider style={{ height: 10, width: '100%' }} dateAdapter={AdapterDayjs}>\n                  <DesktopDatePicker\n                    className=\"w-100 text-primary\"\n                    label=\" \"\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={form?.demo_date ?? dayjs().format('L')}\n                    onChange={handleDateChange}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n              </InputErrorMessage>\n            </Col>\n          </Row>\n          <Form.Label className=\"w-100 form-label text-center text-uppercase\">\n            Objetivo de la reunion, demo, vista, llamada\n          </Form.Label>\n          <InputErrorMessage message={errors.description} inputFocus={onfocus}>\n            <Card className=\"w-100 text-center\">\n              <FormGroup>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  name=\"description\"\n                  value={form?.description ?? \"\"}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </Card>\n          </InputErrorMessage>\n        </Card >\n        <Row className=\"p-3 d-flex justify-content-end mb-3\">\n          <Link\n            to={`${process.env.PUBLIC_URL}/nexos/visitasdemosreuniones`}\n          >\n            <Button>Volver</Button>\n          </Link>\n          <Button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={handleSubmit}\n          >\n            Continuar\n          </Button>\n        </Row>\n      </div >\n    </>\n  )\n};\n\nexport default VisitsDemosMeetingsForm;","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React, { useEffect, useRef } from 'react';\nimport { ListGroup, Card } from 'react-bootstrap';\nimport { ItemCotizacionByNit } from '../Interfaces/Pages/CotizacionFormulario.interface';\n\ninterface Props {\n  listMenu: ItemCotizacionByNit[];\n  showListMenu: boolean;\n  selectedSearchResult: (item: ItemCotizacionByNit) => void;\n  setShowListMenu: (item: boolean) => void;\n}\n\nexport const ListResults = ({ listMenu, selectedSearchResult, showListMenu, setShowListMenu }: Props) => {\n\n  const searchInputRef: any = useRef();\n\n  const handleOutsideClick = (event: any) => {\n    if (showListMenu && searchInputRef.current && !searchInputRef.current.contains(event.target)) {\n      setShowListMenu(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleOutsideClick);\n    return () => {\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [showListMenu]);\n\n\n  return (\n    <Card style={{\n      position: \"absolute\",\n      left: \"0\",\n      width: \"100%\",\n      overflow: \"hidden\",\n      top: \"110%\",\n      zIndex: 1000,\n      border: \"1px solid #9c9ca1\"\n    }}\n      ref={searchInputRef}\n    >\n      <Card.Body>\n        <ListGroup className=\"overflow-auto\" style={{\n          maxHeight: \"200px\"\n        }}>\n          {\n            listMenu?.map((item: ItemCotizacionByNit) => (\n              <Card.Text\n                key={item.id}\n                className=\"px-3 py-2 cursor-pointer hover_selected_bg\"\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  borderBottom: \"1px solid #9c9ca1\"\n                }}\n                onClick={() => selectedSearchResult(item)}\n              >\n                {item.name}\n              </Card.Text>\n            ))\n          }\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { SeleccionarServiciosACotizarUI } from \"../Interfaces/Pages/SeleccionarServiciosACotizar.interface\";\n\nconst InputCheckbox = ({ item, handleSelectedServices }: { item: SeleccionarServiciosACotizarUI, handleSelectedServices: any }) => {\n  return (\n    <div className=\"w-100 mb-2 p-2 bg-white rounded shadow-sm\" style={{\n      border: `3px solid ${(item?.quotes! > 0) ? \"#fd7e14\" : \"#cdd4e2\"}`\n    }}>\n      <Form.Label\n        className=\"custom-control custom-checkbox\"\n      >\n        <Form.Control\n          type=\"checkbox\"\n          className=\"custom-control-input\"\n          name=\"profiles\"\n          value={item?.id}\n          checked={item?.quotes! > 0}\n          // user?.profiles?.some((obj: any) => obj.profile_id == item?.id)\n          onChange={() => handleSelectedServices(item)}\n        />\n        <span className=\"custom-control-label font-weight-bold\" style={{ color: \"#4A4A69\" }}>{item?.name}</span>\n      </Form.Label>\n    </div>\n  );\n};\n\nconst InputNumber = ({ item, handleSelectedServices }: { item: SeleccionarServiciosACotizarUI, handleSelectedServices: any }) => {\n  return (\n    <div className=\"w-100 d-flex justify-content-between align-items-center gap-2 mb-2 bg-white rounded p-2 shadow-sm\" style={{\n      border: `3px solid ${(item?.quotes! > 0) ? \"#fd7e14\" : \"#cdd4e2\"}`\n    }}>\n      <Form.Label className=\"font-weight-bold\" style={{ color: \"#4A4A69\" }}>\n        {item.name}\n      </Form.Label>\n      <input\n        type=\"number\"\n        className=\"text-center py-2 rounded\"\n        style={{ width: \"80px\", border: `2px solid ${(item?.quotes! > 0) ? \"#fd7e14\" : \"#cdd4e2\"}` }}\n        name=\"sort\"\n        value={item?.quotes || 0}\n        onChange={(e: any) => handleSelectedServices(item, e)}\n      />\n    </div>\n  );\n};\n\nexport const InputField = ({ inputData, handleSelectedServices }: { inputData: SeleccionarServiciosACotizarUI, handleSelectedServices: any }) => {\n  if (inputData.contable === 1) {\n    return <InputNumber item={inputData} handleSelectedServices={handleSelectedServices} />;\n  } else {\n    return <InputCheckbox item={inputData} handleSelectedServices={handleSelectedServices} />;\n  }\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getIconUtilityClass(slot) {\n  return generateUtilityClass('MuiIcon', slot);\n}\nconst iconClasses = generateUtilityClasses('MuiIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default iconClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"baseClassName\", \"className\", \"color\", \"component\", \"fontSize\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getIconUtilityClass } from './iconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\n\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(36)\n  }[ownerState.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: (theme.vars || theme).palette.primary.main,\n    secondary: (theme.vars || theme).palette.secondary.main,\n    info: (theme.vars || theme).palette.info.main,\n    success: (theme.vars || theme).palette.success.main,\n    warning: (theme.vars || theme).palette.warning.main,\n    action: (theme.vars || theme).palette.action.active,\n    error: (theme.vars || theme).palette.error.main,\n    disabled: (theme.vars || theme).palette.action.disabled,\n    inherit: undefined\n  }[ownerState.color]\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n\n  const {\n    baseClassName = 'material-icons',\n    className,\n    color = 'inherit',\n    component: Component = 'span',\n    fontSize = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, _extends({\n    as: Component,\n    className: clsx(baseClassName, // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (e.g. material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default Icon;"],"names":["initialState","id","city_id","description","email","name","nit","phone","status_id","address","email2","email3","phone2","phone3","units_total","units_budget","initialErrors","contact_phone","contact_person","form_nit","storageQuoteId","state","serviceType","handleClose","useState","dayjs","setDate","handlerRedirect","useTokenQuoteCheck","useFetch","getAllData","postData","getAllDataStringify","error","searchNit","setSearchNit","validatedCustom","setValidatedCustom","isPasswordTouched","setIsPasswordTouched","isSearchNitChange","setIsSearchNitChange","errors","setErrors","setHasErrors","cities","setCities","setListMenu","setShowListMenu","setIsLoading","location","useNavigate","useLocation","hasChangeNit","setHasChangeNit","data","setData","selectedCity","setSelectedCity","useAddInputs","handleAddInputEmail","handleAddInput","handleRemoveInputEmail","handleRemoveInput","handleInputChangeEmail","handleChangeInput","changeIsDisabledEmail","changeIsDisabled","setInputsEmail","handleResetInputs","mapInputArray","setInputs","inputsEmail","inputs","handleAddInputPhone","handleRemoveInputPhone","handleInputChangePhone","changeIsDisabledPhone","setInputsPhone","inputsPhone","BtnAddInput","handleAddInputType","isDisabled","IconButton","style","fontSize","className","onMouseDown","Icon","BtnSubsInput","handleSubsInputType","index","handlePhonesValidation","e","validationErrors","target","value","replace","slice","length","validator","prev","handleEmailsValidation","isValidEmail","handleChange","type","Number","isValidNit","isNumeric","test","Object","keys","handleSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","dataEmails","dataPhones","city_name","rest","selectedSearchResult","item","some","city","addDataUseInputs","resetChangeErrors","objErrors","forEach","key","console","log","itemsEmailValues","itemsEmails","itemsPhoneValues","itemsPhones","push","email1","showRemove","getData","params","response","limitedSearchResults","getCities","useEffect","meeting_date","status","subtitle","align","Col","lg","md","Card","noValidate","validated","onSubmit","Row","xs","sm","xl","htmlFor","message","inputFocus","onChange","onBlur","onFocus","required","Form","toString","map","inputValue","paddingLeft","FormGroup","color","onClick","show","Modal","size","onHide","initialForm","residential_id","demo_date","format","contact_name","contact_email","schedule_type","client_type","meeting_type","localStorage","getItem","putData","useErrors","setError","clearError","nameClient","setNameClient","onfocus","setOnfocus","isLoading","listMenu","showListMenu","form","setForm","setShow","res","getDataByNit","demoDateFormatted","payload","numericValue","prevForm","nameData","valueData","price","validateErrors","CustomError","position","width","left","top","textAlign","zIndex","Button","items","baseURL","title","placeholder","padding","border","disabled","residential_name","LocalizationProvider","height","dateAdapter","AdapterDayjs","DesktopDatePicker","label","inputFormat","date","renderInput","TextField","as","rows","to","process","ListGroupItem","React","ref","bsPrefix","active","eventKey","variant","action","props","useBootstrapPrefix","useNavItem","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","assign","Item","ListResults","searchInputRef","useRef","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","overflow","maxHeight","display","alignItems","borderBottom","InputCheckbox","handleSelectedServices","quotes","checked","InputNumber","InputField","inputData","contable","getIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","IconRoot","styled","overridesResolver","styles","ownerState","root","capitalize","theme","userSelect","flexShrink","inherit","small","typography","pxToRem","medium","large","primary","vars","palette","main","secondary","info","success","warning","inProps","useThemeProps","baseClassName","component","other","_objectWithoutPropertiesLoose","_extends","classes","slots","composeClasses","useUtilityClasses","clsx","muiName"],"sourceRoot":""}