{"version":3,"file":"static/js/4278.27fa3332.chunk.js","mappings":"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","sources":["components/Nexos/pages/Seguimiento/Seguimiento.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { BasicDataTable, TitleComponent, BreadCrumb } from '../../Global';\nimport { Link } from 'react-router-dom';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { TextField } from '@mui/material';\nimport { useFetch } from '../../hooks';\n\nconst Seguimiento = () => {\n  const [data, setData] = useState<any>([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const { getAllData, isLoading } = useFetch();\n  const [startDate, setStartDate] = useState<Dayjs | null>(dayjs());\n  const [endDate, setEndDate] = useState<Dayjs | null>(dayjs().add(1, \"month\"));\n  const current = new Date();\n  const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n\n  const handleInitialChange = (valueStartDate: Dayjs | null, valueEndDate: Dayjs | null) => {\n    const filteredData = data.filter((item: any) => {\n      return (new Date(dayjs(valueStartDate).format(\"MM/DD/YYYY\")).getTime() <= new Date(dayjs(item.meeting_date).format(\"MM/DD/YYYY\")).getTime()) && (new Date(dayjs(valueEndDate).format(\"MM/DD/YYYY\")).getTime() >= new Date(dayjs(item.meeting_date).format(\"MM/DD/YYYY\")).getTime())\n    });\n    setStartDate(valueStartDate!);\n    setEndDate(valueEndDate!)\n    setFilteredData(filteredData);\n  };\n\n  // Función para manejar cambios en las fechas de inicio\n  const handleStartDate = (valueStartDate: Dayjs | null) => {\n    // Validar la fecha de inicio aquí\n    if (!dayjs(valueStartDate).isValid()) {\n      //setError('La fecha de inicio no es válida');\n    } else {\n      //setError('');\n      setStartDate(valueStartDate);\n    }\n  };\n\n  // Función para manejar cambios en las fechas de hasta\n  const handleEndDate = (valueEndDate: Dayjs | null) => {\n    if (!dayjs(valueEndDate).isValid()) {\n\n    } else if (dayjs(endDate).isBefore(startDate)) {\n      setEndDate(valueEndDate);\n    } else {\n      setEndDate(valueEndDate);\n    }\n  };\n\n  const columns = [\n    {\n      Header: \"#\",\n      accessor: \"\",\n      className: \"wd-10p borderrigth\",\n      Cell: ({ row }: { row: any }) => {\n        const { index } = row;\n        // Adding 1 to the index to display the number starting from 1 instead of 0\n        const consecutiveNumber = index + 1;\n        return <span>{consecutiveNumber}</span>;\n      },\n    },\n    {\n      Header: 'Conjunto',\n      accessor: 'name',\n    },\n    {\n      Header: 'Nit',\n      accessor: 'nit',\n    },\n    {\n      Header: 'Consecutivo',\n      accessor: 'email',\n    },\n    {\n      Header: 'Fecha Asamblea',\n      accessor: 'meeting_date',\n      Cell: ({ value }: { value: any }) => {\n        return (\n          <span>{\n            value === \"None\"\n              ? \"NA\"\n              : dayjs(value).format(\"DD/MM/YYYY\")\n          }</span>\n        )\n      }\n    },\n    {\n      Header: 'Estado',\n      accessor: 'status',\n    },\n    {\n      Header: 'Fecha Seguimiento',\n      accessor: 'created_at',\n      Cell: ({ value }: { value: any }) => {\n        return (\n          <span>{\n            value === \"None\"\n              ? \"NA\"\n              : dayjs(value).format(\"DD/MM/YYYY\")\n          }</span>\n        )\n      }\n    },\n    {\n      Header: 'Seguimiento',\n      accessor: 'seguimiento',\n      Cell: ({ row }: { row: any }) => {\n        return (\n          <Link\n            to={`${process.env.PUBLIC_URL}/nexos/seguimientoorganizacion`}\n            state={row.original.id}\n          >\n            <span className=\"material-icons md-5 md-dark\">&#xe3c9;</span>\n          </Link>\n        )\n      }\n    },\n  ];\n\n  const getData = async () => {\n    try {\n      const newStartDate = dayjs(startDate).format(\"YYYY-MM-DD\");\n      const newEndDate = dayjs(endDate).format(\"YYYY-MM-DD\");\n      const response: any = await getAllData(`api/quotes/followup/list/${newStartDate}/${newEndDate}`);\n      setFilteredData(response);\n      setData(response);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (dayjs(startDate).isValid() && dayjs(endDate).isValid() && (dayjs(startDate).isBefore(endDate) || dayjs(startDate).isSame(endDate, \"date\"))) {\n      // && dayjs(endDate).isValid() && dayjs(endDate).isBefore(startDate)\n      getData();\n    }\n  }, [startDate, endDate]);\n  return (\n    <div>\n      {/* breadcrumb */}\n      <BreadCrumb\n        items={[\"INICIO\", \"VENTAS\", 'SEGUIMIENTO']}\n        baseURL={[\"/\", \"nexos/ventasconfirmaciones\", \"\"]}\n      />\n      {/* Component Title */}\n      <TitleComponent\n        title={'MODULO DE SEGUIMIENTO'}\n        align='center'\n      />\n\n      <div>\n        <LocalizationProvider style={{ height: 10 }} dateAdapter={AdapterDayjs}  >\n          <DesktopDatePicker\n            className=\"ms-3 text-primary\"\n            label=\"Fecha Desde\"\n            inputFormat=\"DD/MM/YYYY\"\n            value={startDate || dayjs()}\n            onChange={(newValue) => handleInitialChange(newValue, endDate)}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n\n        <LocalizationProvider style={{ height: 10 }} dateAdapter={AdapterDayjs}  >\n          <DesktopDatePicker\n            className=\"ms-3 text-primary\"\n            label=\"Fecha Hasta\"\n            inputFormat=\"DD/MM/YYYY\"\n            value={endDate || dayjs()}\n            onChange={(newValue) => handleInitialChange(startDate, newValue)}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n\n      {/* Component Table */}\n      <BasicDataTable\n        data={filteredData}\n        columns={columns}\n        /* filter date */\n        isLoading={isLoading}\n      />\n    </div>\n  );\n}\n\nexport default Seguimiento;"],"names":["useState","data","setData","filteredData","setFilteredData","useFetch","getAllData","isLoading","dayjs","startDate","setStartDate","add","endDate","setEndDate","current","Date","handleInitialChange","getDate","getMonth","getFullYear","valueStartDate","valueEndDate","filter","item","format","getTime","meeting_date","columns","Header","accessor","className","Cell","consecutiveNumber","row","index","value","to","process","state","original","id","getData","newStartDate","newEndDate","response","console","log","useEffect","isValid","isBefore","isSame","items","baseURL","title","align","style","height","dateAdapter","AdapterDayjs","label","inputFormat","onChange","newValue","renderInput","params"],"sourceRoot":""}