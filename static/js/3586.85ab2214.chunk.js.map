{"version":3,"file":"static/js/3586.85ab2214.chunk.js","mappings":"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","sources":["components/Nexos/pages/QuoteState/QuoteState.tsx"],"sourcesContent":["import React from 'react'\nimport { Card, Col, Row, Button, Form, FormGroup } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { useFetch } from '../../hooks/useFetch';\nimport { useAlert, useErrors } from '../../hooks';\nimport { TitleComponent, BreadCrumb, InputErrorMessage } from '../../Global';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { inputLabelClasses } from \"@mui/material/InputLabel\";\nimport validator from \"validator\";\nimport { CFormInput } from '@coreui/react';\n\nconst InitValues = {\n    id: 0,\n    name: \"\",\n    status_id: 1,\n}\n\nconst QuoteState = () => {\n    const [form, setForm] = useState<any>(InitValues);\n    const { postData } = useFetch();\n    const location: any = useLocation();\n    const { state: editItemData } = location;\n    const { handleEditConfirmation, handleSuccessAlert, handleErrorAlert } = useAlert();\n    const [inputFocus, setInputFocus] = useState(false);\n    const [hasErrors, setHasErrors] = useState(true);\n    const { errors, setError, clearError } = useErrors();\n\n    const handleChange = (e: any) => {\n        let { name, value, type } = e.target;\n\n        let newValue = type === \"radio\" ? parseInt(value) : value;\n\n        if (name === \"name\" && inputFocus) {\n            value = value.trim();\n            if (value === \"\" || validator.isEmpty(value)) {\n                setError(\"name\", [\"El campo nombre es obligatorio\"]);\n                setHasErrors(true);\n            } else {\n                setError(\"name\", [\"\"]);\n                setHasErrors(false);\n            }\n            setForm((prev: any) => ({\n                ...prev,\n                [name]: newValue\n            }));\n        }\n\n        if (name === \"status_id\") {\n            setForm((prev: any) => ({\n                ...prev,\n                [name]: newValue\n            }));\n        }\n    };\n\n    const handleInputFocus = () => {\n        setInputFocus(true);\n    };\n\n    const handlesubmit = (e: any) => {\n        e.preventDefault();\n        console.log(\"FORM:\", form);\n        selectFunction();\n    };\n\n    const selectFunction = () => {\n        if (location?.state?.id != null) {\n          editForm();\n        } else {\n          createForm();\n        }\n    };\n\n    const createForm = async () => {\n        try {\n            const payload = {\n                id: 0,\n                ...form\n            }\n            const res = await postData(payload, 'quoteStatus/create', false, \"listaestadoscotizacion\");\n        } catch (error) {\n            console.error(\"Error en createForm:\", error);\n            handleErrorAlert(\"Error al crear el form.\");\n        }\n    };\n\n    const editForm = async () => {\n        try {\n            // Mostrar la confirmación antes de editar el form\n            const confirmationResult = await handleEditConfirmation(\"¿Estás seguro que deseas editar este servicio?\");\n            if (confirmationResult.isConfirmed) {\n                const { id, ...rest } = form;\n                const payload = {\n                    ...rest,\n                    id: location?.state?.id,    \n                };\n                const res = await postData(payload, 'quoteStatus/create', false, \"listaestadoscotizacion\");\n            }\n        } catch (error) {\n            console.error(\"Error en editForm:\", error);\n            handleErrorAlert(\"Error al editar el form.\");\n        }\n    };\n\n    useEffect(() => {\n        if (!!editItemData) {\n            setForm(editItemData);\n            setHasErrors(false);\n        } \n    }, [editItemData]);\n\n\n  return (\n    <>\n            {/* <!-- breadcrumb --> */}\n            <BreadCrumb\n                items={['INICIO', 'ESTADO COTIZACIÓN', location?.state?.id ? \"Editar estado cotización\" : \"Agregar estado cotización\"]}\n                baseURL={['inicio', 'nexos/estadocotizacion', location?.state?.id ? \"estadocotizacion/\" + location?.state?.id : \"estadocotizacion\"]} />\n            {/* title component */}\n            <TitleComponent title={location?.state?.id ? \"Editar estado cotización\" : \"Agregar estado cotización\"} />\n            {/* Card */}\n            <Form className=\"form-horizontal\" onSubmit={handlesubmit}>\n                <Card className=\"w-100\">\n                    <Card.Body className=\"w-100\">\n                        <Col sm={12} md={12} lg={6} xl={6} className='mx-auto'>\n                            <Row className=\"justify-content-center mt-5 mb-3\">\n                                <Col sm={12} md={12} lg={12} xl={12}>\n                                    <FormGroup className=\"form-group w-100 m-0\">\n                                        <Form.Label className='mb-3'>NOMBRE DE LA COTIZACIÓN</Form.Label>\n                                        <InputErrorMessage message={errors?.name?.[0]}\n                                                    inputFocus={inputFocus}>\n                        <CFormInput\n                          type=\"text\"\n                          id=\"quote-autocomplete\"\n                          name=\"name\"\n                          onChange={handleChange}\n                          onBlur={handleChange}\n                          onFocus={handleInputFocus}\n                          value={form.name? form.name : \"\"}\n                          required\n                        />\n                      </InputErrorMessage>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n\n                            <Row className='mb-2'>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                    <FormGroup className=\"form-group text-center\">\n                                        <Form.Label className=\"form-label\">Estado</Form.Label>\n                                        <div className=\"custom-controls-stacked d-flex justify-content-center gap-5\">\n                                            <Form.Label className=\"custom-control custom-radio\">\n                                                <Form.Control\n                                                    type=\"radio\"\n                                                    className=\"custom-control-input\"\n                                                    name=\"status_id\"\n                                                    value={1}\n                                                    checked={form?.status_id === 1}\n                                                    onChange={handleChange}\n                                                    onClick={handleInputFocus}\n                                                />\n                                                <span className=\"custom-control-label\">Activo</span>\n                                            </Form.Label>\n                                            <Form.Label className=\"custom-control custom-radio\">\n                                                <Form.Control\n                                                    type=\"radio\"\n                                                    className=\"custom-control-input\"\n                                                    name=\"status_id\"\n                                                    value={0}\n                                                    checked={form?.status_id === 0}\n                                                    onChange={handleChange}\n                                                    onClick={handleInputFocus}\n                                                />\n                                                <span className=\"custom-control-label\">Inactivo</span>\n                                            </Form.Label>\n                                        </div>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n\n                            <Row className='mb-4'>\n                                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                    <Button\n                                        variant=\"\"\n                                        className=\"btn btn-primary\"\n                                        style={{ width: \"100%\" }}\n                                        type=\"submit\"\n                                        disabled={hasErrors}\n                                    >\n                                        {editItemData ? \"Guardar cambios\" : \"Editar cambios\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Card.Body>\n                </Card>\n            </Form>\n        </>\n  )\n}\n\nexport default QuoteState;"],"names":["InitValues","id","name","status_id","useState","form","setForm","postData","useFetch","location","useLocation","editItemData","state","useAlert","handleEditConfirmation","handleErrorAlert","handleSuccessAlert","inputFocus","setInputFocus","hasErrors","setHasErrors","useErrors","errors","setError","handleChange","clearError","e","target","value","newValue","type","parseInt","trim","validator","prev","handleInputFocus","selectFunction","editForm","createForm","payload","console","error","isConfirmed","rest","useEffect","items","baseURL","title","className","onSubmit","preventDefault","log","sm","md","lg","xl","message","onChange","onBlur","onFocus","required","xs","checked","onClick","variant","style","width","disabled"],"sourceRoot":""}