{"version":3,"file":"static/js/6835.ff96b507.chunk.js","mappings":"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","sources":["components/Nexos/pages/DiscountsToAprove/ListDiscountsToAprove5.tsx","helpers/FormatCurrency.tsx","../node_modules/@mui/material/esm/internal/switchBaseClasses.js","../node_modules/@mui/material/esm/internal/SwitchBase.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/esm/Checkbox/checkboxClasses.js","../node_modules/@mui/material/esm/Checkbox/Checkbox.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react'\nimport { Checkbox } from '@mui/material';\nimport { Response } from '../../Interfaces/Pages/Item.interface';\nimport { useFetch } from '../../hooks/useFetch';\nimport { TitleComponent, BreadCrumb, BasicDataTable } from '../../Global';\nimport { Card, Button, Form } from 'react-bootstrap';\nimport './style.scss';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAlert } from '../../hooks';\nimport { formatNumber } from '../../../../helpers';\n\nconst ListDiscounts = () => {\n    const [data, setData] = useState<any>([]);\n    const [dataDiscount, setDataDiscount] = useState<any>([]);\n    const [totalDiscount, setTotalDiscount] = useState<number>(0);\n    const [selectedRows, setSelectedRows] = useState<Set<number>>(new Set());\n    const quoteId = localStorage.getItem('form_quote_id');\n    const [focus, setFocus] = useState<number>(0);\n    const { getAllData } = useFetch();\n    const { postData } = useFetch();\n    const { handleInfoAlert, handleErrorAlert } = useAlert();\n    const navigate = useNavigate();\n    const [form, setForm] = useState<any>({\n        quote_id: quoteId,\n        items: [],\n    });\n\n    const isDiscountIdSelected = form.discount_id === \"\" || form.discount_id === \"seleccionar\" || form.discount_id === null || form.discount_id === undefined;\n\n    const handleCheckboxChange = useCallback((rowIndex: number) => {\n        const updatedSelectedRows = new Set(selectedRows);\n        if (updatedSelectedRows.has(rowIndex)) {\n            updatedSelectedRows.delete(rowIndex);\n            handleChange(rowIndex, 'discount', 0, data[rowIndex].quantity); // Pass quantity here\n        } else {\n            updatedSelectedRows.add(rowIndex);\n            const existingItemIndex = form.items.findIndex(\n                (item: any) => item.item_id === data[rowIndex].item_price_id\n            );\n            if (existingItemIndex !== -1) {\n                // Item already exists, update properties\n                const newForm = [...form.items];\n                newForm[existingItemIndex] = {\n                    ...newForm[existingItemIndex],\n                    value: data[rowIndex].quantity, // Set value to quantity\n                    discount: 0,\n                    is_discount_percentage: \"0\"\n                };\n                setForm({ ...form, items: newForm });\n            } else {\n                // Item doesn't exist, add it\n                const newForm = [...form.items];\n                newForm.push({\n                    item_id: data[rowIndex].item_price_id,\n                    value: data[rowIndex].quantity, // Set value to quantity\n                    discount: 0,\n                    is_discount_percentage: \"0\"\n                });\n                setForm({ ...form, items: newForm });\n            }\n        }\n        setSelectedRows(updatedSelectedRows);\n    }, [selectedRows, data, form]);\n\n    const handleChange = useCallback((rowIndex: number, field: string, value: any, quantity?: number) => {\n        setForm((prevForm: any) => {\n            const updatedItems = [...prevForm.items];\n\n            if (rowIndex >= updatedItems.length) {\n                updatedItems.push({\n                    item_id: data[rowIndex].item_price_id,\n                    value: quantity,\n                    discount: 0,\n                    is_discount_percentage: \"0\",\n                });\n            }\n\n            if (field === 'is_discount_percentage') {\n                updatedItems[rowIndex].is_discount_percentage = value;\n                if (value === '1') {\n                    // Reset discount if switching to percentage\n                    updatedItems[rowIndex].discount = 0;\n                } else {\n                    // Ensure discount is within the price range\n                    const maxDiscount = data[rowIndex].price; // Assuming price is available in data\n                    const sanitizedDiscount = Math.max(0, Math.min(value, maxDiscount));\n                    updatedItems[rowIndex].discount = sanitizedDiscount;\n                }\n            } else if (field === 'discount') {\n                if (updatedItems[rowIndex].is_discount_percentage === '0') {\n                    // Ensure discount is within the price range\n                    const maxDiscount = data[rowIndex].price; // Assuming price is available in data\n                    const sanitizedDiscount = Math.max(0, Math.min(value, maxDiscount));\n                    updatedItems[rowIndex].discount = sanitizedDiscount;\n                } else {\n                    // When is_discount_percentage is '1', restrict discount to a maximum of 100\n                    const maxPercentageDiscount = 100;\n                    const sanitizedPercentageDiscount = Math.max(0, Math.min(value, maxPercentageDiscount));\n                    updatedItems[rowIndex].discount = sanitizedPercentageDiscount;\n                }\n            }\n\n            setFocus(rowIndex);\n            return {\n                ...prevForm,\n                items: updatedItems,\n            };\n        });\n    }, [form]);\n\n    const handleStatusChange = (value: any) => {\n        setForm((prevForm: any) => ({\n            ...prevForm,\n            discount_id: parseInt(value),\n        }));\n    };\n    const handleCreate = async () => {\n        try {\n            const updatedForm = {\n                ...form,\n                items: form.items.map((item: any) => ({\n                    ...item,\n                    value: item.value === 0 ? data.find((dataItem: any) => dataItem.item_price_id === item.item_id)?.quantity || \"0\" : item.value,\n                    discount: item.discount || \"0\",\n                    is_discount_percentage: item.is_discount_percentage || \"0\",\n                })),\n            };\n            await postData(updatedForm, 'quotes/items/save', false, 'cotizacionpdf');\n        } catch (error) {\n            handleErrorAlert('Ha ocurrido un error con el descuento a aplicar, intente nuevamente')\n            console.error(\"Error in createItem:\", error);\n        }\n    };\n\n    const handleDelete = (item_id: number) => {\n        const updatedData = data.filter((item: any) => item.item_price_id !== item_id);\n        const updatedFormItems = form.items.filter((item: any) => item.item_id !== item_id);\n        setData(updatedData);\n        setForm({ ...form, items: updatedFormItems });\n    };\n\n    let columns: any[] = [\n        {\n            Header: \"N°\",\n            accessor: \"\",\n            className: \"wd-5p borderrigth\",\n            Cell: ({ row }: { row: any }) => {\n                const { index } = row;\n                const consecutiveNumber = index + 1;\n                return <span>{consecutiveNumber}</span>;\n            },\n        },\n        {\n            Header: \"Nombre Items\",\n            accessor: \"name\",\n            Cell: ({ value }: { value: string }) => <span>{value.toUpperCase()}</span>,\n        },\n        {\n            Header: \"Cantidad\",\n            accessor: \"quantity\",\n        },\n        {\n            Header: \"Precio\",\n            accessor: \"price\",\n            Cell: ({ value, row }: { value: string, row: any }) => (\n                <span>\n                    {`$ ${value}`}\n                </span>\n            ),\n        },\n        {\n            Header: \"Descuento\",\n            accessor: \"value\",\n            Cell: ({ value, row }: { value: number; row: any }) => (\n                <Checkbox\n                    checked={selectedRows.has(row.index)}\n                    color={value === 1 ? \"success\" : \"warning\"}\n                    onChange={() => handleCheckboxChange(row.index)}\n                />\n            ),\n        },\n    ]\n    if (selectedRows.size > 0) {\n        columns = [\n            ...columns,\n            {\n                Header: \"Porcentaje\",\n                accessor: \"\",\n                Cell: ({ row }: { row: any }) => (\n                    selectedRows.has(row.index) ? (\n                        <Form.Select\n                            value={form.items[row.index]?.is_discount_percentage || \"\"}\n                            aria-label=\"Default select example\"\n                            onChange={(e) => handleChange(row.index, 'is_discount_percentage', e.target.value)}\n                            className=\"form-control\"\n                        >\n                            <option className='option' value=\"1\">Si</option>\n                            <option className='option' value=\"0\">No</option>\n                        </Form.Select>\n                    ) : null\n                ),\n            },\n            {\n                Header: \"Valor descuento\",\n                accessor: \"\",\n                Cell: ({ row }: { row: any }) => (\n                    selectedRows.has(row.index) ? (\n                        <Form.Control\n                            className=\"form-control\"\n                            type='text'\n                            autoFocus={row.index === focus}\n                            required\n                            value={form.items[row.index]?.discount || \"\"}\n                            onChange={(e: any) => handleChange(row.index, 'discount', e.target.value)}\n                        />\n                    ) : null\n                ),\n            },\n        ];\n    }\n    columns = [\n        ...columns,\n        {\n            Header: \"Quitar\",\n            accessor: \"\",\n            className: \"wd-15p borderrigth\",\n            Cell: ({ row }: { row: any }) => (\n                <div\n                    className=\"d-flex align-items-center gap-1 cursor-pointer\"\n                    onClick={() => handleDelete(row.original.item_price_id)}\n                >\n                    <span className=\"material-icons md-5 md-dark\">&#xe872;</span>\n                    Quitar\n                </div>\n            ),\n        }\n    ];\n    const totalAmount = quoteId ? data.reduce(\n        (total: any, item: any) => total + parseFloat(item.amount),\n        0\n    ) : 0;\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const response: Response = await getAllData(`api/quotes/items/${quoteId}`);\n                const resDataDiscount: Response[] = await getAllData(`api/discount/list/active`);\n\n                if (response.content && Array.isArray(response.content)) {\n                    setData(response.content);\n                    setForm((prevForm: any) => ({\n                        ...prevForm,\n                        items: response.content.map((item: any) => ({\n                            item_id: item.item_price_id,\n                            value: 0,\n                            discount: 0,\n                            is_discount_percentage: \"0\",\n                        })),\n                    }));\n                } else {\n                    console.error(\"Respuesta inválida:\", response);\n\n                    if (quoteId) {\n                        handleInfoAlert('No hay descuentos para aplicar.', '/cotizar');\n                    } else {\n                        handleInfoAlert('No hay descuentos para aplicar.', '/cotizar');\n                    }\n                }\n\n                setDataDiscount(resDataDiscount);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        getData();\n    }, [navigate]);\n\n    useEffect(() => {\n        if (data.length > 0) {\n            const thisIsDiscounts = Array.from(selectedRows).reduce(\n                (totalDiscount, rowIndex) => {\n                    const item = form.items[rowIndex];\n                    if (item && item.is_discount_percentage === '1') {\n                        const price = data[rowIndex].price;\n                        const discountPercentage = item.discount / 100;\n                        totalDiscount += price * discountPercentage;\n                    } else {\n                        totalDiscount += parseFloat(item.discount || 0);\n                    }\n                    return totalDiscount;\n                },\n                0\n            );\n            setTotalDiscount(thisIsDiscounts);\n        }\n    }, [selectedRows, data, form.items]);\n\n    const TotalCard: React.FC<{ totalAmount: number }> = ({ totalAmount }) => {\n        const totalPriceSum = data.reduce(\n            (total: number, item: any) => total + parseFloat(item.price),\n            0\n        );\n        const discount = dataDiscount.find((discount: any) => discount.id === form.discount_id);\n\n        let totalAfterDiscount = totalPriceSum - totalDiscount;\n        let discountAmountMap = 0;\n\n        if (discount) {\n            if (discount.is_percentage === 0) {\n                discountAmountMap = parseFloat(discount.amount); // Convertir a número decimal\n                totalAfterDiscount -= discountAmountMap;\n            } else if (discount.is_percentage === 1) {\n                const discountAmount = (totalPriceSum * parseFloat(discount.amount)) / 100;\n                totalAfterDiscount -= discountAmount;\n                discountAmountMap = discountAmount;\n            }\n        }\n        if (totalAfterDiscount < 0) {\n            handleInfoAlert('Verificar descuentos para poder continuar');\n            totalAfterDiscount = 0\n            //variable true\n        } else {\n            //variable false\n        }\n\n        return (\n            <Card>\n                <Card.Body className=\"px-3\">\n                    <div className=\"table-responsive\">\n                        <table className=\"table mb-0 \">\n                            <tbody>\n                                <tr>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle fw-bold text-uppercase\">Descuento</span>\n                                    </th>\n                                    <th className='text-center'>\n                                        <div className=\"d-flex align-items-start flex-column \">\n                                            {!form.discount_id ? (\n                                                <Form.Select\n                                                    name=\"discount_id\"\n                                                    aria-label=\"Default select example\"\n                                                    onChange={(e) => handleStatusChange(e.target.value)}\n                                                    value=\"\"\n                                                >\n                                                    {dataDiscount.some((discount: any) => discount.name === \"No Aplicar Descuento\") && (\n                                                        <option value=\"\">No aplicar descuento</option>\n                                                    )}\n                                                    \n                                                    {dataDiscount\n                                                        .filter((discount: any) => discount.name !== \"No aplicar descuento\")\n                                                        .map((discount: any) => (\n                                                            <option key={discount.id} value={discount.id}>\n                                                                {discount.name}\n                                                            </option>\n                                                        ))\n                                                    }\n                                                </Form.Select>\n                                            ) : (\n                                                <Form.Select\n                                                    name=\"discount_id\"\n                                                    aria-label=\"Default select example\"\n                                                    onChange={(e) => handleStatusChange(e.target.value)}\n                                                    value={form.discount_id}\n                                                >\n                                                    {dataDiscount.map((discount: any) => (\n                                                        <option className='' key={discount.id} value={discount.id}>\n                                                            {discount.name}\n                                                        </option>\n                                                    ))}\n                                                </Form.Select>\n                                            )}\n                                        </div>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle fw-bold text-uppercase\">Subtotal</span>\n                                    </th>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle\"><b>$</b>{formatNumber(totalPriceSum, 2)}</span>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle fw-bold text-uppercase\">Descuentos</span>\n                                    </th>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle\"><b>$</b> {formatNumber(discountAmountMap + totalDiscount, 2)} </span>\n                                    </th>\n                                </tr>\n                                <tr className='bg-darkorange text-light'>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle fw-bold text-uppercase\">Total</span>\n                                    </th>\n                                    <th className='text-center'>\n                                        <span className=\"tabletitle\"><b>$</b> {formatNumber(totalAfterDiscount, 2)} </span>\n                                    </th>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </Card.Body>\n            </Card>\n        );\n    };\n\n    return (\n        <div>\n            {/* Breadcrumb */}\n            <BreadCrumb\n                items={['inicio', 'lista DE DESCEUNTOS']}\n                baseURL={['inicio', 'nexos/listadescuentos']}\n            />\n            {/* Component Title */}\n            <TitleComponent\n                title={'DESCUENTOS A APLICAR'}\n            />\n            {/* Data Grid Table */}\n            <BasicDataTable\n                columns={columns}\n                data={data}\n                totalFunc={() => <TotalCard totalAmount={totalAmount} />}\n            />\n            <div className='text-end'>\n                <Link to={`${process.env.PUBLIC_URL}/nexos/cotizacionpdf`} className=\"header-logo\">\n                    <Button\n                        variant=\"\"\n                        className=\"btn btn-primary me-2\"\n                    >\n                        Volver\n                    </Button>\n                </Link>\n                <Button\n                    variant=\"\"\n                    className=\"btn btn-primary\"\n                    onClick={handleCreate}\n                    disabled={isDiscountIdSelected}\n                >\n                    Continuar\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default ListDiscounts;","export const formatNumber = (value: number | string, decimals: number = 2): string => {\n    // Convierte el valor a número si es un string válido que representa un número\n    const numericValue: number = typeof value === 'string' ? parseFloat(value) : Number(value);\n\n    if (isNaN(numericValue)) {\n        throw new Error('El valor proporcionado no es un número válido.');\n    }\n\n    // Decide si se debe formatear como decimal o entero\n    const formattedValue = Number.isInteger(numericValue)\n        ? numericValue.toLocaleString()\n        : numericValue.toFixed(decimals).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    return formattedValue;\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["useState","data","setData","dataDiscount","setDataDiscount","totalDiscount","setTotalDiscount","Set","selectedRows","setSelectedRows","quoteId","localStorage","getItem","focus","setFocus","getAllData","useFetch","postData","useAlert","handleInfoAlert","handleErrorAlert","navigate","useNavigate","quote_id","items","form","setForm","isDiscountIdSelected","discount_id","undefined","handleCheckboxChange","useCallback","rowIndex","updatedSelectedRows","has","delete","handleChange","quantity","add","existingItemIndex","findIndex","item","item_id","item_price_id","newForm","value","discount","is_discount_percentage","push","field","prevForm","updatedItems","length","maxDiscount","price","sanitizedDiscount","Math","max","min","sanitizedPercentageDiscount","handleStatusChange","parseInt","handleCreate","updatedForm","map","find","dataItem","console","error","columns","Header","accessor","className","Cell","consecutiveNumber","row","index","toUpperCase","Checkbox","checked","color","onChange","size","Form","e","target","type","autoFocus","required","onClick","updatedData","filter","updatedFormItems","handleDelete","original","totalAmount","reduce","total","parseFloat","amount","useEffect","getData","response","resDataDiscount","content","Array","isArray","thisIsDiscounts","from","TotalCard","totalPriceSum","id","totalAfterDiscount","discountAmountMap","is_percentage","discountAmount","Card","name","some","formatNumber","baseURL","title","totalFunc","to","process","Button","variant","disabled","decimals","numericValue","Number","isNaN","Error","formattedValue","isInteger","toLocaleString","toFixed","replace","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","React","props","ref","checkedProp","checkedIcon","defaultChecked","disabledProp","disableFocusRipple","icon","inputProps","inputRef","onBlur","onFocus","readOnly","tabIndex","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize"],"sourceRoot":""}