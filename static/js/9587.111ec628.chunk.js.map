{"version":3,"file":"static/js/9587.111ec628.chunk.js","mappings":"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","sources":["components/Nexos/pages/schecdulle/VisitsDemosMeetings/VisitsDemosMeetings.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { TitleComponent, BreadCrumb, BasicDataTable, ConfirmationCardButton } from \"../../../Global\";\nimport { useFetch } from \"../../../hooks/useFetch\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DesktopDatePicker } from \"@mui/x-date-pickers/DesktopDatePicker\";\nimport { TextField } from \"@mui/material\";\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n\n/* Columns for the Data Table */\nconst columns: any[] = [\n  {\n    Header: \"#\",\n    accessor: \"\",\n    className: \"wd-10p borderrigth\",\n    Cell: ({ row }: { row: any }) => {\n      const { index } = row;\n      const consecutiveNumber = index + 1;\n      return <span>{consecutiveNumber}</span>;\n    },\n  },\n  {\n    Header: \"Cliente\",\n    accessor: \"residential_name\",\n    className: \"wd-25p borderrigth\",\n  },\n  {\n    Header: \"Fecha de agendamiento\",\n    accessor: \"demo_date\",\n    className: \"wd-25p borderrigth\",\n    Cell: ({ value }: any) => {\n      return <p>{dayjs(value).format(\"DD/MM/YYYY\")}</p>;\n    },\n  },\n  {\n    Header: \"Tipo de agendamiento\",\n    accessor: \"schedule_type\",\n    className: \"wd-25p borderrigth\",\n  },\n  {\n    Header: \"Agendado por\",\n    accessor: \"user_name\",\n    className: \"wd-20p borderrigth\",\n  },\n  {\n    Header: \"Acción\",\n    accessor: \"\",\n    className: \"wd-15p borderrigth\",\n    // Custom cell rendering for the \"Accion\" column with a link to edit the profile\n    Cell: ({ row }: { row: any }) => {\n      return (\n        <Link\n          to={`${process.env.PUBLIC_URL}/nexos/visitasdemosreunionesform`}\n          state={row.original}\n        >\n          <span className=\"material-icons md-5 md-dark\">&#xe3c9;</span>\n        </Link>\n      );\n    },\n  },\n];\n\nconst VisitsDemosMeetings = () => {\n  const [data, setData] = useState<any>([]);\n  const { getAllData, isLoading, error } = useFetch();\n  const [startDate, setStartDate] = useState<Dayjs | null>(dayjs());\n  const [endDate, setEndDate] = useState<Dayjs | null>(dayjs().add(1, \"month\"));\n  const [dateSelected, setDateSelected] = useState<boolean>(false); // Nuevo estado\n\n  // Función para manejar cambios en las fechas de inicio\n  const handleStartDate = (valueStartDate: Dayjs | null) => {\n    //const inputDate = e.target.value;\n    // Validar la fecha de inicio aquí\n    if (!dayjs(valueStartDate).isValid()) {\n      //setError('La fecha de inicio no es válida');\n    } else {\n      //setError('');\n      setStartDate(valueStartDate);\n    }\n  };\n\n  // Función para manejar cambios en las fechas de hasta\n  const handleEndDate = (valueEndDate: Dayjs | null) => {\n    if (!dayjs(valueEndDate).isValid()) {\n\n    } else if (dayjs(endDate).isBefore(startDate)) {\n      setEndDate(valueEndDate);\n    } else {\n      setEndDate(valueEndDate);\n    }\n  };\n  \n\n  // Efecto para obtener los datos al cargar el componente\n  const getData = async () => {\n    try {\n      const newStartDate = dayjs(startDate).format(\"YYYY-MM-DD\");\n      const newEndDate = dayjs(endDate).format(\"YYYY-MM-DD\");\n      const response: any = await getAllData(`api/residential/demoScheduling/list/${newStartDate}/${newEndDate}`);\n      console.log({response})\n      setData(response);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Efecto para filtrar los datos por fecha\n  useEffect(() => {\n    if (dayjs(startDate).isValid() && dayjs(endDate).isValid() && (dayjs(startDate).isBefore(endDate) || dayjs(startDate).isSame(endDate, \"date\"))) {\n      // && dayjs(endDate).isValid() && dayjs(endDate).isBefore(startDate)\n      getData();\n    }\n  }, [startDate, endDate]);\n\n  return (\n    <div>\n      {/* Breadcrumb */}\n      <BreadCrumb\n        items={[\"inicio\", \"lista visitas, demos, reuniones\"]}\n        baseURL={[\"inicio\", \"nexos/visitasdemosreuniones\"]}\n      />\n      {/* Component Title */}\n      <TitleComponent title={\"VISITAS, DEMOS, REUNIONES\"} />\n      {\n        (error) && (\n          <ConfirmationCardButton\n            baseURL='#'\n            title='Error'\n            subtitle={`${error?.message}`}\n          />\n        )\n      }\n\n      <div>\n        <LocalizationProvider style={{ height: 10 }} dateAdapter={AdapterDayjs}  >\n          <DesktopDatePicker\n            className=\"ms-3 text-primary\"\n            label=\"Fecha Desde\"\n            inputFormat=\"DD/MM/YYYY\"\n            value={startDate || dayjs()}\n            onChange={(newValue) => handleStartDate(newValue)} // Modifica esta línea\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <LocalizationProvider style={{ height: 10 }} dateAdapter={AdapterDayjs}  >\n          <DesktopDatePicker\n            className=\"ms-3 text-primary\"\n            label=\"Fecha Hasta\"\n            inputFormat=\"DD/MM/YYYY\"\n            value={endDate || dayjs()}\n            onChange={(newValue) => handleEndDate(newValue)}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n\n      {\n        /* Data Grid Table */\n        <BasicDataTable\n          columns={columns}\n          data={data}\n          addButtonLink={`${process.env.PUBLIC_URL}/nexos/visitasdemosreunionesform`}\n          isLoading={isLoading}\n          exceptionTitleText='Por favor, selecciona un rango de fechas para mostrar los datos'\n          exceptionSubtitleText=''\n        />\n      }\n    </div>\n  );\n};\n\nexport default VisitsDemosMeetings;\n"],"names":["columns","Header","accessor","className","Cell","consecutiveNumber","row","index","value","dayjs","format","to","process","state","original","useState","data","setData","useFetch","getAllData","isLoading","error","startDate","setStartDate","add","endDate","setEndDate","getData","newStartDate","newEndDate","response","console","log","useEffect","isValid","isBefore","isSame","items","baseURL","title","subtitle","message","style","height","dateAdapter","AdapterDayjs","label","inputFormat","onChange","newValue","valueStartDate","renderInput","params","valueEndDate","addButtonLink","exceptionTitleText","exceptionSubtitleText"],"sourceRoot":""}