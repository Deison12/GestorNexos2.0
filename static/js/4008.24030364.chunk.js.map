{"version":3,"file":"static/js/4008.24030364.chunk.js","mappings":"4NAeMA,EAAiB,CACrB,CACEC,OAAQ,QACRC,SAAU,GACVC,UAAW,oBACXC,KAAM,YAA4B,IAE1BC,EAFI,EAAHC,IACCC,MAC0B,EAClC,OAAO,0BAAOF,GAChB,GAEF,CACEJ,OAAQ,SACRC,SAAU,OACVC,UAAW,qBACXC,KAAM,gBAAGI,EAAK,EAALA,MAAK,OAA0B,0BAAOA,EAAMC,eAAqB,GAE5E,CACER,OAAQ,iBACRC,SAAU,cACVC,UAAW,sBAEb,CACEF,OAAQ,QACRC,SAAU,SACVC,UAAW,qBACXC,KAAM,gBAAGI,EAAK,EAALA,MAAOF,EAAG,EAAHA,IAAG,OACjB,0BACkC,IAA/BA,EAAII,SAASC,cAAmB,UAC1BH,EAAK,mBACHI,EAAAA,EAAAA,GAAaJ,EAAO,KACxB,GAGX,CACEP,OAAQ,aACRC,SAAU,gBACVC,UAAW,qBAEXC,KAAM,YAAQ,OACF,IADE,EAALI,OACO,+BAAY,6BAAS,GAEvC,CACEP,OAAQ,SACRC,SAAU,YACVC,UAAW,qBAEXC,KAAM,YAAQ,OACF,IADE,EAALI,OAEL,SAAC,IAAI,CAACK,MAAM,SAASC,MAAM,UAAUC,QAAQ,cAE7C,SAAC,IAAI,CAACF,MAAM,WAAWC,MAAM,QAAQC,QAAQ,YAC9C,GAEL,CACEd,OAAQ,SACRC,SAAU,GACVC,UAAW,qBAEXC,KAAM,YAA4B,IAAzBE,EAAG,EAAHA,IACP,OACE,SAAC,KAAI,CACHU,GAAE,UAAKC,aAAsB,0BAC7BC,MAAOZ,EAAII,SAAS,UAEpB,iBAAMP,UAAU,8BAA6B,qBAGnD,IAoDJ,UAhDsB,WAEpB,OAAwBgB,EAAAA,EAAAA,UAAc,IAAG,eAAlCC,EAAI,KAAEC,EAAO,KACpB,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAW/B,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,yCAAG,kHAEqBJ,EAAW,qBAAqB,KAAD,EAA1DK,EAAkB,OACxBP,EAAQO,GAAU,uGAErB,kBALY,mCAMbD,GACF,GAAG,KAGD,4BAEE,SAAC,KAAU,CACTE,MAAO,CAAC,SAAU,uBAClBC,QAAS,CAAC,SAAU,4BAItB,SAAC,KAAc,CAACC,MAAO,wBAEtBN,IACC,SAAC,KAAsB,CACrBK,QAAQ,IACRC,MAAM,QACNC,SAAQ,UAAU,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOQ,YAMrBR,IACC,SAAC,KAAc,CACbzB,QAASA,EACToB,KAAMA,EACNc,cAAa,UAAKjB,aAAsB,yBACxCO,UAAWA,MAMvB,C,wDCrIO,IAAMZ,EAAe,SAACJ,GAA0D,IAAlC2B,EAAgB,uDAAG,EAE9DC,EAAwC,kBAAV5B,EAAqB6B,WAAW7B,GAAS8B,OAAO9B,GAEpF,GAAI+B,MAAMH,GACN,MAAM,IAAII,MAAM,wDAIpB,IAAMC,EAAiBH,OAAOI,UAAUN,GAClCA,EAAaO,iBACbP,EAAaQ,QAAQT,GAAUU,QAAQ,wBAAyB,KAEtE,OAAOJ,CACX,C","sources":["components/Nexos/pages/Discounts/ListDiscounts.tsx","helpers/FormatCurrency.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Chip } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport { Response } from \"../../Interfaces/Pages/Item.interface\";\n\nimport {\n  TitleComponent,\n  BreadCrumb,\n  BasicDataTable,\n  ConfirmationCardButton,\n} from \"../../Global\";\nimport { formatNumber } from \"../../../../helpers\";\n\n/* Columns for the Data Table */\nconst columns: any[] = [\n  {\n    Header: \"N°\",\n    accessor: \"\",\n    className: \"wd-5p borderrigth\",\n    Cell: ({ row }: { row: any }) => {\n      const { index } = row;\n      const consecutiveNumber = index + 1;\n      return <span>{consecutiveNumber}</span>;\n    },\n  },\n  {\n    Header: \"Nombre\",\n    accessor: \"name\",\n    className: \"wd-25p borderrigth\",\n    Cell: ({ value }: { value: string }) => <span>{value.toUpperCase()}</span>,\n  },\n  {\n    Header: \"Descripción\",\n    accessor: \"description\",\n    className: \"wd-25p borderrigth\",\n  },\n  {\n    Header: \"Valor\",\n    accessor: \"amount\",\n    className: \"wd-25p borderrigth\",\n    Cell: ({ value, row }: { value: string; row: any }) => (\n      <span>\n        {row.original.is_percentage === 1\n          ? `${value} %`\n          : `$ ${formatNumber(value, 2)}`}\n      </span>\n    ),\n  },\n  {\n    Header: \"Porcentaje\",\n    accessor: \"is_percentage\",\n    className: \"wd-25p borderrigth\",\n    // Custom cell rendering to display status as a Chip component\n    Cell: ({ value }: { value: number }) =>\n      value === 1 ? <p>Si</p> : <p>No</p>,\n  },\n  {\n    Header: \"Estado\",\n    accessor: \"status_id\",\n    className: \"wd-20p borderrigth\",\n    // Custom cell rendering to display status as a Chip component\n    Cell: ({ value }: { value: number }) =>\n      value === 1 ? (\n        <Chip label=\"Activo\" color=\"success\" variant=\"outlined\" />\n      ) : (\n        <Chip label=\"Inactivo\" color=\"error\" variant=\"outlined\" />\n      ),\n  },\n  {\n    Header: \"Editar\",\n    accessor: \"\",\n    className: \"wd-15p borderrigth\",\n    // Custom cell rendering for the \"Accion\" column with a link to edit the profile\n    Cell: ({ row }: { row: any }) => {\n      return (\n        <Link\n          to={`${process.env.PUBLIC_URL}/nexos/editardescuento`}\n          state={row.original}\n        >\n          <span className=\"material-icons md-5 md-dark\">&#xe3c9;</span>\n        </Link>\n      );\n    },\n  },\n];\n\nconst ListDiscounts = () => {\n  //geting data\n  const [data, setData] = useState<any>([]);\n  const { getAllData, isLoading, error } = useFetch();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response: Response = await getAllData(\"api/discount/list\");\n        setData(response);\n      } catch (error) {}\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      {/* Breadcrumb */}\n      <BreadCrumb\n        items={[\"inicio\", \"lista DE DESCEUNTOS\"]}\n        baseURL={[\"inicio\", \"nexos/listadescuentos\"]}\n      />\n\n      {/* Component Title */}\n      <TitleComponent title={\"LISTA DE DESCUENTOS\"} />\n\n      {error && (\n        <ConfirmationCardButton\n          baseURL=\"#\"\n          title=\"Error\"\n          subtitle={`${error?.message}`}\n        />\n      )}\n\n      {\n        /* Data Grid Table */\n        !error && (\n          <BasicDataTable\n            columns={columns}\n            data={data}\n            addButtonLink={`${process.env.PUBLIC_URL}/nexos/creardescuento`}\n            isLoading={isLoading}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default ListDiscounts;\n","export const formatNumber = (value: number | string, decimals: number = 2): string => {\n    // Convierte el valor a número si es un string válido que representa un número\n    const numericValue: number = typeof value === 'string' ? parseFloat(value) : Number(value);\n\n    if (isNaN(numericValue)) {\n        throw new Error('El valor proporcionado no es un número válido.');\n    }\n\n    // Decide si se debe formatear como decimal o entero\n    const formattedValue = Number.isInteger(numericValue)\n        ? numericValue.toLocaleString()\n        : numericValue.toFixed(decimals).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    return formattedValue;\n};\n"],"names":["columns","Header","accessor","className","Cell","consecutiveNumber","row","index","value","toUpperCase","original","is_percentage","formatNumber","label","color","variant","to","process","state","useState","data","setData","useFetch","getAllData","isLoading","error","useEffect","getData","response","items","baseURL","title","subtitle","message","addButtonLink","decimals","numericValue","parseFloat","Number","isNaN","Error","formattedValue","isInteger","toLocaleString","toFixed","replace"],"sourceRoot":""}