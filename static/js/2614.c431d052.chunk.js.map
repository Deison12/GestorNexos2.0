{"version":3,"file":"static/js/2614.c431d052.chunk.js","mappings":"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","sources":["components/Nexos/pages/Confirmaciones/ModalVerification.tsx","components/Nexos/pages/Confirmaciones/ModalMensajes.tsx","components/Nexos/Global/ModalCreateMessage.tsx","components/Nexos/pages/Confirmaciones/VerifyConfirmation.tsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\nimport { TitleComponent } from \"../../Global\";\n\nconst ModalVerification = ({\n  data,\n  showModal,\n  onClose,\n  onSubmit,\n  quote_number,\n  message,\n  setMessage\n}: any) => {\n  const [status, setStatus] = useState(\"\");\n\n  const handleModalClose = async () => {\n    onClose()\n    setMessage('')\n  };\n  const isMessageEmpty = message.trim() === \"\";\n\n  const handleFormSubmit = (status: string) => {\n    if (status === 'rechazado') {\n      setStatus('rechazado')\n    } else {\n      setStatus('verificado')\n    }\n    if (isMessageEmpty) {\n    } else {\n      onSubmit({ message, status });\n    }\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      show={showModal}\n      onHide={handleModalClose}\n      keyboard={false}\n    >\n      <Modal.Body>\n        <Form.Group>\n          <TitleComponent title=\"CASTILLA RESERVADO\"  align=\"center\" />\n\n          <h5 className=\"text-center\"> Tipo de asamblea: <b className=\"text-primary text-uppercase\">   {data.meeting_type}</b> </h5>\n          <h5 className=\"text-center\"> Número de cotización: <b className=\"text-primary text-uppercase\">  {quote_number} </b> </h5>\n          <hr />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Motivo:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={4}\n            name=\"message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"dark\"\n          onClick={handleModalClose}>\n          Volver\n        </Button>\n        <Button\n          variant=\"danger\"\n          disabled={isMessageEmpty}\n          onClick={() => handleFormSubmit('rechazado')}>\n          Rechazado\n        </Button>\n        <Button\n          disabled={isMessageEmpty}\n          variant=\"primary\"\n          onClick={() => handleFormSubmit('verificado')}\n        >\n          Verificado\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalVerification;","import React, { useState } from \"react\";\nimport { Modal, Button, Card, Form } from \"react-bootstrap\";\nimport \"./ModalMensajes.scss\";\nimport { TitleComponent } from \"../../Global\";\nimport dayjs from \"dayjs\";\n\nconst ModalMensajes = ({ showModal, onClose, messages, inCharge }: any) => {\n    const [showFullNote, setShowFullNote] = useState(false);\n    const [expandedNoteIndex, setExpandedNoteIndex] = useState<number | null>(null);\n    const [priorityFilter, setPriorityFilter] = useState(\"all\");\n\n    const handleVerClick = (index: number) => {\n        setExpandedNoteIndex(index);\n        setShowFullNote(true);\n    };\n\n    const handleVerMenosClick = () => {\n        setExpandedNoteIndex(null);\n        setShowFullNote(false);\n    };\n\n    const handlePrioritySelectChange = (e: any) => {\n        setPriorityFilter(e.target.value);\n    };\n\n    // Filtrar mensajes según el valor del select\n    const filteredMessages = priorityFilter === \"all\"\n        ? messages\n        : messages.filter((note: any) => note.priority === Number(priorityFilter));\n\n    return (\n        <Modal\n            show={showModal}\n            onHide={onClose}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            scrollable\n        >\n            <Modal.Header >\n                <div className=\"d-flex flex-column w-100\">\n                    <TitleComponent title=\"Mensajes\" />\n                    <Form.Select\n                        id=\"priorityFilter\"\n                        value={priorityFilter}\n                        onChange={handlePrioritySelectChange}\n                    >\n                        <option value=\"all\">Todos</option>\n                        <option value=\"1\">Prioritarios</option>\n                        <option value=\"0\">No prioritarios</option>\n                    </Form.Select>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n\n                <hr />\n                <div className=\"grid-messages\">\n                    <div className=\"messages-container\">\n                        {filteredMessages.slice().reverse().map((note: any, index: number) => (\n\n                            <Card\n                                className={`pt-4 pb-1 px-4 ${note.priority == 1 ? 'priority1-card' : ''\n                                    }`}\n                                key={index}\n                                style={{\n                                    boxShadow:\n                                        expandedNoteIndex === index\n                                            ? '0 0 5px #ff7300'\n                                            : '0 0 5px #a8a6a6',\n                                    border:\n                                        expandedNoteIndex === index\n                                            ? 'solid 1px #ff7300'\n                                            : '',\n                                }}\n                            >\n                                <span className=\"mb-2\" >\n                                    <b className=\"font-message-title\">Usuario:</b> <p className=\"font-message\"> {note.name} - {dayjs(note.created_at).format(\"DD-MM-YYYY - HH:mm A\")}</p>\n                                </span>\n                                <span className=\"font-message\">\n                                    <b className=\"font-message-title\">Nota:</b>\n                                </span>\n                                {showFullNote && expandedNoteIndex === index ? (\n                                    <div>\n                                        <p className=\"font-message\">{note.message}</p>\n                                        <div className=\"text-end\" >\n                                            <Button\n                                                variant=\"link\"\n                                                className=\"btn-message-hover font-message\"\n                                                onClick={handleVerMenosClick}\n                                            >\n                                                Ver menos\n                                            </Button>\n                                        </div>\n\n                                    </div>\n                                ) : (\n                                    <div className=\"mb-2\">\n                                        <p className=\"font-message\">\n                                            {note.message.length > 100\n                                                ? note.message.slice(0, 100) + \"...\"\n                                                : note.message}\n                                        </p>\n                                        {note.message.length > 100 && (\n                                            <div className=\"text-end\" >\n                                                <Button\n                                                    variant=\"link\"\n                                                    className=\"btn-message-hover font-message\"\n                                                    onClick={() => handleVerClick(index)}\n                                                >\n                                                    Ver más\n                                                </Button>\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </Card>\n                        ))}\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"dark\" onClick={onClose}>\n                    Cerrar\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default ModalMensajes;\n","import { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { TitleComponent } from \"./TitleComponent\";\n\nconst ModalCreateMessage = ({\n  showModal,\n  onClose,\n  onSubmit,\n  selectedRowId,\n}: any) => {\n  const [message, setMessage] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n\n  const handleSubmit = () => {\n    onSubmit({ message, selectedRowId, priority });\n  };\n\n  const resetForm = () => {\n    setMessage(\"\");\n    setMessage(\"\");\n    setPriority(\"0\");\n  };\n\n  const handleModalClose = async () => {\n    onClose();\n    resetForm();\n  };\n\n  const isMessageEmpty = message.trim() === \"\";\n\n  const handlePriorityChange = (e: any) => {\n    setPriority(e.target.value);\n  };\n\n  return (\n    <Modal\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      show={showModal}\n      onHide={handleModalClose}\n      keyboard={false}\n    >\n      <Modal.Body>\n        <Form.Group>\n          <TitleComponent\n            title=\"Mensaje seguimiento\"\n            description={`Cotización #${selectedRowId}`}\n          />\n          <hr />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Prioridad:</Form.Label>\n          <Form.Select\n            name=\"priority\"\n            aria-label=\"Default select example\"\n            value={priority}\n            onChange={handlePriorityChange}\n          >\n            <option value=\"0\" defaultChecked >No prioritario</option>\n            <option value=\"1\">Prioritario</option>\n          </Form.Select>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Nota:</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={5}\n            name=\"message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n        </Form.Group>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"dark\" onClick={handleModalClose}>\n          Cerrar\n        </Button>\n        <Button\n          disabled={isMessageEmpty}\n          variant=\"primary\"\n          onClick={() => {\n            handleSubmit()\n            handleModalClose()\n          }}\n        >\n          Agregar\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ModalCreateMessage;\n","import { useEffect, useState } from \"react\";\nimport { Alert, Button, Card, Col, Form, FormGroup, Row } from \"react-bootstrap\"\nimport { useErrors, useFetch } from \"../../hooks\";\nimport { BreadCrumb, InputErrorMessage } from \"../../Global\";\n\n/* material ui */\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport TextField from '@mui/material/TextField';\nimport ModalVerification from \"./ModalVerification\";\nimport { useLocation } from \"react-router-dom\";\nimport validator from \"validator\";\n\n/* date */\nimport dayjs from \"dayjs\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport ModalMensajes from \"./ModalMensajes\";\nimport ModalCreateMessage from \"../../Global/ModalCreateMessage\";\n\nconst VerifyConfirmation = () => {\n    const location: any = useLocation();\n    const { state } = location;\n    const quote_id = state.id\n\n    const { getAllData, postData } = useFetch()\n    const [form, setForm] = useState<any>({});\n    const [onfocus, setOnfocus] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [itemErrors, setItemErrors] = useState<{ [key: string]: string }>({});\n    const { errors, setError, clearError } = useErrors();\n    const [fieldChecks, setFieldChecks] = useState<Record<string, boolean>>({});\n\n    const handleFieldCheckChange = (fieldName: string) => {\n        setFieldChecks({ ...fieldChecks, [fieldName]: !fieldChecks[fieldName] });\n    };\n\n    const handleValidateChecked = () => {\n        let result = true\n        let quantity = form && form.items?.length + 10\n        const checkedValues = Object.values(fieldChecks).filter((item: any) => item === true)\n        if (checkedValues.length === quantity) {\n            result = false\n        }\n        return result\n    }\n\n    // Función para validar errores en el formulario\n    const validateErrors = (nameData: string, valueData: any) => {\n        const validationErrors: any = { ...errors };\n        if (nameData === \"name\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.name = [\"El campo nombre es obligatorio\"];\n            } else {\n                delete validationErrors.name;\n            }\n        }\n        if (nameData === \"nit\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.nit = \"El campo NIT es obligatorio.\";\n            } else {\n                delete validationErrors.nit;\n            }\n        }\n        if (nameData === \"meeting_type\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.meeting_type = \"El campo Tipo de Asamblea es obligatorio.\";\n            } else {\n                delete validationErrors.meeting_type;\n            }\n        }\n        if (nameData === \"client_name\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.client_name = \"El campo Nombre del Cliente es obligatorio.\";\n            } else {\n                delete validationErrors.client_name;\n            }\n        }\n        if (nameData === \"address\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.address = \"El campo Dirección del Comercio es obligatorio.\";\n            } else {\n                delete validationErrors.address;\n            }\n        }\n        if (nameData === \"contact_person\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.contact_person = \"El campo Nombre del Encargado es obligatorio.\";\n            } else {\n                delete validationErrors.contact_person;\n            }\n        }\n        if (nameData === \"meeting_register\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.meeting_register = \"El campo Hora de Registro es obligatorio.\";\n            } else {\n                delete validationErrors.meeting_register;\n            }\n        }\n        if (nameData === \"meeting_init\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.meeting_init = \"El campo Hora de Inicio es obligatorio.\";\n            } else {\n                delete validationErrors.meeting_init;\n            }\n        }\n        if (nameData === \"meeting_date\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.meeting_date = \"El campo Fecha del Evento es obligatorio.\";\n            } else {\n                delete validationErrors.meeting_date;\n            }\n        }\n        if (nameData === \"phone\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.phone = \"El campo Teléfono es obligatorio.\";\n            } else {\n                delete validationErrors.phone;\n            }\n        }\n        if (nameData === \"city\") {\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.city = \"El campo Ciudad es obligatorio.\";\n            } else {\n                delete validationErrors.city;\n            }\n        }\n        if (nameData === \"observations\") {\n\n            if (validator.isEmpty(valueData)) {\n\n                validationErrors.observations = \"El campo Observaciones es obligatorio.\";\n            } else {\n                delete validationErrors.observations;\n            }\n        }\n\n        const newErrors = { ...itemErrors };\n        form.items.forEach((item: any) => {\n            if (item.id === nameData) {\n                if (valueData === \"\" || valueData === \" \" || valueData === null || valueData === undefined || valueData === \"0\") {\n                    newErrors[`item-${item.id}`] = `El campo para ${item.name} es obligatorio.`;\n                } else if (parseFloat(valueData) < 0) {\n                    newErrors[`item-${item.id}`] = `El valor para ${item.name} no puede ser un número negativo.`;\n                } else {\n                    delete newErrors[`item-${item.id}`];\n                }\n            }\n        });\n\n        setItemErrors(newErrors);\n        // Establecer errores\n        setError(\"nit\", validationErrors.nit);\n        setError(\"meeting_type\", validationErrors.meeting_type);\n        setError(\"client_name\", validationErrors.client_name);\n        setError(\"address\", validationErrors.address);\n        setError(\"contact_person\", validationErrors.contact_person);\n        setError(\"meeting_register\", validationErrors.meeting_register);\n        setError(\"meeting_init\", validationErrors.meeting_init);\n        setError(\"meeting_date\", validationErrors.meeting_date);\n        setError(\"phone\", validationErrors.phone);\n        setError(\"city\", validationErrors.city);\n        setError(\"observations\", validationErrors.observations);\n    };\n\n    // Manejar cambios en los campos del formulario\n    const handleChange = (name: any, value: any) => {\n        setForm((prevForm: any) => {\n            const updatedForm = { ...prevForm };\n            if (typeof name === 'number') {\n                updatedForm.items = updatedForm.items.map((item: any) => {\n                    if (item.id === name) {\n                        return {\n                            ...item,\n                            value: value,\n                        };\n                    }\n                    return item;\n                });\n            } else {\n                updatedForm[name] = value;\n            }\n            return updatedForm;\n        });\n        clearError(name);\n        validateErrors(name, value);\n    };\n\n    const handleSubmit = async (modalData: any) => {\n        const items = form.items && form.items.map((item: any) => ({ id: item.id, value: item.value }));\n        const meetingRegisterTime = form.meeting_register;\n        const meetingInitTime = form.meeting_init;\n\n        const payload = {\n            items,\n            quote_id: quote_id,\n            meeting_register: meetingRegisterTime,\n            meeting_init: meetingInitTime,\n            meeting_date: dayjs(form.meeting_date).format(\"YYYY-MM-DD\"),\n            meeting_type: form.meeting_type,\n            address: form.address,\n            city: form.city,\n            name: form.client_name,\n            contact_person: form.contact_person,\n            contact_phone: form.contact_phone,\n            nit: form.nit,\n            observations: form.observations,\n            phone: form.phone,\n            status: modalData.status,\n            description: modalData.message,\n        };\n\n        await postData(payload, \"sales/order/verification/edit\");\n        setShowModal(false)\n        setMessage('')\n    };\n\n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const responseInputs: any = await getAllData(`api/sales/order/verification/${quote_id}`);\n                setForm({\n                    id: 0,\n                    status: \"\",\n                    horaDeRegistro: responseInputs.meeting_register === \"None\" ? \"\" : responseInputs.meeting_register || form.meeting_register,\n                    horaDeInicio: responseInputs.meeting_init === \"None\" ? \"\" : responseInputs.meeting_init || form.meeting_init,\n                    meeting_date: responseInputs.meeting_date === \"None\" ? null : responseInputs.meeting_date || \"\",\n                    address: responseInputs.address || \"\",\n                    city: responseInputs.city || \"\",\n                    client_name: responseInputs.client_name || \"\",\n                    contact_person: responseInputs.contact_person || \"\",\n                    contact_phone: responseInputs.contact_phone || \"\",\n                    items: responseInputs.items\n                        ? responseInputs.items.map((item: any) => ({\n                            id: item.id,\n                            name: item.name,\n                            value: item.quantity || \"\",\n                        }))\n                        : [],\n                    meeting_register: responseInputs.meeting_register === \"None\" ? \"\" : responseInputs.meeting_register || \"\",\n                    meeting_init: responseInputs.meeting_init === \"None\" ? \"\" : responseInputs.meeting_init || \"\",\n                    meeting_type: responseInputs.meeting_type || \"\",\n                    nit: responseInputs.nit || \"\",\n                    observations: responseInputs.observations || \"\",\n                    phone: responseInputs.phone || \"\",\n                });\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        getData();\n    }, []);\n\n\n    /* slect update  */\n    const [dataSelect, setDataSelect] = useState<any>([]);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n    const [selectedRowId, setSelectedRowId] = useState<number | null>(null);\n\n    const handleChangeSelect = async (e: any) => {\n        setSelectedOption(e.target.value);\n    };\n    const handleEdit = async (e: any) => {\n        alert('editando');\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const [dataCheckRow, setDataCheckRow] = useState<any>([]);\n    const [messageName, setMessageName] = useState<any>();\n\n    /* modals */\n    const [showModalMensajes, setShowModalMensajes] = useState(false);\n    const [showModalSeguimiento, setShowModalSeguimiento] = useState(false);\n    const [showModalVerificacion, setShowModalVerificacion] = useState(false);\n    const [showFullNote, setShowFullNote] = useState(false);\n    const [dataMessages, setDataMessages] = useState<any[]>([]);\n    const nameSessionStorage = sessionStorage.getItem('nombre')\n    const [selectedFilter, setSelectedFilter] = useState(\"Mostrar todos\");\n\n    const handleVerClick = (index: number) => {\n        setShowFullNote(true);\n    };\n    const handleVerMenosClick = () => {\n        setShowFullNote(false);\n    };\n    const fetchDataMessages = async (quoteId?: number | null) => {\n        const resMessages: any = await getAllData(`api/quotes/messages/sent/27`);\n        setDataMessages(resMessages);\n    };\n\n    // Declaración de las listas de mensajes con prioridad 1 y 0\n    const [priority1Messages, setPriority1Messages] = useState<any>([]);\n    const [priority0Messages, setPriority0Messages] = useState<any>([]);\n\n    const handlePriority = async () => {\n        let row1: any = []\n        let row2: any = []\n\n        for (let i = 0; i < dataMessages.length; i++) {\n            if (dataMessages[i].priority === 1) {\n                row1.push(dataMessages[i])\n            } else {\n                row2.push(dataMessages[i])\n            }\n        }\n        setPriority1Messages(row1)\n        setPriority0Messages(row2)\n    }\n\n    useEffect(() => {\n        handlePriority()\n        fetchDataMessages()\n    }, [dataMessages]);\n\n    // Obtener la última alerta blanca (prioridad 0)\n    const lastMessage = () => {\n        return priority0Messages && priority0Messages.length > 0\n            ? priority0Messages[priority0Messages.length - 1]\n            : [];\n    }\n\n    // Formatear el número de teléfono\n    if (dataCheckRow && dataCheckRow.contact_phone) {\n        var telefono = dataCheckRow.contact_phone.toString();\n        var telefonoFormateado = telefono.replace(/(\\d{3})(\\d{3})(\\d{4})/, '$1 $2 $3');\n    }\n    const handleModalClose = () => {\n        setShowModalSeguimiento(false);\n    };\n\n\n\n    return (\n        <>\n            {/* breadcrumb */}\n            < BreadCrumb\n                items={[\"INICIO\", \"RESERVAS\"]}\n                baseURL={[\"/\", \"nexos/verificaciones\"]}\n            />\n            {/* Modal Confirmation */}\n            <ModalVerification\n                data={form}\n                quote_number={quote_id}\n                showModal={showModal}\n                onClose={() => setShowModal(false)}\n                onSubmit={handleSubmit}\n                message={message}\n                setMessage={setMessage}\n            />\n\n            <ModalMensajes\n                showModal={showModalMensajes}\n                onClose={() => setShowModalMensajes(false)}\n                messages={dataMessages}\n                maxMessagesPerRow={3}\n                inCharge={!!dataCheckRow ? dataCheckRow.contact_person : null}\n            />\n\n            <ModalCreateMessage\n                showModal={showModalSeguimiento}\n                onClose={() => setShowModalSeguimiento(false)}\n                /* onSubmit={handleSubmitModal} */\n                selectedRowId={selectedRowId}\n            />\n\n            {/* All Forms */}\n            <div className=\" mt-4\">\n                <Row>\n                    {/* Verification form data  */}\n                    <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                        <Card className=\"p-3 \"\n                            style={{\n                                border: \"3px solid #ced4da\",\n                                maxHeight: '100vh',\n                                overflow:'scroll'\n                                \n                            }}\n                        >\n                            <h4 className=\"text-center text-uppercase\">verificación</h4>\n                            <Form className=\"form-horizontal\">\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"form-label\">NIT</Form.Label>\n                                    </Col>\n                                    <Col xs={6} sm={6} md={6} lg={6} xl={6}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <input\n                                            disabled={true} //fieldChecks[\"nit\"]\n                                            onFocus={() => setOnfocus(true)}\n                                            onBlur={() => setOnfocus(false)}\n                                            type=\"text\"\n                                            className={`form-control text-capitalize`}\n                                            name=\"nit\"\n                                            value={form?.nit ?? \"\"}\n                                            onChange={(e) => handleChange(\"nit\", e.target.value)}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"meeting_type\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"meeting_type\"]}\n                                                onClick={() => handleFieldCheckChange(\"meeting_type\")}\n                                                defaultChecked={form?.meeting_type ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            tipo de asamblea\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.meeting_type} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"meeting_type\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"meeting_type\"\n                                                value={form?.meeting_type ?? \"\"}\n                                                onChange={(e) => handleChange(\"meeting_type\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"client_name\"]}\n                                                onClick={() => handleFieldCheckChange(\"client_name\")}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Nombre cliente\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.client_name} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"client_name\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"client_name\"\n                                                value={form?.client_name ?? \"\"}\n                                                onChange={(e) => handleChange(\"client_name\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"address\"]}\n                                                onClick={() => handleFieldCheckChange(\"address\")}\n                                                defaultChecked={form?.address ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Direccion comercio\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.address} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"address\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"address\"\n                                                value={form?.address ?? \"\"}\n                                                onChange={(e) => handleChange(\"address\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"contact_person\"]}\n                                                onClick={() => handleFieldCheckChange(\"contact_person\")}\n                                                defaultChecked={form?.contact_person ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Nombre encargado\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.contact_person} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"contact_person\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"contact_person\"\n                                                value={form?.contact_person ?? \"\"}\n                                                onChange={(e) => handleChange(\"contact_person\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} lg={4} xl={4} className=\"d-flex align-items-center\">\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"meeting_register\"]}\n                                                onClick={() => handleFieldCheckChange(\"meeting_register\")}\n                                                defaultChecked={form?.meeting_register ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Hora de registro\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} lg={8} xl={8}>\n                                        <InputErrorMessage message={errors.meeting_register} inputFocus={onfocus}>\n                                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                <TextField\n                                                    disabled={fieldChecks[\"meeting_register\"]}\n                                                    onFocus={() => setOnfocus(true)}\n                                                    onBlur={() => setOnfocus(false)}\n                                                    id=\"meeting_register\"\n                                                    label=\"\"\n                                                    className=\"w-100 cursor-pointer\"\n                                                    size=\"small\"\n                                                    type=\"time\"\n                                                    value={form?.meeting_register ?? \"\"}\n                                                    onChange={(e) => handleChange(\"meeting_register\", e.target.value)}\n                                                    defaultValue={form?.meeting_register}\n                                                />\n                                            </LocalizationProvider>\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} lg={4} xl={4} className=\"d-flex align-items-center\">\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"meeting_init\"]}\n                                                onClick={() => handleFieldCheckChange(\"meeting_init\")}\n                                                defaultChecked={form?.meeting_init ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Hora de inicio\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} lg={8} xl={8}>\n                                        <InputErrorMessage message={errors.meeting_init} inputFocus={onfocus}>\n                                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                <TextField\n                                                    disabled={fieldChecks[\"meeting_init\"]}\n                                                    onFocus={() => setOnfocus(true)}\n                                                    onBlur={() => setOnfocus(false)}\n                                                    id=\"meeting_init\"\n                                                    label=\"\"\n                                                    className=\"w-100 cursor-pointer\"\n                                                    size=\"small\"\n                                                    type=\"time\"\n                                                    value={form?.meeting_init ?? \"\"}\n                                                    onChange={(e) => handleChange(\"meeting_init\", e.target.value)}\n                                                    defaultValue={form?.meeting_init}\n                                                />\n                                            </LocalizationProvider>\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"meeting_date\"]}\n                                                onClick={() => handleFieldCheckChange(\"meeting_date\")}\n                                                defaultChecked={form?.meeting_date ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Fecha del evento\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.meeting_date} inputFocus={onfocus}>\n                                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                <DatePicker\n                                                    disabled={fieldChecks[\"meeting_date\"]}\n                                                    className=\"w-100\"\n                                                    label=\" \"\n                                                    value={form?.meeting_date}\n                                                    onChange={(date) => handleChange(\"meeting_date\", date)}\n                                                    renderInput={(params) => <TextField {...params} />}\n                                                />\n                                            </LocalizationProvider>\n                                        </InputErrorMessage>\n                                    </Col>\n\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"phone\"]}\n                                                onClick={() => handleFieldCheckChange(\"phone\")}\n                                                defaultChecked={form?.phone ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Telefono\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.phone} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"phone\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"phone\"\n                                                value={form?.phone ?? \"\"}\n                                                onChange={(e) => handleChange(\"phone\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"city\"]}\n                                                onClick={() => handleFieldCheckChange(\"city\")}\n                                                defaultChecked={form?.city ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">ciudad</Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.city} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"city\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"city\"\n                                                value={form?.city ?? \"\"}\n                                                onChange={(e) => handleChange(\"city\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                                <Row className=\"mt-1\">\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                            <Form.Control\n                                                type=\"checkbox\"\n                                                name=\"is_default\"\n                                                className={`p-0 custom-control-input ${fieldChecks ? 'checked' : ''}`}\n                                                checked={fieldChecks[\"observations\"]}\n                                                onClick={() => handleFieldCheckChange(\"observations\")}\n                                                defaultChecked={form?.observations ? true : false}\n                                            />\n                                            <span className=\"custom-control-label\"></span>\n                                        </Form.Label>\n                                        <Form.Label className=\"form-label text-capitalize\">\n                                            Observaciones\n                                        </Form.Label>\n                                    </Col>\n                                    <Col xs={8} sm={8} md={8} lg={8} xl={8}\n                                        className=\"d-flex align-items-center\"\n                                    >\n                                        <InputErrorMessage message={errors.observations} inputFocus={onfocus}>\n                                            <input\n                                                disabled={fieldChecks[\"observations\"]}\n                                                onFocus={() => setOnfocus(true)}\n                                                onBlur={() => setOnfocus(false)}\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                name=\"observations\"\n                                                value={form?.observations ?? \"\"}\n                                                onChange={(e) => handleChange(\"observations\", e.target.value)}\n                                            />\n                                        </InputErrorMessage>\n                                    </Col>\n                                </Row>\n                            </Form>\n                            <h4 className=\"text-center text-uppercase my-4\"> Servicios o equipos </h4>\n                            {form && form.items && form.items.length > 0 ? (\n                                form.items.map((item: any, index: any) => (\n                                    <div key={item.id} className=\"m-0 p-0 w-100\">\n                                        <InputErrorMessage message={itemErrors[`item-${item.id}`]} inputFocus={onfocus}>\n                                            <Card\n                                                className=\"mb-2 w-100\"\n                                                style={{\n                                                    border: index === onfocus ? \"3px solid #ff671c\" : \"3px solid #ced4da\",\n                                                }}\n                                                onClick={() => setOnfocus(index)}\n                                            >\n                                                <Row className=\"p-2\">\n                                                    <Col xs={4} sm={4} md={4} lg={4} xl={4} className=\"d-flex align-items-center\">\n                                                        <Form.Label className=\"custom-control custom-checkbox cursor-pointer\">\n                                                            <Form.Control\n                                                                type=\"checkbox\"\n                                                                name=\"is_default\"\n                                                                className={`p-0 custom-control-input ${fieldChecks[item.id] ? 'checked' : ''}`}\n                                                                onClick={() => handleFieldCheckChange(item.id)}\n                                                                defaultChecked={fieldChecks[item.id]}\n                                                            />\n                                                            <span className=\"custom-control-label\"></span>\n                                                        </Form.Label>\n                                                        <FormGroup className=\"form-group d-flex align-items-center m-auto\">\n                                                            <input\n                                                                disabled={fieldChecks[item.id]}\n                                                                onFocus={() => setOnfocus(true)}\n                                                                onBlur={() => setOnfocus(false)}\n                                                                type=\"number\"\n                                                                className={`form-control text-center`}\n                                                                value={item.value ?? \"\"}\n                                                                onChange={(e) => handleChange(item.id, e.target.value)}\n                                                            />\n\n                                                        </FormGroup>\n                                                    </Col>\n                                                    <Col xs={8} sm={8} md={8} lg={8} xl={8} className=\"d-flex align-items-center\">\n                                                        <Form.Label className=\"form-label\">{item.name}</Form.Label>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        </InputErrorMessage>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"text-center\">No se contrataron servicios o equipos.</div>\n                            )}\n                        </Card>\n\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                        <Row className=\"mt-5 mb-2\">\n                            <Col xs={10}>\n                                <Form.Select\n                                    aria-label=\"Default select example\"\n                                    value={selectedOption}\n                                    onChange={handleChangeSelect}\n                                >\n                                    <option value=\"\">Selecciona una opción</option>\n                                    {dataSelect.map((item: any) => (\n                                        <option key={item.name} value={item.name}>\n                                            {item.name}\n                                        </option>\n                                    ))}\n                                </Form.Select>\n                            </Col>\n                            <Col xs={2}>\n                                <Row className=\"text-capitalize d-flex justify-content-center gap-2\">\n                                    <Button\n                                        className=\"w-100 mb-2 \"\n                                        onClick={handleEdit}\n                                    >\n                                        <svg\n                                            width={20}\n                                            className=\"p-0\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            viewBox=\"0 0 24 24\"\n                                        >\n                                            <path\n                                                d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM11.0026 16L18.0737 8.92893L16.6595 7.51472L11.0026 13.1716L8.17421 10.3431L6.75999 11.7574L11.0026 16Z\"\n                                                fill=\"#ffffff\"\n                                            ></path>\n                                        </svg>\n                                    </Button>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row className=\"mt-1\">\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Equipos adicionales:</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={3}\n                                        name=\"message\"\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"my-2\">\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Button\n                                    variant=\"primary\"\n                                    onClick={() => alert('button agendar')}\n                                >\n                                    Agendar Visita\n                                </Button>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={2}\n                                        name=\"message\"\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Observación de la confirmación</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={2}\n                                        name=\"message\"\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Preguntar por:</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={2}\n                                        name=\"message\"\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                        <Row className=\"mt-1\">\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                                    <Form.Label>Nota:</Form.Label>\n                                    <Form.Control\n                                        as=\"textarea\"\n                                        rows={10}\n                                        name=\"message\"\n                                        value={message}\n                                        onChange={(e) => setMessage(e.target.value)}\n                                    />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row className=\"my-2 w-100\">\n                            <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                                {\n                                    !lastMessage() || !lastMessage().message ? (\n                                        <Card className=\"p-4 text-center\">\n                                            <h4 className=\"text-center\">No tienes mensajes</h4>\n                                        </Card>\n                                    ) : (\n                                        <>\n                                            <Row className=\"\">\n                                                <Button\n                                                    className=\"w-100 mb-2\"\n                                                    onClick={() => setShowModalSeguimiento(true)}\n                                                >\n                                                    Mensaje\n                                                </Button>\n                                            </Row>\n                                            {/*  card message  */}\n                                            <Row className=\"\">\n                                                <Button\n                                                    className=\"mb-3 w-100\"\n                                                    onClick={() => setShowModalMensajes(true)}\n                                                >\n                                                    Todos los mensajes\n                                                </Button>\n                                            </Row>\n\n                                            {priority1Messages && priority1Messages.length > 0 ? (\n                                                <>\n                                                    <b>Notas Prioritarias</b>\n                                                    <Alert variant={'danger'}>\n                                                        <div className=\"d-flex flex-column\">\n                                                            {priority1Messages.slice(-4).map((m: any) => (\n                                                                <div key={m.id}>\n                                                                    <b>Usuario:</b>{\" \"}\n                                                                    <h6 className=\"text-capitalize\">\n                                                                        {m.name} - {dayjs(m.created_at).format(\"DD-MM-YYYY - HH:mm A\")}\n                                                                    </h6>\n                                                                    <b>Nota: </b>\n                                                                    {showFullNote ? (\n                                                                        <div>\n                                                                            <p>{m.message}</p>\n                                                                            <div className=\"text-end\">\n                                                                                <Button\n                                                                                    variant=\"link\"\n                                                                                    className=\"btn-message-hover\"\n                                                                                    onClick={handleVerMenosClick}\n                                                                                >\n                                                                                    Ver menos\n                                                                                </Button>\n                                                                            </div>\n                                                                        </div>\n                                                                    ) : (\n                                                                        <div className=\"mb-2\">\n                                                                            <p>\n                                                                                {m.message.length > 100\n                                                                                    ? m.message.slice(0, 100) + \"...\"\n                                                                                    : m.message}\n                                                                            </p>\n                                                                            {m.message.length > 100 && (\n                                                                                <div className=\"text-end\">\n                                                                                    <Button\n                                                                                        variant=\"link\"\n                                                                                        className=\"btn-message-hover\"\n                                                                                        onClick={() => handleVerClick(m)}\n                                                                                    >\n                                                                                        Ver más\n                                                                                    </Button>\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    )}\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    </Alert>\n                                                </>\n                                            ) : null}\n                                            <Card className=\"pt-4 pb-1 px-4 mb-3\">\n                                                <span className=\"mb-2\">\n                                                    <b>Usuario:</b>{\" \"}\n                                                    <p>\n                                                        {messageName ? messageName : lastMessage().name} -{\" \"}\n                                                        {dayjs(lastMessage().created_at).format(\"DD-MM-YYYY - HH:mm A\")}\n                                                    </p>\n                                                </span>\n                                                <span>\n                                                    <b>Nota:</b>\n                                                </span>\n                                                {showFullNote ? (\n                                                    <div>\n                                                        <p>{lastMessage().message}</p>\n                                                        <div className=\"text-end\">\n                                                            <Button\n                                                                variant=\"link\"\n                                                                className=\"btn-message-hover\"\n                                                                onClick={handleVerMenosClick}\n                                                            >\n                                                                Ver menos\n                                                            </Button>\n                                                        </div>\n                                                    </div>\n                                                ) : (\n                                                    <div className=\"mb-2\">\n                                                        <p>\n                                                            {lastMessage().message.length > 100\n                                                                ? lastMessage().message.slice(0, 100) + \"...\"\n                                                                : lastMessage().message}\n                                                        </p>\n                                                        {lastMessage().message.length > 100 && (\n                                                            <div className=\"text-end\">\n                                                                <Button\n                                                                    variant=\"link\"\n                                                                    className=\"btn-message-hover\"\n                                                                    onClick={() => handleVerClick(lastMessage())}\n                                                                >\n                                                                    Ver más\n                                                                </Button>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                )}\n                                            </Card>\n                                        </>\n                                    )\n                                }\n                            </Col>\n                        </Row>\n\n\n                    </Col>\n                </Row>\n\n                <Row className=\"d-flex justify-content-end my-4 me-2\">\n                    <Button\n                        variant=\"primary\"\n                        //disabled={handleValidateChecked()}\n                        onClick={() => setShowModal(true)}\n                    >\n                        Continuar\n                    </Button>\n                </Row>\n            </div >\n        </>\n\n    )\n}\n\nexport default VerifyConfirmation\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["data","showModal","onClose","onSubmit","quote_number","message","setMessage","useState","setStatus","handleModalClose","isMessageEmpty","trim","handleFormSubmit","status","Modal","size","show","onHide","keyboard","Form","title","align","className","meeting_type","controlId","as","rows","name","value","onChange","e","target","Button","variant","onClick","disabled","messages","inCharge","showFullNote","setShowFullNote","expandedNoteIndex","setExpandedNoteIndex","priorityFilter","setPriorityFilter","handleVerMenosClick","filteredMessages","filter","note","priority","Number","centered","scrollable","id","slice","reverse","map","index","Card","style","boxShadow","border","dayjs","created_at","format","length","handleVerClick","selectedRowId","setPriority","TitleComponent","description","defaultChecked","quote_id","useLocation","state","useFetch","getAllData","postData","form","setForm","onfocus","setOnfocus","setShowModal","itemErrors","setItemErrors","useErrors","errors","setError","clearError","fieldChecks","setFieldChecks","handleFieldCheckChange","fieldName","handleChange","prevForm","updatedForm","items","item","nameData","valueData","validationErrors","validator","nit","client_name","address","contact_person","meeting_register","meeting_init","meeting_date","phone","city","observations","newErrors","forEach","undefined","parseFloat","validateErrors","handleSubmit","modalData","meetingRegisterTime","meetingInitTime","payload","contact_phone","useEffect","getData","responseInputs","horaDeRegistro","horaDeInicio","quantity","console","log","dataSelect","selectedOption","setSelectedOption","handleChangeSelect","handleEdit","alert","dataCheckRow","messageName","showModalMensajes","setShowModalMensajes","showModalSeguimiento","setShowModalSeguimiento","dataMessages","setDataMessages","sessionStorage","getItem","fetchDataMessages","quoteId","resMessages","priority1Messages","setPriority1Messages","priority0Messages","setPriority0Messages","handlePriority","row1","row2","i","push","lastMessage","toString","replace","baseURL","maxMessagesPerRow","Row","Col","xs","sm","md","lg","xl","maxHeight","overflow","onFocus","onBlur","type","checked","inputFocus","LocalizationProvider","dateAdapter","AdapterDayjs","TextField","label","defaultValue","DatePicker","date","renderInput","params","FormGroup","width","xmlns","viewBox","d","fill","Alert","m","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","transition","Fade","closeLabel","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","Transition","_jsxs","role","classNames","_jsx","CloseButton","unmountOnExit","in","Object","assign","Link","Heading"],"sourceRoot":""}