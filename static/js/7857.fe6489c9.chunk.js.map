{"version":3,"file":"static/js/7857.fe6489c9.chunk.js","mappings":"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","sources":["components/Nexos/pages/Emails/CreateOrEditEmail.tsx"],"sourcesContent":["import React from \"react\";\nimport { Card, Col, Row, Button, Form, FormGroup } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAlert, useFetch } from \"../../hooks\";\nimport { TitleComponent, BreadCrumb, InputErrorMessage } from \"../../Global\";\nimport validator from \"validator\";\nimport { CFormInput } from \"@coreui/react\";\nimport { Icon, IconButton, Typography } from \"@mui/material\";\n\nimport { Modal, Upload } from \"antd\";\nimport type { RcFile, UploadFile, UploadProps } from \"antd/es/upload\";\n\nconst InitValues = {\n  id: 0,\n  name: \"\",\n  status_id: 1,\n  status_files: 1,\n  files: [],\n  deleted: []\n};\n\nconst initialErrors = {\n  subject: \"\",\n  message: \"\",\n  service_id: \"\",\n  name_email: \"\",\n};\n\nconst CreateOrEditEmail = () => {\n  const location: any = useLocation();\n  const { state: editItemData } = location;\n  const [form, setForm] = useState<any>(InitValues);\n  const { getAllData, postData } = useFetch();\n  const [activeAreas, setActiveAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState(0);\n  const { handleEditConfirmation, handleErrorAlert } = useAlert();\n  const [inputFocus, setInputFocus] = useState(false);\n  const [errors, setErrors] = useState<any>(initialErrors);\n  const [hasErrors, setHasErrors] = useState(true);\n\n  const getBase64 = (file: RcFile): any => {\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = (error) => reject(error);\n    });\n  };\n\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n\n  const handleCancel = () => setPreviewOpen(false);\n\n  const handlePreview = async (file: UploadFile) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj as RcFile);\n    }\n\n    setPreviewImage(file.url || (file.preview as string));\n    setPreviewOpen(true);\n    setPreviewTitle(\n      file.name || file.url!.substring(file.url!.lastIndexOf(\"/\") + 1)\n    );\n  };\n\n  const uploadButton = (\n    <div>\n      <Icon style={{ fontSize: \"70px\" }}>add_circle</Icon>\n      <div style={{ marginTop: 8 }}>Subir Archivo</div>\n    </div>\n  );\n\n  const handleChange = (e: any) => {\n    const validationErrors: any = { ...errors };\n    let { name, value, type } = e.target;\n\n    let newValue = type === \"radio\" ? parseInt(value) : value;\n\n    if (name === \"name_email\" && inputFocus) {\n      value = value.trim();\n      if (value === \"\" || validator.isEmpty(value)) {\n        validationErrors.name_email = \"El campo nombre es obligatorio\";\n      } else {\n        delete validationErrors.name_email;\n      }\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    if (name === \"subject\" && inputFocus) {\n      value = value.trim();\n      if (value === \"\" || validator.isEmpty(value)) {\n        validationErrors.subject = \"El campo asunto es obligatorio\";\n      } else {\n        delete validationErrors.subject;\n      }\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    if (name === \"status_files\") {\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    if (name === \"service_id\") {\n      if (value === \"0\" || validator.isEmpty(value)) {\n        validationErrors.service_id = \"El campo área es obligatorio\";\n      } else {\n        delete validationErrors.service_id;\n      }\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    if (name === \"message\" && inputFocus) {\n      value = value.trim();\n      if (value === \"\" || validator.isEmpty(value)) {\n        validationErrors.message = \"El campo mensaje es obligatorio\";\n      } else {\n        delete validationErrors.message;\n      }\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    if (name === \"status_id\") {\n      setForm((prev: any) => ({\n        ...prev,\n        [name]: newValue,\n      }));\n    }\n\n    // Si hay errores, actualiza el estado con ellos\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      setHasErrors(true);\n    } else {\n      setErrors({});\n      setHasErrors(false);\n    }\n  };\n\n  const handleInputFocus = () => {\n    setInputFocus(true);\n  };\n\n  const handlesubmit = (e: any) => {\n    e.preventDefault();\n    selectFunction();\n  };\n\n  const handlerNewBase64 = () => {\n    const base64Objs: any[] = [];\n    fileList.forEach((file: any) => {\n      if (file.url) {\n        base64Objs.push({\n          file: file.url,\n        });\n      }\n    });\n    return base64Objs;\n  }\n\n  const selectFunction = () => {\n    if (location?.state?.id != null) {\n      editForm();\n    } else {\n      createForm();\n    }\n  };\n\n  const createForm = async () => {\n    try {\n      const { name, status_files, ...rest } = form;\n      const payload = {\n        ...rest,\n        files: handlerNewBase64(),\n      };\n\n      console.log({ payload });\n\n      await postData(payload, \"email/save\", false, \"listacorreos\");\n    } catch (error) {\n      console.error(\"Error en createForm:\", error);\n      handleErrorAlert(\"Error al crear el form.\");\n    }\n  };\n\n  const editForm = async () => {\n    try {\n      // Mostrar la confirmación antes de editar el form\n      const confirmationResult = await handleEditConfirmation(\n        \"¿Estás seguro que deseas editar este servicio?\"\n      );\n\n      if (confirmationResult.isConfirmed) {\n        const { id, status_file, ...rest } = form;\n       \n        \n        const payload = {\n          ...rest,\n          id: location?.state?.id,\n          files: handlerNewBase64(),\n        };\n        await postData(payload, \"email/save\", false, \"listacorreos\");\n      }\n    } catch (error) {\n      console.error(\"Error en editForm:\", error);\n      handleErrorAlert(\"Error al editar el form.\");\n    }\n  };\n\n  const handlerSelect = (e: any) => {\n    setSelectedArea(e.target.value);\n    e.target.value = e.target.value.toString();\n    handleChange(e);\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const getActiveAreas = async () => {\n    try {\n      const response = await getAllData(\"api/services/activeTypes\");\n      setActiveAreas(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const resetChangeErrors = (item: any) => {\n    setInputFocus(false);\n    setHasErrors(true);\n    const objErrors: any = {\n      name_email: !item.name_email ? \"El campo está vacío\" : null,\n      subject: !item.subject ? \"El campo está vacío\" : null,\n      message: !item.message ? \"El campo está vacío\" : null,\n      service_id: !item.service_id ? \"El campo está vacío\" : null,\n    };\n    // Elimina los campos que no tienen error (valor es null)\n    Object.keys(objErrors).forEach((key) => {\n      if (objErrors[key] == null) {\n        delete objErrors[key];\n      }\n    });\n    if (Object.keys(objErrors).length === 0) {\n      setInputFocus(false);\n      setHasErrors(false);\n    }\n    setErrors(objErrors);\n  };\n\n  useEffect(() => {\n    if (editItemData?.id) {\n      let status_files = 0;\n      if (editItemData?.files?.length > 0) {\n        const files: any = [];\n        editItemData?.files.forEach((file: any, index: number) => {\n          files.push({\n            id: `${file?.id}`,\n            name: `Adjunto ${index + 1}`,\n            url: file?.photo,\n          });\n        });\n        status_files = 1;\n        setFileList(files);\n      } else {\n        status_files = 0;\n      }\n\n      setForm({\n        ...editItemData,\n        deleted: [],\n        status_files,\n      });\n\n      setSelectedArea(editItemData.service_id!);\n      resetChangeErrors(editItemData);\n    }\n  }, [editItemData]);\n\n  useEffect(() => {\n    getActiveAreas();\n  }, []);\n\n  const handleCustomRequest = (options: any) => {\n    // Aquí, puedes manejar la carga del archivo como desees.\n    // options.file contiene el archivo que se está cargando.\n    // Puedes realizar cualquier lógica que necesites y no necesitas hacer una petición al servidor si no lo deseas.\n    // Por ejemplo, puedes cargar el archivo a un servidor diferente o guardar el archivo localmente.\n  \n    // Cuando hayas terminado de manejar la carga, llama a options.onSuccess o options.onError según corresponda.\n  \n    // options.onSuccess: Si la carga es exitosa, llama a options.onSuccess y pasa cualquier respuesta requerida como argumento.\n    // options.onError: Si ocurre un error en la carga, llama a options.onError y pasa el error como argumento.\n    const { onSuccess, onError, file, onProgress } = options;\n\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (ev) => {\n      const fileBase64 = ev.target?.result;\n      const payload = {\n        name: file.name,\n        url: fileBase64\n      };\n      setFileList((prev: any) => [...prev, payload])\n    });\n\n    reader.readAsDataURL(file);\n  };\n\n  const handleRemove = (file: any) => {\n    // Lógica para eliminar el archivo de la lista de adjuntos\n    const updatedFileList = fileList.filter((item: any) => item.id !== file.id);\n      setForm((prev: any) => ({\n        ...prev,\n        files: updatedFileList,\n        deleted: [{ id: file.id }, ...prev?.deleted]\n      }));\n    setFileList(updatedFileList);\n  };\n  \n  const checkFilesize = (file: any) => {\n    const maxSizeInBytes = 25 * 1024 * 1024; // 25 MB (cambia el tamaño según tus necesidades)\n    \n    if (file.size > maxSizeInBytes) {\n      // message.error('El archivo es demasiado grande. El tamaño máximo permitido es 25 MB.');\n      handleErrorAlert(\"El adjunto no puede superar el tamaño requerido (25 megabytes)\");\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <>\n      {/* <!-- breadcrumb --> */}\n      <BreadCrumb\n        items={[\n          \"INICIO\",\n          \"LISTA DE CORREOS\",\n          location?.state?.id ? \"Editar correo\" : \"Agregar correo\",\n        ]}\n        baseURL={[\n          \"inicio\",\n          \"nexos/listacorreos\",\n          location?.state?.id\n            ? \"editarcorreo/\" + location?.state?.id\n            : \"editarcorreo\",\n        ]}\n      />\n      {/* title component */}\n      <TitleComponent\n        title={location?.state?.id ? \"Editar correo\" : \"Agregar correo\"}\n      />\n      {/* Card */}\n      <Form className=\"form-horizontal\" onSubmit={handlesubmit}>\n        <Card className=\"w-100\">\n          <Card.Body className=\"w-100\">\n            <Col sm={12} md={12} lg={12} xl={10} className=\"mx-auto\">\n              <Row className=\"w-100 justify-content-center justify-content-md-between mt-5 mb-3\">\n                <Col sm={12} md={12} lg={5} xl={5}>\n                  <FormGroup className=\"form-group w-100 m-0\">\n                    <Form.Label className=\"mb-3\">NOMBRE DEL CORREO</Form.Label>\n                    <InputErrorMessage\n                      message={errors?.name_email}\n                      inputFocus={inputFocus}\n                    >\n                      <CFormInput\n                        type=\"text\"\n                        id=\"quote-autocomplete\"\n                        name=\"name_email\"\n                        onChange={handleChange}\n                        onBlur={handleChange}\n                        onFocus={handleInputFocus}\n                        value={form.name_email ? form.name_email : \"\"}\n                        required\n                      />\n                    </InputErrorMessage>\n                  </FormGroup>\n                  <FormGroup className=\"form-group w-100 m-0\">\n                    <Form.Label className=\"mb-3\">ASUNTO</Form.Label>\n                    <InputErrorMessage\n                      message={errors?.subject}\n                      inputFocus={inputFocus}\n                    >\n                      <CFormInput\n                        type=\"text\"\n                        id=\"quote-autocomplete\"\n                        name=\"subject\"\n                        onChange={handleChange}\n                        onBlur={handleChange}\n                        onFocus={handleInputFocus}\n                        value={form.subject ? form.subject : \"\"}\n                        required\n                      />\n                    </InputErrorMessage>\n                  </FormGroup>\n\n                  <FormGroup className=\"form-group text-center mt-5\">\n                    <Form.Label className=\"form-label\">\n                      Documentos Adjuntos\n                    </Form.Label>\n                    <div className=\"custom-controls-stacked d-flex justify-content-center gap-5\">\n                      <Form.Label className=\"custom-control custom-radio\">\n                        <Form.Control\n                          type=\"radio\"\n                          className=\"custom-control-input\"\n                          name=\"status_files\"\n                          value={1}\n                          checked={form?.status_files === 1}\n                          onChange={handleChange}\n                          onClick={handleInputFocus}\n                        />\n                        <span className=\"custom-control-label\">Si</span>\n                      </Form.Label>\n                      <Form.Label className=\"custom-control custom-radio\">\n                        <Form.Control\n                          type=\"radio\"\n                          className=\"custom-control-input\"\n                          name=\"status_files\"\n                          value={0}\n                          checked={form?.status_files === 0}\n                          onChange={handleChange}\n                          onClick={handleInputFocus}\n                        />\n                        <span className=\"custom-control-label\">No</span>\n                      </Form.Label>\n                    </div>\n                  </FormGroup>\n                </Col>\n\n                <Col xs={12} sm={12} md={12} lg={5} xl={5}>\n                  <Form.Label className=\"mb-3\">ÁREA</Form.Label>\n                  {activeAreas.length > 0 && (\n                    <InputErrorMessage\n                      message={errors.service_id}\n                      inputFocus={inputFocus}\n                    >\n                      <Form.Select\n                        name=\"service_id\"\n                        aria-label=\"Default select example\"\n                        className=\"selectproduct w-100\"\n                        value={selectedArea}\n                        onFocus={handleInputFocus}\n                        onBlur={handleInputFocus}\n                        onChange={handlerSelect}\n                        style={{ border: \"solid 0.5px gray\", padding: 8 }}\n                      >\n                        <option value={0}>Seleccionar area</option>\n                        {activeAreas.map((area: any) => (\n                          <option key={area.id} value={area.id}>\n                            {area.name}\n                          </option>\n                        ))}\n                      </Form.Select>\n                    </InputErrorMessage>\n                  )}\n\n                  <FormGroup className=\"form-group text-center mt-5\">\n                    <Form.Label className=\"form-label\">Estado</Form.Label>\n                    <div className=\"custom-controls-stacked d-flex justify-content-center gap-5\">\n                      <Form.Label className=\"custom-control custom-radio\">\n                        <Form.Control\n                          type=\"radio\"\n                          className=\"custom-control-input\"\n                          name=\"status_id\"\n                          value={1}\n                          checked={form?.status_id === 1}\n                          onChange={handleChange}\n                          onClick={handleInputFocus}\n                        />\n                        <span className=\"custom-control-label\">Activo</span>\n                      </Form.Label>\n                      <Form.Label className=\"custom-control custom-radio\">\n                        <Form.Control\n                          type=\"radio\"\n                          className=\"custom-control-input\"\n                          name=\"status_id\"\n                          value={0}\n                          checked={form?.status_id === 0}\n                          onChange={handleChange}\n                          onClick={handleInputFocus}\n                        />\n                        <span className=\"custom-control-label\">Inactivo</span>\n                      </Form.Label>\n                    </div>\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Row className=\"mb-2\">\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                  <FormGroup>\n                    <Form.Label>Mensaje</Form.Label>\n                    <InputErrorMessage\n                      message={errors?.message}\n                      inputFocus={inputFocus}\n                    >\n                      <Form.Control\n                        style={{\n                          height: \"5.5cm\",\n                          maxHeight: \"5.5cm\",\n                          minHeight: \"2.5cm\",\n                        }}\n                        as=\"textarea\"\n                        name=\"message\"\n                        onFocus={handleInputFocus}\n                        onChange={handleChange}\n                        value={form?.message ?? \"\"}\n                        // placeholder=\"Mensaje...\"\n                        required\n                      />\n                    </InputErrorMessage>\n                  </FormGroup>\n\n                  {form?.status_files === 1 && (\n                    <Row className=\"w-100 d-flex justify-content-around align-items-center my-4\">\n                      <div className=\"d-flex justify-content-center\">\n                        <>\n                          <Upload\n                            listType=\"picture-card\"\n                            accept=\".jpg,.jpeg,.png,.pdf,.xls,.xlsx\" // Sólo imagenes, pdfs y excels\n                            fileList={fileList}\n                            onPreview={handlePreview}\n                            customRequest={handleCustomRequest} // Utiliza tu función personalizada para manejar la carga.\n                            onRemove={handleRemove} // Esta línea manejará la eliminación de imágenes\n                            beforeUpload={checkFilesize}\n                          >\n                            {fileList.length >= 10 ? null : uploadButton}\n                          </Upload>\n                          <Modal\n                            open={previewOpen}\n                            title={previewTitle}\n                            footer={null}\n                            onCancel={handleCancel}\n                          >\n                            <img\n                              alt=\"example\"\n                              style={{ width: \"100%\" }}\n                              src={previewImage}\n                            />\n                          </Modal>\n                        </>\n                      </div>\n                    </Row>\n                  )}\n                </Col>\n              </Row>\n\n              <Row className=\"mb-4\">\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                  <Button\n                    variant=\"\"\n                    className=\"btn btn-primary\"\n                    style={{ width: \"100%\" }}\n                    type=\"submit\"\n                    disabled={hasErrors}\n                  >\n                    {editItemData ? \"Guardar cambios\" : \"Editar cambios\"}\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Card.Body>\n        </Card>\n      </Form>\n    </>\n  );\n};\n\nexport default CreateOrEditEmail;\n"],"names":["InitValues","id","name","status_id","status_files","files","deleted","initialErrors","subject","message","service_id","name_email","location","useLocation","editItemData","state","useState","form","setForm","useFetch","getAllData","postData","activeAreas","setActiveAreas","selectedArea","setSelectedArea","useAlert","handleEditConfirmation","handleErrorAlert","inputFocus","setInputFocus","errors","setErrors","hasErrors","setHasErrors","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","previewOpen","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","handlePreview","url","preview","originFileObj","substring","lastIndexOf","uploadButton","style","fontSize","marginTop","handleChange","e","validationErrors","target","value","newValue","type","parseInt","trim","validator","prev","Object","keys","length","handleInputFocus","handlerNewBase64","base64Objs","forEach","push","selectFunction","editForm","createForm","rest","payload","console","log","isConfirmed","status_file","getActiveAreas","response","useEffect","index","photo","item","objErrors","key","resetChangeErrors","items","baseURL","title","className","onSubmit","preventDefault","sm","md","lg","xl","onChange","onBlur","onFocus","required","checked","onClick","xs","toString","border","padding","map","area","height","maxHeight","minHeight","as","listType","accept","onPreview","customRequest","options","onSuccess","onError","onProgress","addEventListener","ev","fileBase64","onRemove","updatedFileList","filter","beforeUpload","size","open","footer","onCancel","alt","width","src","variant","disabled"],"sourceRoot":""}