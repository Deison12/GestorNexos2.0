{"version":3,"file":"static/js/4644.9c7b15ad.chunk.js","mappings":"+QAgHA,UAxGgB,WACd,OAAwBA,EAAAA,EAAAA,UAAc,IAAG,eAAlCC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,UAAwB,MAAK,eAA1DG,EAAU,KAAEC,EAAa,KACxBC,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,yCAAG,kHAEqBL,EAAW,mCAAmC,KAAD,EAAxEM,EAAkB,OACxBT,EAAQS,GAAU,gDAElBC,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,kBAPY,mCAQbH,GACF,GAAG,IAEH,IAAMI,EAAgB,SAACC,GACrB,IAAMZ,EAAaY,EAAEC,OAAOC,MAC5Bb,EAAcD,EAChB,EASMe,EAAkC,OAAff,EAGzB,OACE,4BAEE,SAAC,KAAU,CACTgB,MAAO,CAAC,SAAU,qBAAsB,wBACxCC,QAAS,CAAC,SAAU,2BAA4B,2BAGlD,SAAC,KAAc,CAACC,MAAM,SAASC,SAAS,2CAA2CC,MAAM,YAEzF,gBAAKC,UAAU,uCAAsC,UACnD,SAAC,IAAI,CAACA,UAAU,SAAQ,UACtB,UAAC,SAAS,CAACA,UAAU,QAAO,UACT,IAAhBvB,EAAKwB,QACJ,gBAAKD,UAAU,iBAAgB,wCAE/B,SAAC,IAAG,CAACA,UAAU,uDAAsD,UACnE,SAAC,IAAS,CAACA,UAAU,cAAa,UAChC,gBAAKA,UAAU,0BAAyB,UACtC,yBACGvB,EAAKyB,KAAI,SAACC,GAAS,OAClB,0BACE,UAAC,UAAU,CAACH,UAAU,gDAA+C,WACnE,SAAC,YAAY,CACXI,KAAK,QACLJ,UAAU,uBACVK,KAAK,kBACLZ,MAAOU,EAAKG,GACZC,SAAUjB,KAEZ,SAAC,IAAc,CACbkB,QAAS,CAAC,QAAS,SACnBC,UAAU,QACVC,SACE,SAAC,IAAO,CAACV,UAAU,kBAAiB,UAClC,SAAC,SAAY,CAACW,MAAO,CAAEC,OAAQ,OAAQ,SACpCT,EAAKU,gBAGX,UAEC,iBAAMb,UAAU,2DAA0D,SACvEG,EAAKE,aArBNF,EAAKG,GAyBT,aAQlB,gBAAKN,UAAU,6BAA4B,UACzC,SAAC,IAAM,CACLc,QAAQ,GACRd,UAAU,sCACVe,UAAWrB,EACXsB,QArEc,WAE1BC,aAAaC,QAAQ,WAAYvC,GACjCI,EAAS,GAAD,OAAIoC,aAAsB,gCACpC,EAiE2C,kCAU7C,C","sources":["components/Nexos/pages/Cotizar/Cotizar.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Card, Col, Form, FormGroup, Button, Popover, OverlayTrigger } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { TitleComponent, BreadCrumb } from '../../Global';\nimport { useFetch } from '../../hooks/useFetch';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Cotizar = () => {\n  const [data, setData] = useState<any>([]);\n  const [selectedId, setSelectedId] = useState<string | null>(null);\n  const { getAllData } = useFetch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response: Response = await getAllData('api/quoteTypes/getActiveRecords');\n        setData(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getData();\n  }, []);\n\n  const hendlerSelect = (e: any) => {\n    const selectedId = e.target.value;\n    setSelectedId(selectedId); // Update selected option\n  };\n\n  const handleContinueClick = () => {\n    // Navigate to the desired route\n    localStorage.setItem('form1-ID', selectedId!);\n    navigate(`${process.env.PUBLIC_URL}/nexos/cotizacionformulario/`);\n  };\n\n  // Check if the selected option exists\n  const isOptionSelected = selectedId !== null;\n\n\n  return (\n    <div>\n      {/* Breadcrumb */}\n      <BreadCrumb\n        items={['inicio', 'LISTA COTIZACIONES', 'SELECCIONAR SERVICIO']}\n        baseURL={['inicio', 'nexos/listarcotizaciones', 'SELECCIONAR SERVICIO']}\n      />\n      {/* Componente Titulo  */}\n      <TitleComponent title='PASO 1' subtitle='SELECCIONE EL SERVICIO QUE DESEA COTIZAR' align='center' />\n      {/* card */}\n      <div className=\"row justify-content-center mt-5 px-3\">\n        <Card className='w-100 '>\n          <Card.Body className='w-100'>\n            {data.length === 0 ? (\n              <div className='text-center h5'>No hay datos disponibles.</div>\n            ) : (\n              <Col className=\" mt-4 mt-xl-0 d-flex justify-content-center mx-auto \">\n                <FormGroup className=\"form-group \">\n                  <div className=\"custom-controls-stacked\">\n                    <div>\n                      {data.map((item: any) => (\n                        <div key={item.id}>\n                          <Form.Label className=\"custom-control custom-radio custom-control-md\">\n                            <Form.Control\n                              type=\"radio\"\n                              className=\"custom-control-input\"\n                              name=\"example-radios1\"\n                              value={item.id}\n                              onChange={hendlerSelect}\n                            />\n                            <OverlayTrigger\n                              trigger={[\"hover\", \"focus\"]}\n                              placement=\"right\"\n                              overlay={\n                                <Popover className=\"popover-primary\">\n                                  <Popover.Body style={{ margin: \"0px\" }}>\n                                    {item.description}\n                                  </Popover.Body>\n                                </Popover>\n                              }\n                            >\n                                <span className=\"custom-control-label custom-control-label-md tx-17 px-3 \">\n                                  {item.name}\n                                </span>\n                            </OverlayTrigger>\n                          </Form.Label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </FormGroup>\n              </Col>\n            )}\n\n            <div className=\"d-flex justify-content-end\">\n              <Button\n                variant=\"\"\n                className=\"btn me-5 mt-3 px-5 py-3 btn-primary\"\n                disabled={!isOptionSelected}\n                onClick={handleContinueClick}\n              >\n                CONTINUAR\n              </Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default Cotizar;\n"],"names":["useState","data","setData","selectedId","setSelectedId","getAllData","useFetch","navigate","useNavigate","useEffect","getData","response","console","log","hendlerSelect","e","target","value","isOptionSelected","items","baseURL","title","subtitle","align","className","length","map","item","type","name","id","onChange","trigger","placement","overlay","style","margin","description","variant","disabled","onClick","localStorage","setItem","process"],"sourceRoot":""}