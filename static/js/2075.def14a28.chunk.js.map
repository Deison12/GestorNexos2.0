{"version":3,"file":"static/js/2075.def14a28.chunk.js","mappings":"iNAYA,IAAMA,EAAiB,CACrB,CACEC,OAAQ,IACRC,SAAU,GACVC,UAAW,qBACXC,KAAM,YAA4B,IAG1BC,EAHI,EAAHC,IACCC,MAE0B,EAClC,OAAO,0BAAOF,GAChB,GAEF,CACEJ,OAAQ,6BACRC,SAAU,OACVC,UAAW,qBACXC,KAAM,gBApBeI,EAoBZC,EAAK,EAALA,MAAK,OACZ,2BArBmBD,EAqBIC,EApBpBD,EAAIE,cAAcC,QAAQ,SAAS,SAACC,GAAI,OAAKA,EAAKC,aAAa,MAoB7B,GAGzC,CACEZ,OAAQ,SACRC,SAAU,YACVC,UAAW,qBAEXC,KAAM,YAAQ,OACF,IADE,EAALK,OAEL,SAAC,IAAI,CAACK,MAAM,SAASC,MAAM,UAAUC,QAAQ,cAE7C,SAAC,IAAI,CAACF,MAAM,WAAWC,MAAM,QAAQC,QAAQ,YAC9C,GAEL,CACEf,OAAQ,YACRC,SAAU,GACVC,UAAW,qBAEXC,KAAM,YAA4B,IAAzBE,EAAG,EAAHA,IACP,OACE,SAAC,KAAI,CACHW,GAAE,UAAKC,GAAsB,yBAC7BC,MAAOb,EAAIc,SAAS,UAEpB,iBAAMjB,UAAU,8BAA6B,qBAGnD,IAsDJ,UAlDwB,WACtB,OAAwBkB,EAAAA,EAAAA,UAAc,IAAG,eAAlCC,EAAI,KAAEC,EAAO,KACpB,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAe/B,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,yCAAG,kHAEgBJ,EAAW,aAAa,KAAD,EAA7CK,EAAa,OACnBP,EAAQO,GAAU,gDAElBC,QAAQC,IAAI,QAAQ,EAAD,IAAS,yDAE/B,kBAPY,mCASbH,GACF,GAAG,KAGD,4BAEE,SAAC,KAAU,CACTI,MAAO,CAAC,SAAU,wCAClBC,QAAS,CAAC,SAAU,wCAGtB,SAAC,KAAc,CAACC,MAAO,sCAEpBR,IACC,SAAC,KAAsB,CACvBO,QAAQ,IACRC,MAAM,QACNC,SAAQ,UAAU,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOU,YAMpBV,IACA,SAAC,KAAc,CACf3B,QAASA,EACTsB,KAAMA,EACNgB,cAAa,UAAKpB,GAAsB,wBACxCQ,UAAWA,MAMrB,C","sources":["components/Nexos/pages/QuoteState/ListQuoteStates.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  Chip,\n} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { TitleComponent, BreadCrumb, BasicDataTable, ConfirmationCardButton } from \"../../Global\";\nimport { useFetch } from \"../../hooks/useFetch\";\n\nfunction capitalizeWords(str: string) {\n  return str.toLowerCase().replace(/\\b\\w/g, (char) => char.toUpperCase());\n}\n/* Columns for the Data Table */\nconst columns: any[] = [\n  {\n    Header: \"#\",\n    accessor: \"\",\n    className: \"wd-10p borderrigth\",\n    Cell: ({ row }: { row: any }) => {\n      const { index } = row;\n      // Adding 1 to the index to display the number starting from 1 instead of 0\n      const consecutiveNumber = index + 1;\n      return <span>{consecutiveNumber}</span>;\n    },\n  },\n  {\n    Header: \"Estado de la cotización\",\n    accessor: \"name\",\n    className: \"wd-25p borderrigth\",\n    Cell: ({ value }: { value: string }) => (\n      <span>{capitalizeWords(value)}</span>\n    ),\n  },\n  {\n    Header: \"Estado\",\n    accessor: \"status_id\",\n    className: \"wd-20p borderrigth\",\n    // Custom cell rendering to display status as a Chip component\n    Cell: ({ value }: { value: number }) =>\n      value === 1 ? (\n        <Chip label=\"Activo\" color=\"success\" variant=\"outlined\" />\n      ) : (\n        <Chip label=\"Inactivo\" color=\"error\" variant=\"outlined\" />\n      ),\n  },\n  {\n    Header: \"Acción\",\n    accessor: \"\",\n    className: \"wd-15p borderrigth\",\n    // Custom cell rendering for the \"Accion\" column with a link to edit the profile\n    Cell: ({ row }: { row: any }) => {\n      return (\n        <Link\n          to={`${process.env.PUBLIC_URL}/nexos/editarusuarios`}\n          state={row.original}\n        >\n          <span className=\"material-icons md-5 md-dark\">&#xe3c9;</span>\n        </Link>\n      );\n    },\n  },\n];\n\nconst ListQuoteStates = () => {\n  const [data, setData] = useState<any>([]);\n  const { getAllData, isLoading, error } = useFetch();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response: any = await getAllData(\"api/users\");\n        setData(response);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    getData();\n  }, []);\n\n  return (\n    <div>\n      {/* Breadcrumb */}\n      <BreadCrumb\n        items={[\"inicio\", \"lista tipos estados de cotización\"]}\n        baseURL={[\"inicio\", \"nexos/listatiposestadoscotizacion\"]}\n      />\n      {/* Component Title */}\n      <TitleComponent title={\"LISTA DE ESTADOS DE COTIZACIÓN\"} />\n      {\n        (error) && (\n          <ConfirmationCardButton\n          baseURL='#'\n          title='Error'\n          subtitle={`${error?.message}`}\n        />\n        )\n      }\n      {\n      /* Data Grid Table */\n        (!error) && (\n          <BasicDataTable\n          columns={columns}\n          data={data}\n          addButtonLink={`${process.env.PUBLIC_URL}/nexos/crearusuarios`}\n          isLoading={isLoading}\n        />\n        )\n      }\n    </div>\n  );\n};\n\nexport default ListQuoteStates;\n"],"names":["columns","Header","accessor","className","Cell","consecutiveNumber","row","index","str","value","toLowerCase","replace","char","toUpperCase","label","color","variant","to","process","state","original","useState","data","setData","useFetch","getAllData","isLoading","error","useEffect","getData","response","console","log","items","baseURL","title","subtitle","message","addButtonLink"],"sourceRoot":""}