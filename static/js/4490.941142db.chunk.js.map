{"version":3,"file":"static/js/4490.941142db.chunk.js","mappings":"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","sources":["components/Nexos/hooks/useFile.ts","components/Nexos/hooks/useAddInputs.ts","components/Nexos/hooks/useErrors.tsx","components/Nexos/hooks/useFormUsers.ts","components/Nexos/hooks/useTokenQuoteCheck.ts","helpers/regexes.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nexport const useFile = (setUser: any) => {\n  const fileInputRef = useRef<any>(null);\n  const [image, setImage] = useState<any>(\"\");\n  \n  const handleAdd = (newFile: any) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", (ev) => {\n      const fileBase64 = ev.target?.result;\n      setImage(fileBase64);\n      setUser((prev: any) => ({\n        ...prev,\n        file: fileBase64\n      }))\n    });\n    reader.readAsDataURL(newFile.target.files[0]);\n  };\n\n  // Cambiar imagen\n  const handleChangeImage = (image: string) => {\n    setImage(image);\n  }\n\n  // Eliminar imagen\n  const handleDelete = (deleted: any) => {\n    setImage(\"\");\n  };\n\n  // Click Ref\n  const handleButtonClick = () => {\n    fileInputRef.current.click()!; // Simula un clic en el input de tipo file\n  };\n\n  return {\n    // Methods\n    handleAdd,\n    handleDelete,\n    handleButtonClick,\n    handleChangeImage,\n    // Properties\n    fileInputRef,\n    image\n  }\n}","import { useState } from \"react\";\nimport { useAlert } from \"./useAlert\";\n\ninterface UiInput {\n  value: string;\n  showRemove: boolean;\n  isDisabled: boolean;\n}\n\nexport const useAddInputs = (errors: any, setData: any, setErrors: any, setHasErrors: any) => {\n  const [inputs, setInputs] = useState<UiInput[]>([\n    { value: \"\", showRemove: false, isDisabled: true },\n  ]);\n  const { handleEditConfirmation } = useAlert();\n\n  const mapInputArray = (array: any[]) => {\n    console.log({array})\n\n    const arreglo = [\"s@gmail.com\", \"x@gmail.com\", \"z@gmail.com\"]\n\n    handleChangeInput(0, arreglo[0]);\n    changeIsDisabled(0, false)\n\n    console.log(\"ARREGLO:::\", arreglo)\n\n    arreglo.forEach((value, index) => {\n        if (index > 0) {\n          handleAddInput(value);\n        }\n    });\n  }\n\n  const handleAddInput = (value = \"\") => {\n    // Límite de 3 correos\n    if (inputs.length > 2) {\n      return;\n    }\n    const updatedInputs = [...inputs];\n\n    console.log(\"handleAddInput agregando nuevo input:\", {updatedInputs}, { value })\n\n    // Mostrar el botón de eliminar en el último input agregado\n    updatedInputs[updatedInputs.length - 1].showRemove = true;\n    if (updatedInputs.length === 2) {\n      // Mostrar el botón de eliminar en el elemento número 3 del arreglo\n      setInputs([\n        ...updatedInputs,\n        { value: (value.length > 0)? value : \"\", showRemove: true, isDisabled: false },\n      ]);\n    } else {\n      // Mostrar el botón de agregar en el nuevo input por agregar.\n      setInputs([\n        ...updatedInputs,\n        { value: (value.length > 0)? value : \"\", showRemove: false, isDisabled: (value.length > 0 ? false : true) },\n      ]);\n    }\n  };\n\n  const changeIsDisabled = (index: number, isDisabled: boolean) => {\n    // Crea una copia del arreglo para evitar mutar el estado directamente\n    const updatedItems = [...inputs];\n    // Actualiza el valor de isDisabled en el elemento correspondiente\n    updatedItems[index].isDisabled = isDisabled;\n    // Establece el nuevo arreglo actualizado como el estado\n    setInputs(updatedItems);\n  };\n\n  const handleRemoveInput = async (name: string) => {\n    const printName = name === \"email\" ? \"correo\" : \"teléfono\";\n    const updatedInputs: any = [...inputs];\n\n    const validationErrors = {...errors};\n    console.log(\"REMOVES INPOUTS:\", updatedInputs);\n    \n    // Si el campo viene vacío se elimina sin mostrar la alerta\n    if (updatedInputs[updatedInputs.length - 1].value === \"\") {\n      // Remover el input seleccionado del estado\n      if (updatedInputs.length === 2) {\n        setData((prev: any) => ({ ...prev, [`${name}2`]: \"\" }));\n        delete validationErrors[`${name}2`];\n      }\n      if (updatedInputs.length === 3) {\n        setData((prev: any) => ({ ...prev, [`${name}3`]: \"\" }));\n        delete validationErrors[`${name}3`];\n      }\n      updatedInputs.splice(updatedInputs.length - 1, 1);\n      // Mostrar el botón de eliminar en el último input restante\n      if (updatedInputs.length > 0) {\n        updatedInputs[updatedInputs.length - 1].showRemove = false;\n      }\n      setInputs(updatedInputs);\n      setErrors(validationErrors);\n      console.log({validationErrors})\n    } else {\n      // Si el campo no viene vacío se elimina sin mostrar la alerta\n      const result = await handleEditConfirmation(\n        `¿Desea eliminar el ${printName} ${inputs.length}?`\n      );\n\n      if (result.isConfirmed) {\n        // Remover el input seleccionado del estado\n        if (updatedInputs.length === 2) {\n          setData((prev: any) => ({ ...prev, [`${name}2`]: \"\" }));\n          delete validationErrors[`${name}2`];\n\n        }\n        if (updatedInputs.length === 3) {\n          setData((prev: any) => ({ ...prev, [`${name}3`]: \"\" }));\n          delete validationErrors[`${name}3`];\n        }\n        updatedInputs.splice(updatedInputs.length - 1, 1);\n        // Mostrar el botón de eliminar en el último input restante\n        if (updatedInputs.length > 0) {\n          updatedInputs[updatedInputs.length - 1].showRemove = false;\n        }\n        setInputs(updatedInputs);\n      }\n    }\n\n    // Si hay errores, actualiza el estado con ellos\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      setHasErrors(true);\n    } else {\n      setErrors({});\n      setHasErrors(false);\n    }\n\n\n  };\n\n  const handleChangeInput = (index: number, value: string) => {\n    // Actualizar el valor del input correspondiente en el estado\n    const updatedInputs = [...inputs];\n    updatedInputs[index].value = value;\n    setInputs(updatedInputs);\n  };\n\n  const handleResetInputs = () => {\n    // Reiniciar estado de los inputs\n    setInputs([\n      { value: \"\", showRemove: false, isDisabled: true },\n    ]);\n  };\n\n  return {\n    // Method\n    handleAddInput,\n    handleRemoveInput,\n    handleChangeInput,\n    changeIsDisabled,\n    handleResetInputs,\n    setInputs,\n    mapInputArray,\n    // Properties\n    inputs,\n  };\n};\n","import { useState } from \"react\";\n\ntype ErrorMap = { [field: string]: string | string[] };\n\nexport const useErrors = (initialErrors: any = {}) => {\n    const [errors, setErrors] = useState<ErrorMap>(initialErrors);\n    const setError = (field: string, errorMessage: string | string[]) => {\n        setErrors((prevErrors) => ({\n            ...prevErrors,\n            [field]: errorMessage,\n        }));\n    };\n\n    const clearError = (field: string) => {\n        setErrors((prevErrors) => {\n            const updatedErrors = { ...prevErrors };\n            delete updatedErrors[field];\n            return updatedErrors;\n        });\n    };\n    return { errors, setError, clearError };\n};","import { useState } from \"react\";\nimport validator from \"validator\";\nimport { isValidEmail } from \"../../../helpers\";\n\nconst initialState = {\n  id: 0,\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  phone: \"\",\n  profiles: [],\n  file: \"\",\n  status_id: 1,\n};\n\nconst initialErrors = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  profiles: \"\"\n}\n\nexport const useFormUsers = (setUser: any, user: any) => {\n  const [userProfiles, setUserProfiles] = useState<any>([]);\n  const [typePassword, setTypePassword] = useState({ type: 'password' });\n  const [isLocked, setIsLocked] = useState(true);\n  const [isPasswordTouched, setIsPasswordTouched] = useState(false);\n  const [errors, setErrors] = useState<any>(initialErrors);\n  const [hasErrors, setHasErrors] = useState(true);\n\n  // Reset form\n  const resetForm = () => {\n    setUser(initialState);\n    setUserProfiles([]);\n    setErrors(initialErrors);\n  };\n\n  // Hide and See Password\n  const showHide = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setTypePassword((prev: any) => ({ type: prev.type === 'text' ? 'password' : 'text' }));\n    setIsLocked((prev: boolean) => !prev);\n  }\n\n  const handleCheckboxChange = (profileId: number) => {\n    // Check si el profileId existe en el array de profiles\n    const profileIndex = userProfiles.indexOf(profileId);\n\n    if (profileIndex === -1) {\n      // Si el profileId no está en el arreglo, agregalo\n      const newProfile = userProfiles.length === 0 ? [profileId] : [...userProfiles, profileId];\n\n     setUserProfiles([...userProfiles, profileId]);\n     setUser((prev: any) => ({ ...prev, profiles: newProfile }));\n\n    } else {\n      // Si el profileId ya está en el arreglo, elíminalo\n      const updatedProfiles = userProfiles?.filter((id: number) => id !== profileId);\n       setUserProfiles(updatedProfiles);\n       setUser((prev: any) => ({ ...prev, profiles: updatedProfiles }));\n    }\n  };\n\n  const handleChange = (e: any) => {\n    \n    const validationErrors: any = { ...errors };\n\n    const { name, value } = e.target;\n    let updatedValue = value;\n\n    if (name === \"name\") {\n      updatedValue = value.toLowerCase().replace(/\\b\\w/g, (char: string) => char.toUpperCase());\n    }\n\n    if (e.target.name === \"name\" && isPasswordTouched) {\n      // Validar el campo de nombre (required)\n      if (validator.isEmpty(e.target.value)) {\n        validationErrors.name = [\"El nombre es obligatorio\"];\n      } else {\n        delete validationErrors.name;\n      }\n      setUser((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    if (e.target.name === \"password\" && isPasswordTouched) {\n      // Expresion regular - valida que la contraseña cumpla con la documentacion (Un numero, una letra mayuscula y una minuscula, al menos 8 caracteres de longitud, )\n      const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n      validationErrors.password = [];\n\n      if (!passwordRegex.test(e.target.value)) {\n        // Agregamos los mensajes de error al array 'validationErrors.password'\n        if (e.target.value.length < 8) {\n          validationErrors.password.push(\" La contraseña debe tener al menos 8 caracteres\");\n        }\n        if (!/\\d/.test(e.target.value)) {\n          validationErrors.password.push(\" Contener al menos un número\");\n        }\n        if (!/[A-Z]/.test(e.target.value)) {\n          validationErrors.password.push(\" Incluir al menos una letra mayúscula\");\n        }\n        if (!/[a-z]/.test(e.target.value)) {\n          validationErrors.password.push(\" Incluir al menos una letra minúscula\");\n        }\n      } else {\n        delete validationErrors.password;\n      }\n      if (e.target.value === \"\" && user.id) {\n        delete validationErrors.password;\n      }\n      setUser((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    if (e.target.name === \"email\" && isPasswordTouched) {\n      if (!isValidEmail(e.target.value) || validator.isEmpty(e.target.value)) {\n        validationErrors.email = [\"Correo Invalido o vacio\"];\n      } else {\n        delete validationErrors.email;\n      }\n      setUser((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    if (e.target.name === \"phone\" && isPasswordTouched) {\n      // Limpiar caracteres no numéricos\n      e.target.value = e.target.value.replace(/[^\\d]/g, \"\");\n      // Limitar a 10 dígitos\n      e.target.value = e.target.value.slice(0, 10);\n\n      if (e.target.length > 10 || e.target.value === \"\" || validator.isEmpty(e.target.value) || e.target.length === 0) {\n        validationErrors.phone = [\"Número telefonico no válido\"];\n      } else {\n        delete validationErrors.phone;\n      }\n      setUser((prev: any) => ({ ...prev, [e.target.name]: e.target.value }));\n    }\n\n    if (e.target.name === \"profiles\") {\n      if (!e.target.checked && userProfiles.length === 1) {\n        validationErrors.profiles = [\"Seleccione al menos un rol\"];\n      } else {\n        delete validationErrors.profiles;\n      }\n      handleCheckboxChange(Number(e.target.value));\n      //setUserProfiles([1,2,3,4]);\n    }\n\n    if (e.target.name === \"status_id\") {\n      setUser((prev: any) => ({\n        ...prev,\n        [e.target.name]: Number(e.target.value),\n      }));\n    }\n   \n    // Si hay errores, actualiza el estado con ellos\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      setHasErrors(true);\n    } else {\n      setErrors({});\n      setHasErrors(false);\n    }\n  };\n\n  return {\n    // Methods\n    handleCheckboxChange,\n    handleChange,\n    setUserProfiles,\n    showHide,\n    setIsPasswordTouched,\n    resetForm,\n    setErrors,\n    setHasErrors,\n    // Properties\n    isPasswordTouched,\n    userProfiles,\n    typePassword,\n    isLocked,\n    errors,\n    hasErrors,\n  };\n};\n","import React from 'react'\nimport { useAlert } from './useAlert';\n\nexport const useTokenQuoteCheck = () => {\n  const { handleInfoAlert } = useAlert();\n\n  const handlerRedirect = (storageQuoteId: string | null) => {\n    if (!storageQuoteId) {\n      handleInfoAlert(\"Necesitas seleccionar el tipo de cotización\", `cotizar`);\n    }\n  }\n\n  return { handlerRedirect };\n}\n","export function isValidEmail(email: any) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n}\n\n// Formato NIT: (\"123456-2\" || \"123456\")\n// MIN DE 6 DIGITOS. VÁLIDO TERMINAR CON GUION Y UN NÚMERO. TAMBIÉN VÁLIDO QUE NO TENGA GUION.\nexport function isValidNit(nit: string) {\n    return /^\\d{5,12}-?\\d$/.test(nit);\n}\n\nexport function isNumberNotNegative(number: any) {\n    return /^0+|[^0-9]/g.test(number);\n}"],"names":["useFile","setUser","fileInputRef","useRef","useState","image","setImage","handleAdd","newFile","reader","FileReader","addEventListener","ev","fileBase64","target","result","prev","file","readAsDataURL","files","handleDelete","deleted","handleButtonClick","current","click","handleChangeImage","useAddInputs","errors","setData","setErrors","setHasErrors","value","showRemove","isDisabled","inputs","setInputs","handleEditConfirmation","useAlert","handleAddInput","length","updatedInputs","console","log","changeIsDisabled","index","updatedItems","handleRemoveInput","name","printName","validationErrors","splice","isConfirmed","Object","keys","handleChangeInput","handleResetInputs","mapInputArray","array","arreglo","forEach","useErrors","initialErrors","setError","field","errorMessage","prevErrors","clearError","updatedErrors","initialState","id","email","password","phone","profiles","status_id","useFormUsers","user","userProfiles","setUserProfiles","type","typePassword","setTypePassword","isLocked","setIsLocked","isPasswordTouched","setIsPasswordTouched","hasErrors","handleCheckboxChange","profileId","indexOf","newProfile","updatedProfiles","filter","handleChange","e","toLowerCase","replace","char","toUpperCase","validator","test","push","isValidEmail","slice","checked","Number","showHide","preventDefault","stopPropagation","resetForm","useTokenQuoteCheck","handleInfoAlert","handlerRedirect","storageQuoteId","isValidNit","nit"],"sourceRoot":""}