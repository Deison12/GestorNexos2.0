{"version":3,"file":"static/js/5070.531b3615.chunk.js","mappings":"mbAKMA,EAAe,CACjBC,GAAI,EACJC,KAAM,GACNC,MAAO,GACPC,eAAgB,GAChBC,QAAS,GACTC,KAAM,GACNC,SAAU,EACVC,UAAW,EACXC,cAAe,EACfC,KAAM,GACNC,OAAQ,IA+WZ,EA5WuB,SACnBC,EACAC,GACE,IAAD,EACKC,EAAmBF,GAAY,kBAE1BA,GAAY,IACfD,QAA2B,QAAnB,EAAAC,EAAaD,cAAM,aAAnB,EAAqBI,KAAI,SAACC,GAAU,iBAAWA,EAAK,MAAQ,MAAE,kBAEnEhB,GAAY,IAAEW,OAAQ,CAAC,CAAEM,cAAe,GAAIC,KAAM,GAAIC,WAAY,MAE7E,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAC9B,GAAyCC,EAAAA,EAAAA,MAAjCC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAC1B,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAwBF,EAAAA,EAAAA,UAAcd,GAAiB,eAAhDiB,EAAI,KAAEC,EAAO,KACpB,GAAkDJ,EAAAA,EAAAA,UAAa,IAAG,eAAxCK,GAAF,KAAsB,MAC9C,GAAoCL,EAAAA,EAAAA,YAAe,eAA5CM,EAAU,KAAEC,EAAa,KAChC,GAAoCP,EAAAA,EAAAA,WAAS,GAAM,eAA5CQ,EAAU,KAAEC,EAAa,KAChC,GAA4EC,EAAAA,EAAAA,IAAQN,GAA5EO,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAAcC,EAAK,EAALA,MAAOC,EAAiB,EAAjBA,kBAAmBC,EAAY,EAAZA,aAC3D,GAAyEC,EAAAA,EAAAA,MAAjEC,EAAsB,EAAtBA,uBAA4CC,GAAF,EAAlBC,mBAAoC,EAAhBD,kBACpD,GAA4ClB,EAAAA,EAAAA,WAAS,GAAK,eAAnDoB,GAAc,KAAEC,GAAiB,KAGlCC,GAAiB,SAACC,EAAeC,GACnC,IAAMC,GAAqB,UAAQ5B,GAClB,SAAb0B,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBnD,KAAO,CAAC,yCAElBmD,EAAiBnD,MAGf,SAAbiD,IACIG,IAAAA,QAAkBF,GAClBC,EAAiB/C,KAAO,CAAC,uCAElB+C,EAAiB/C,MAGf,UAAb6C,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBlD,MAAQ,CAAC,iCAClBmD,IAAAA,UAAoBF,UAGrBC,EAAiBlD,MAFxBkD,EAAiBlD,MAAQ,CAAC,wCAKjB,mBAAbgD,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBjD,eAAiB,0CAC1BkD,IAAAA,UAAoBF,UAGrBC,EAAiBjD,eAFxBiD,EAAiBjD,eAAiB,iDAKzB,sBAAb+C,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBE,kBAAoB,0DAE9BF,EAAiBE,mBAGf,kBAAbJ,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBpC,cAAgB,4DAE1BoC,EAAiBpC,eAGf,SAAbkC,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBnC,KAAO,uCAEjBmC,EAAiBnC,MAGf,YAAbiC,IACIG,IAAAA,QAAkBF,GAClBC,EAAiBhD,QAAU,uDAEpBgD,EAAiBhD,SAIhCqB,EAAS,OAAQ2B,EAAiBnD,MAClCwB,EAAS,OAAQ2B,EAAiB/C,MAClCoB,EAAS,QAAS2B,EAAiBlD,OACnCuB,EAAS,iBAAkB2B,EAAiBjD,gBAC5CsB,EAAS,oBAAqB2B,EAAiBE,mBAC/C7B,EAAS,gBAAiB2B,EAAiBpC,eAC3CS,EAAS,OAAQ2B,EAAiBnC,MAClCQ,EAAS,UAAW2B,EAAiBhD,QACzC,EA2FMmD,GAAU,yCAAG,4GAEOlC,EAASS,EAAM,yBAAyB,EAAO,eAAe,KAAD,EAAtE,uDAET0B,QAAQC,MAAM,uBAAuB,EAAD,IACpCZ,EAAiB,2BAA2B,yDAEnD,kBAPe,mCAShBW,QAAQE,IAAI5B,GAEZ,IAAM6B,GAAQ,yCAAG,oHAGwBf,EAAuB,oDAA8C,KAAD,EAA7E,OACDgB,cACmC9B,EAA9C+B,cAA8C/B,EAA/BgC,WAA+BhC,EAAnBiC,MAAUC,GAAI,OAAKlC,EAAI,IAEpDmC,GAAO,kBACND,GAAI,IACPtD,OAAQoB,EAAKpB,OAAOI,KAAI,SAACC,GAAU,MAAM,CACrCC,cAAeD,EAAMC,cACrBC,KAAMF,EAAME,KACZC,WAAYH,EAAMG,WACrB,IACDgD,eAAgB,GAChBzD,KAAM+B,KAEF9B,OAAOI,IAAG,yCAAC,WAAOC,GAAU,2EAC5BA,EAAMC,eAAgC,OAAfD,EAAME,WAAgCkD,IAAfpD,EAAME,MAAkB,gCAChEK,EAAQ2C,EAAS,iBAAkB,eAAe,KAAD,sCAE9D,mDAJiB,KAKrB,gDAEDT,QAAQC,MAAM,qBAAqB,EAAD,IAClCZ,EAAiB,4BAA4B,yDAEpD,kBA3Ba,mCAkCRuB,GAAoB,yCAAG,yGACPhD,EAAW,8BAA8B,KAAD,EAApDiD,EAAG,OACTnC,EAAcmC,GAAK,2CACtB,kBAHyB,mCAwG1B,OApBAC,EAAAA,EAAAA,YAAU,WAGDnC,IACDiC,KACAhC,GAAc,GAEtB,GAAG,CAACD,EAAYiC,MAEhBE,EAAAA,EAAAA,YAAU,WACA3D,GACFqB,EAAqBrB,EAAaD,OAE1C,GAAG,CAACC,EAAcwB,EAAYiC,MAE9BE,EAAAA,EAAAA,YAAU,WAENtB,IAzCgB,WAChB,IAAQ/C,EAAuD6B,EAAvD7B,KAAMI,EAAiDyB,EAAjDzB,KAAMH,EAA2C4B,EAA3C5B,MAAOC,EAAoC2B,EAApC3B,eAAgBC,EAAoB0B,EAApB1B,QAASM,EAAWoB,EAAXpB,OAG9C6D,EACFtE,GAAQI,GAAQH,GAASC,GAAkBC,EAGzCoE,EAAwB9D,EAAO+D,OAAS,EAa9C,OAVuB/D,EAAOgE,OAC1B,SAAC3D,GAAU,OACPA,EAAMC,cAAcyD,OAAS,GAC7B1D,EAAME,KAAKwD,OAAS,IACnBpB,IAAAA,UAAoBtC,EAAMC,gBAAkBqC,IAAAA,eAAyBtC,EAAMC,kBAC3EqC,IAAAA,UAAoBtC,EAAME,OAASoC,IAAAA,eAAyBtC,EAAME,MAAM,IAG7DsD,GAA2BC,CAGnD,CAmBuBG,GACvB,GAAG,CAAC7C,IAEG,CACHA,KAAAA,EAEAQ,UAAAA,EACAI,aAAAA,EACAkC,aA3OiB,WACjB,IAAMC,GAAS,OAAO/C,EAAKpB,QAC3BmE,EAAUC,KAAK,CAAE9D,cAAe,GAAIC,KAAM,KAC1Cc,GAAQ,kBACDD,GAAI,IACPpB,OAAQmE,IAEhB,EAqOIE,gBAnOoB,SAACC,GACrB,IAAMH,GAAS,OAAO/C,EAAKpB,QAC3BmE,EAAUI,OAAOD,EAAO,GACxBjD,GAAQ,kBACDD,GAAI,IACPpB,OAAQmE,IAEhB,EA6NIpC,kBAAAA,EAEAF,aAAAA,EACAC,MAAAA,EAEA0C,iBAhOqB,SAACC,GACtB,MAAwBA,EAAEC,OAAlBnF,EAAI,EAAJA,KAAMoF,EAAK,EAALA,MACVC,EAAeD,EAEN,SAATpF,IACAqF,EAAeD,EAAME,eAEzBxD,GAAQ,SAACyD,GAAS,yBACXA,GAAI,cACNvF,EAAOqF,GAAY,GAE5B,EAsNIG,aApNiB,SAACN,GAClB,MAA8BA,EAAEC,OAAxBnF,EAAI,EAAJA,KAAMoF,EAAK,EAALA,MAAOK,EAAI,EAAJA,KACjBC,EAAoB,UAATD,EAAmBE,SAASP,GAASA,EAEvC,WAATK,GAAqBC,EAAW,IAChCA,EAAW,GAEf5D,GAAQ,kBACDD,GAAI,cACN7B,EAAO0F,KAEZ,IAAMzC,EAAWiC,EAAEC,OAAOnF,KACpBkD,EAAYgC,EAAEC,OAAOC,MAC3B3D,EAAWzB,GACXgD,GAAeC,EAAUC,EAC7B,EAsMI0C,YApMgB,SAACV,GACjB,MAAwBA,EAAEC,OAAlBnF,EAAI,EAAJA,KAAMoF,EAAK,EAALA,MACA,SAAVA,GAA8B,KAAVA,GACpBtD,GAAQ,SAACyD,GAAS,yBACXA,GAAI,cACNvF,EAAO,IAAE,IAGlB4B,GAAc,EAClB,EA4LIiE,WAtLe,SAACX,GAChB,MAAwBA,EAAEC,OAAlBnF,EAAI,EAAJA,KACM,KADK,EAALoF,OAEVtD,GAAQ,SAACyD,GAAS,yBACXA,GAAI,cACNvF,EAAO,QAAM,GAG1B,EA+KI8F,iBA3LqB,WACrBlE,GAAc,EAClB,EA0LID,WAAAA,EAEAoE,aAhIiB,SAACb,GAClBA,EAAEc,iBAjDiB,WAAO,IAAD,EACE,OAAf,OAARrF,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUsF,aAAK,WAAP,EAAR,EAAiBlG,IACjB2D,KAEAJ,IAER,CA4CI4C,EACJ,EA+HIC,uBAxH2B,SAACpB,GAC5B,IAAMqB,EAAgBvE,EAAKpB,OAC3B,OAAiB,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYqE,QACf,SAACvF,GAAU,OAAMsF,EAAcE,SAASxF,EAAMf,KAAOqG,EAAcrB,GAAOhE,gBAAkBD,EAAMf,EAAE,GAE5G,EAoHIwG,8BA/GkC,SAACxB,EAAeyB,EAAepB,GACnD,SAAVoB,GAAoBpB,EAAQ,IAC5BA,EAAQ,GAGE,eAAVoB,IACApB,EAAQA,EAAQ,EAAI,GAGxB,IAAMqB,GAAU,OAAO5E,EAAKpB,QACtBiG,GAAY,UAAQD,EAAW1B,IACrC2B,EAAaF,GAASpB,EAGtB,IAAMuB,EAAeF,EAAW5F,KAAI,SAACC,GAAK,OAAKA,EAAMC,aAAa,IAC5D6F,EAAsBhG,EAAiBH,OAAOI,KAAI,SAACC,GAAU,OAAKA,EAAMC,aAAa,IAG3F,GACI4F,EAAaE,MAAM,EAAG9B,GAAOuB,SAASlB,IACtCuB,EAAaE,MAAM9B,EAAQ,GAAGuB,SAASlB,IACvCwB,EAAoBN,SAASlB,GAG7BxC,EAAiB,qDACjB8D,EAAa3F,cAAgB,OAC1B,CACH0F,EAAW1B,GAAS2B,EAEpB5E,GAAQ,SAACyD,GAAS,yBACXA,GAAI,IACP9E,OAAQgG,GAAU,IAGtB,IAAMxD,EAAWuD,EACXtD,EAAYkC,EAClB3D,EAAWwB,GACXD,GAAeC,EAAUC,EAC7B,CACJ,EA0EI3B,OAAAA,EACAuF,cAvQkB,WAClB,IAAMC,EAAgB,GAItB,OAHIxF,EAAOR,eAAegG,EAAclC,KAAKtD,EAAOR,eAChDQ,EAAOP,MAAM+F,EAAclC,KAAKtD,EAAOP,MACvB+F,EAAclG,KAAI,SAAC2C,GAAK,OAAMwD,MAAMC,QAAQzD,GAASA,EAAM,GAAKA,CAAK,GAE7F,EAkQIV,eAAAA,GAER,E,WCuFA,EAzcmC,WAAO,IAAD,oBAC/BnC,GAAgBuG,EAAAA,EAAAA,MACPxG,EAAiBC,EAAxBsF,MACR,EA0BIkB,EAAezG,EAAcC,GAzB7BkB,EAAI,EAAJA,KAEAQ,EAAS,EAATA,UACAI,EAAY,EAAZA,aACAkC,EAAY,EAAZA,aACAG,EAAe,EAAfA,gBACAtC,EAAiB,EAAjBA,kBAEAF,EAAY,EAAZA,aACAC,EAAK,EAALA,MAEA0C,EAAgB,EAAhBA,iBACAO,EAAY,EAAZA,aACAI,EAAW,EAAXA,YACAC,EAAU,EAAVA,WAEAE,EAAY,EAAZA,aAEAI,EAAsB,EAAtBA,uBACAI,EAA6B,EAA7BA,8BACAT,EAAgB,EAAhBA,iBACAnE,EAAU,EAAVA,WACAJ,EAAM,EAANA,OACAuF,EAAa,EAAbA,cACAhE,EAAc,EAAdA,eA8BJ,GAA0CpB,EAAAA,EAAAA,UAAS,IAAG,eACtD,GADoB,KAAkB,MACAA,EAAAA,EAAAA,UAAS,IAAE,eAA/B,KAAgB,KAelC,OACI,iCAEI,SAAC,KAAU,CACP0F,MAAO,CAAC,SAAU,kBAAmB,cAAuB,OAARzG,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUsF,aAAK,OAAf,EAAiBlG,GAAK,cAAgB,gBAC1FsH,QAAS,CAAC,SAAU,wBAAyB,oBAA6B,OAAR1G,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUsF,aAAK,OAAf,EAAiBlG,GAAK,gBAAyB,OAARY,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUsF,aAAK,WAAP,EAAR,EAAiBlG,IAAK,oBAGnI,SAAC,KAAc,CACXuH,MAAe,OAAR3G,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUsF,aAAK,OAAf,EAAiBlG,GAAK,cAAgB,eAC7CwH,MAAM,YAIV,SAACC,EAAA,EAAI,CAACC,UAAU,eAAc,UAC1B,SAACD,EAAA,OAAS,CAACC,UAAU,MAAK,UACtB,SAACC,EAAA,EAAI,CAACD,UAAU,kBAAkBE,SAAU5B,EAAa,UACrD,UAAC6B,EAAA,EAAG,YACA,UAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAE,WACtC,SAACC,EAAA,EAAS,CAACV,UAAU,aAAY,UAC7B,UAACU,EAAA,EAAS,CAACV,UAAU,2BAA0B,WAC3C,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,0BAGlC,SAAC,KAAiB,CAACW,QAAS7G,EAAOvB,KAAM2B,WAAYA,EAAW,UAC5D,kBACI8D,KAAK,OACLgC,UAAS,+BACTY,YAAY,GACZrI,KAAK,OACLsI,UAAQ,EACRC,SAAUtD,EACVuD,QAAS1C,EACTV,MAAiB,QAAZ,EAAM,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM7B,YAAI,QAAI,aAKrC,SAACmI,EAAA,EAAS,CAACV,UAAU,aAAY,UAC7B,UAACU,EAAA,EAAS,CAACV,UAAU,2BAA0B,WAC3C,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,mBAGlC,SAAC,KAAiB,CAACW,QAAS7G,EAAOnB,KAAMuB,WAAYA,EAAW,UAC5D,SAAC+F,EAAA,UAAY,CACTjC,KAAK,OACLgC,UAAU,eACVY,YAAY,GACZrI,KAAK,OACLsI,UAAQ,EACRlD,MAAiB,QAAZ,EAAM,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMzB,YAAI,QAAI,GACrBmI,SAAU/C,EACVgD,QAAS1C,YAMzB,SAACqC,EAAA,EAAS,CAACV,UAAU,aAAY,UAC7B,UAACU,EAAA,EAAS,CAACV,UAAU,2BAA0B,WAC3C,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,4BAGlC,SAAC,KAAiB,CAACW,QAAS7G,EAAOtB,MAAO0B,WAAYA,EAAW,UAC7D,SAAC+F,EAAA,UAAY,CACTjC,KAAK,SACLgC,UAAU,eACVY,YAAY,GACZrI,KAAK,QACLsI,UAAQ,EACRlD,MAAiB,QAAZ,EAAEvD,EAAK5B,aAAK,QAAI,GACrBsI,SAAU/C,EACVgD,QAAS5C,EACT6C,OAAQ5C,YAKxB,SAACsC,EAAA,EAAS,CAACV,UAAU,aAAY,UAC7B,UAACU,EAAA,EAAS,CAACV,UAAU,2BAA0B,WAC3C,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,qCAGlC,SAAC,KAAiB,CAACW,QAAS7G,EAAOrB,eAAgByB,WAAYA,EAAW,UACtE,SAAC+F,EAAA,UAAY,CACTjC,KAAK,SACLgC,UAAU,eACVY,YAAY,GACZrI,KAAK,iBACLsI,UAAQ,EACRlD,MAA2B,QAAtB,EAAM,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM3B,sBAAc,QAAI,GAC/BqI,SAAU/C,EACVgD,QAAS5C,EACT6C,OAAQ5C,YAKxB,SAACsC,EAAA,EAAS,CAACV,UAAU,aAAY,UAC7B,UAACU,EAAA,EAAS,CAACV,UAAU,2BAA0B,WAC3C,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,uCAGlC,SAAC,KAAiB,CAACW,QAAS7G,EAAO8B,kBAAmB1B,WAAYA,EAAW,UACzE,SAAC+F,EAAA,UAAY,CACTjC,KAAK,OACLgC,UAAU,eACVY,YAAY,GACZrI,KAAK,oBACLsI,UAAQ,EACRlD,MAA8B,QAAzB,EAAM,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,yBAAiB,QAAI,GAClCmF,QAAS1C,EACTyC,SAAU/C,eAQ9B,UAACqC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAU,kBAAiB,WAClE,UAACG,EAAA,EAAG,YACA,SAACC,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,iCAAgC,UAC9E,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,mBAEtC,SAACI,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,iCAAgC,UAC9E,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,uCAEtC,SAACI,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,kBAAiB,UAC/D,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,wBAIzCT,MAAMC,QAAQpF,EAAKpB,SAChBoB,EAAKpB,OAAOI,KAAI,SAAC6H,EAAgB3D,GAAa,iBAC1C,SAAC6C,EAAA,EAAG,CAAaH,UAAU,OAAM,UAC7B,iCACI,SAACI,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,iCAAgC,UAC9E,SAACU,EAAA,EAAS,CAACV,UAAU,iBAAgB,UACjC,gBAAKA,UAAU,0BAAyB,UACpC,UAACC,EAAA,QAAU,CAACD,UAAU,iCAAgC,WAClD,SAACC,EAAA,UAAY,CACTjC,KAAK,WACLgC,UAAU,uBACVzH,KAAK,aACL2I,QAAkC,IAAzBD,EAAUzH,WACnBsH,SAAU,SAACrD,GAAC,OACRqB,EACIxB,EACA,aACCG,EAAEC,OAA4BwD,QAAU,EAAI,EAChD,KAGT,iBAAMlB,UAAU,mCAKhC,SAACI,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,iCAAgC,UAC9E,SAACU,EAAA,EAAS,CAACV,UAAU,uBAAsB,UACvC,SAACU,EAAA,EAAS,CAACV,UAAU,sCAAqC,UACtD,gBAAKA,UAAU,6CAA4C,UACvD,UAACC,EAAA,SAAW,CACR1H,KAAK,gBACL,aAAW,yBACXoF,MAA+B,QAA1B,EAAW,OAATsD,QAAS,IAATA,OAAS,EAATA,EAAW3H,qBAAa,QAAI,GACnCwH,SAAU,SAACrD,GAAC,OAAKqB,EAA8BxB,EAAO,gBAAiBG,EAAEC,OAAOC,MAAM,EAAC,WAEvF,sBAEiC,QAFhB,EAEbe,EAAuBpB,UAAM,aAA7B,EAA+BlE,KAAI,SAACC,GAAU,OAC1C,mBAAuBsE,MAAOtE,EAAMf,GAAG,SAClCe,EAAMd,MADEc,EAAMf,GAEV,gBAOrC,UAAC8H,EAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGT,UAAU,qDAAoD,WAClG,gBAAKA,UAAU,6CAA4C,UACvD,SAACC,EAAA,UAAY,CACTjC,KAAK,SACLgC,UAAU,qBACVzH,KAAK,OACLoF,MAAsB,QAAjB,EAAW,OAATsD,QAAS,IAATA,OAAS,EAATA,EAAW1H,YAAI,QAAI,GAC1BuH,SAAU,SAACrD,GAAC,OAAKqB,EAA8BxB,EAAO,OAAQG,EAAEC,OAAOC,MAAM,OAGrF,SAACwD,EAAA,EAAiB,CACdC,SAAS,SACTpB,UAAU,8CACVqB,QAAS,kBAAMhE,EAAgBC,EAAM,WA3D3CA,EA+DJ,KAGd,iBAAK0C,UAAU,mDAAkD,WAC7D,SAAC,KAAiB,CAACW,QAAStB,IAAiBnF,WAAYA,EAAW,UAAC,2BAErE,gBAAK8F,UAAU,WAAU,UACrB,SAACsB,EAAA,EAAoB,CACjBF,SAAS,SACTpB,UAAU,mCACVqB,QAASnE,UAIrB,UAACwD,EAAA,EAAS,YACN,SAACT,EAAA,QAAU,oCACX,SAAC,KAAiB,CAACU,QAAS7G,EAAOpB,QAASwB,WAAYA,EAAW,UAC/D,SAAC+F,EAAA,UAAY,CACTsB,MAAO,CAAEC,OAAQ,QAASC,UAAW,UACrCC,GAAG,WACHnJ,KAAK,UACLoF,MAAoB,QAAf,EAAM,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,eAAO,QAAI,GACxBoI,SAAU/C,EACV6C,YAAY,2BACZC,UAAQ,aAOxB,UAACT,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAU,6DAA4D,WAE7G,iBAAKA,UAAU,yCAAwC,WACnD,SAACC,EAAA,QAAU,6CACX,iBAAKD,UAAU,qDAAoD,WAC/D,gBACI2B,IAAK7G,IAAa,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,QAAS,sFAC7BuF,IAAI,2BACJ5B,UAAU,gEAEd,kBACIhC,KAAK,OACL8C,SAAUlG,EACViH,IAAKhH,EACLtC,KAAK,OACLD,GAAG,OACH0H,UAAU,YAEd,gBAAKqB,QAAStG,EAAmBwG,MAAO,CACpCO,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,mBACXC,OAAQ,WACV,UACE,SAACC,EAAA,EAAe,CAACf,SAAS,QAAQgB,MAAM,cAG5C,gBAAKf,QAASrG,EAAcuG,MAAO,CAC/BO,SAAU,WACVO,OAAQ,IACRL,KAAM,MACNE,OAAQ,WACV,UACE,SAACI,EAAA,EAAgB,CAAClB,SAAS,SAASgB,MAAM,oBAKtD,SAACjC,EAAA,EAAG,WACA,SAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG,UAExC,UAACC,EAAA,EAAS,CAACV,UAAU,yBAAwB,WACzC,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,qBAClC,iBAAKA,UAAU,8DAA6D,WACxE,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,YACLoF,MAAO,EACPuD,QAA6B,KAAhB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMvB,WACfiI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,wBAE1C,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,YACLoF,MAAO,EACPuD,QAA6B,KAAhB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMvB,WACfiI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,oCAO1D,UAACG,EAAA,EAAG,YACA,SAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE,UAEvC,UAACC,EAAA,EAAS,CAACV,UAAU,yBAAwB,WACzC,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,uBAClC,iBAAKA,UAAU,8DAA6D,WACxE,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,WACLoF,MAAO,EACPuD,QAA4B,KAAf,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMxB,UACfkI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,wBAE1C,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,WACLoF,MAAO,EACPuD,QAA4B,KAAf,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMxB,UACfkI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,kCAKtD,SAACI,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAE,UAEvC,UAACC,EAAA,EAAS,CAACV,UAAU,yBAAwB,WACzC,SAACC,EAAA,QAAU,CAACD,UAAU,aAAY,+BAClC,iBAAKA,UAAU,8DAA6D,WACxE,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,gBACLoF,MAAO,EACPuD,QAAiC,KAApB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMtB,eACfgI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,wBAE1C,UAACC,EAAA,QAAU,CAACD,UAAU,8BAA6B,WAC/C,SAACC,EAAA,UAAY,CACTjC,KAAK,QACLgC,UAAU,uBACVzH,KAAK,gBACLoF,MAAO,EACPuD,QAAiC,KAApB,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMtB,eACfgI,SAAU/C,KAEd,iBAAMiC,UAAU,uBAAsB,qCAM1D,SAACuC,EAAA,EAAM,CACHC,QAAQ,GACRxC,UAAU,kBACVuB,MAAO,CAAEkB,MAAO,QAChBzE,KAAK,SACL0E,SAAUrH,EAAe,mCAa7D,C,yCChdIsH,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mKACD,oBAEJN,EAAQ,EAAUG,C,yCCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gNACD,iBAEJN,EAAQ,EAAUG,C,yCCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,8OACD,gBAEJN,EAAQ,EAAUG,C,yCCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFE,GAAI,KACJC,GAAI,KACJC,EAAG,OACF,MAAmB,EAAIP,EAAYG,KAAK,OAAQ,CACjDC,EAAG,6JACF,MAAO,eAEVN,EAAQ,EAAUG,C,qCCnBlBO,OAAOC,eAAeX,EAAS,aAAc,CAC3ClF,OAAO,IAET4F,OAAOC,eAAeX,EAAS,UAAW,CACxCY,YAAY,EACZC,IAAK,WACH,OAAOC,EAAOC,aAChB,IAGF,IAAID,EAASf,EAAQ,M,+vBCXrB,E,SAAoC,E,sBCApC,MCDe,SAA4BjH,EAAWkI,GAElD,OAAO,kBAAM,IAAI,CAarB,E,yCCdA,MCAe,SAA4BC,EAAsBC,GAE7D,OAAO,kBAAM,IAAI,CA0BrB,EC5BA,E,SAAqB,E,sBCArB,MCDe,SAAyBC,EAAOC,EAAUC,EAAehL,EAAUiL,GAE9E,OAAO,IAUX,E,4CCQaC,EAA8B,CACzCC,UAAW,SAAAC,GACTxI,QAAQyI,KAAK,CAAC,6GAA8G,GAAI,iGAAkG,GAAI,mGAAoG,GAAI,0EAA0EC,KAAK,OAC7ZC,EAAAA,EAAAA,UAA6BH,EAC/B,E,oBCnBFI,EAAO7B,QALP,SAAgC8B,GAC9B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,EAEf,EACyCD,EAAO7B,QAAQ+B,YAAa,EAAMF,EAAO7B,QAAiB,QAAI6B,EAAO7B,O","sources":["containers/ItemsContainer.tsx","components/Nexos/pages/ListItems/CreateOrEditItems.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/DeleteForever.js","../node_modules/@mui/icons-material/HighlightOff.js","../node_modules/@mui/icons-material/PhotoCamera.js","../node_modules/@mui/icons-material/utils/createSvgIcon.js","../node_modules/@mui/material/esm/utils/createChainedFunction.js","../node_modules/@mui/material/esm/utils/deprecatedPropType.js","../node_modules/@mui/utils/esm/deprecatedPropType.js","../node_modules/@mui/material/esm/utils/requirePropFactory.js","../node_modules/@mui/utils/esm/requirePropFactory.js","../node_modules/@mui/material/esm/utils/setRef.js","../node_modules/@mui/material/esm/utils/unsupportedProp.js","../node_modules/@mui/utils/esm/unsupportedProp.js","../node_modules/@mui/material/esm/utils/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\nimport validator from \"validator\";\nimport { useAlert, useErrors, useFetch, useFile } from \"../components/Nexos/hooks\";\n\nconst initialState = {\n    id: 0,\n    name: \"\",\n    price: \"\",\n    price_fraction: \"\",\n    details: \"\",\n    note: \"\",\n    contable: 1,\n    status_id: 1,\n    show_quantity: 1,\n    file: \"\",\n    quotes: [] as Array<{ quote_type_id: string; id: number; sort: string, is_default: number }>,\n};\n\nconst ItemsContainer = (\n    editItemData?: any,\n    location?: any,\n) => {\n    const initialItemState = editItemData\n        ? {\n            ...editItemData,\n            quotes: editItemData.quotes?.map((quote: any) => ({ ...quote })) || [],\n        }\n        : { ...initialState, quotes: [{ quote_type_id: \"\", sort: \"\", is_default: 0 }] };\n\n    const { getAllData, postData, putData } = useFetch();\n    const { errors, setError, clearError } = useErrors();\n    const [inputFocus, setInputFocus] = useState(false);\n    const [item, setItem] = useState<any>(initialItemState);\n    const [orderAndQuoteType, setOrderAndQuoteType] = useState<[]>([]);\n    const [quoteTypes, setQuoteTypes] = useState<any>();\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const { handleAdd, fileInputRef, image, handleButtonClick, handleDelete } = useFile(setItem);\n    const { handleEditConfirmation, handleSuccessAlert, handleErrorAlert } = useAlert();\n    const [disabledButton, setDisabledButton] = useState(true)\n\n    //Errors\n    const validateErrors = (nameData: any, valueData: any) => {\n        const validationErrors: any = { ...errors };\n        if (nameData === \"name\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.name = [\"El campo nombre es obligatorio\"];\n            } else {\n                delete validationErrors.name;\n            }\n        }\n        if (nameData === \"note\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.note = [\"El campo nota es obligatorio\"];\n            } else {\n                delete validationErrors.note;\n            }\n        }\n        if (nameData === \"price\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.price = [\"El campo valor es obligatorio\"];\n            } else if (!validator.isNumeric(valueData)) {\n                validationErrors.price = [\"El campo valor debe ser numérico\"];\n            } else {\n                delete validationErrors.price;\n            }\n        }\n        if (nameData === \"price_fraction\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.price_fraction = \"El campo valor adicional es obligatorio\";\n            } else if (!validator.isNumeric(valueData)) {\n                validationErrors.price_fraction = \"El campo valor adicional debe ser numérico\";\n            } else {\n                delete validationErrors.price_fraction;\n            }\n        }\n        if (nameData === \"service_condition\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.service_condition = \"El campo condiciones del servicio es obligatorio\";\n            } else {\n                delete validationErrors.service_condition;\n            }\n        }\n        if (nameData === \"quote_type_id\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.quote_type_id = \"Debe seleccionar al menos un tipo de cotización\";\n            } else {\n                delete validationErrors.quote_type_id;\n            }\n        }\n        if (nameData === \"sort\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.sort = \"El campo orden es obligatorio\";\n            } else {\n                delete validationErrors.sort;\n            }\n        }\n        if (nameData === \"details\") {\n            if (validator.isEmpty(valueData)) {\n                validationErrors.details = \"El campo detalles del servicio es obligatorio\";\n            } else {\n                delete validationErrors.details;\n            }\n        }\n        // Set the errors for each field separately\n        setError(\"name\", validationErrors.name);\n        setError(\"note\", validationErrors.note);\n        setError(\"price\", validationErrors.price);\n        setError(\"price_fraction\", validationErrors.price_fraction);\n        setError(\"service_condition\", validationErrors.service_condition);\n        setError(\"quote_type_id\", validationErrors.quote_type_id);\n        setError(\"sort\", validationErrors.sort);\n        setError(\"details\", validationErrors.details);\n    };\n\n    const combineErrors = () => {\n        const errorMessages = [];\n        if (errors.quote_type_id) errorMessages.push(errors.quote_type_id);\n        if (errors.sort) errorMessages.push(errors.sort);\n        const arrayErrors = errorMessages.map((error) => (Array.isArray(error) ? error[0] : error));\n        return arrayErrors\n    };\n\n    const handleAddRow = () => {\n        const newQuotes = [...item.quotes];\n        newQuotes.push({ quote_type_id: \"\", sort: \"\" });\n        setItem({\n            ...item,\n            quotes: newQuotes,\n        });\n    };\n\n    const handleDeleteRow = (index: number) => {\n        const newQuotes = [...item.quotes];\n        newQuotes.splice(index, 1);\n        setItem({\n            ...item,\n            quotes: newQuotes,\n        });\n    };\n\n    const handleChangeName = (e: any) => {\n        const { name, value } = e.target;\n        let updatedValue = value;\n\n        if (name === \"name\") {\n            updatedValue = value.toUpperCase();\n        }\n        setItem((prev: any) => ({\n            ...prev,\n            [name]: updatedValue,\n        }));\n    };\n\n    const handleChange = (e: any) => {\n        const { name, value, type } = e.target;\n        let newValue = type === \"radio\" ? parseInt(value) : value;\n        // Prevent negative numbers for \"number\" type inputs\n        if (type === \"number\" && newValue < 0) {\n            newValue = 0;\n        }\n        setItem({\n            ...item,\n            [name]: newValue,\n        });\n        const nameData = e.target.name;\n        const valueData = e.target.value;\n        clearError(name);\n        validateErrors(nameData, valueData);\n    };\n\n    const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        if (value === \"0.00\" || value === \"\") {\n            setItem((prev: any) => ({\n                ...prev,\n                [name]: \"\",\n            }));\n        }\n        setInputFocus(false);\n    };\n\n    const handleInputFocus = () => {\n        setInputFocus(true);\n    }\n\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        if (value === \"\") {\n            setItem((prev: any) => ({\n                ...prev,\n                [name]: \"0.00\",\n            }));\n        }\n    };\n\n    const selectFunction = () => {\n        if (location?.state?.id != null) {\n            editItem();\n        } else {\n            createItem();\n        }\n    };\n\n    const createItem = async () => {\n        try {\n            const res = await postData(item, 'itemPrice/storeRecord', false, \"listaritems\");\n        } catch (error) {\n            console.error(\"Error en createItem:\", error);\n            handleErrorAlert(\"Error al crear el item.\");\n        }\n    };\n\n    console.log(item)\n\n    const editItem = async () => {\n        try {\n            // Mostrar la confirmación antes de editar el item\n            const confirmationResult = await handleEditConfirmation(\"¿Estás seguro que deseas editar este item?\");\n            if (confirmationResult.isConfirmed) {\n                const { item_price_id, quote_name, photo, ...rest } = item;\n\n                const payload = {\n                    ...rest,\n                    quotes: item.quotes.map((quote: any) => ({\n                        quote_type_id: quote.quote_type_id,\n                        sort: quote.sort,\n                        is_default: quote.is_default\n                    })),\n                    voting_details: \"\",\n                    file: image,\n                };\n                payload.quotes.map(async (quote: any) => {\n                    if (quote.quote_type_id && quote.sort !== null || quote.sort !== undefined) {\n                        await putData(payload, 'itemPrice/edit', \"listaritems\");\n                    }\n                })\n            }\n        } catch (error) {\n            console.error(\"Error en editItem:\", error);\n            handleErrorAlert(\"Error al editar el item.\");\n        }\n    };\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        selectFunction();\n    };\n\n    const fetchQDataQuoteTypes = async () => {\n        const res = await getAllData('api/quoteTypes/list/active');\n        setQuoteTypes(res);\n    };\n\n    const getAvailableQuoteTypes = (index: number) => {\n        const selectedTypes = item.quotes\n        return quoteTypes?.filter(\n            (quote: any) => !selectedTypes.includes(quote.id) || selectedTypes[index].quote_type_id === quote.id\n        );\n    };\n\n\n\n    \n    const handleChangeOrderAndQuoteType = (index: number, field: string, value: any) => {\n        if (field === \"sort\" && value < 0) {\n            value = 0;\n        }\n\n        if (field === \"is_default\") {\n            value = value ? 1 : 0;\n        }\n\n        const itemsQuote = [...item.quotes];\n        const currentQuote = { ...itemsQuote[index] };\n        currentQuote[field] = value;\n\n        // Validación para evitar duplicados en quote_type_id\n        const quoteTypeIds = itemsQuote.map((quote) => quote.quote_type_id);\n        const initialQuoteTypeIds = initialItemState.quotes.map((quote: any) => quote.quote_type_id);\n\n        // Verificar si el valor ya está presente en otra cotización\n        if (\n            quoteTypeIds.slice(0, index).includes(value) || // Comprueba en cotizaciones anteriores\n            quoteTypeIds.slice(index + 1).includes(value) || // Comprueba en cotizaciones posteriores\n            initialQuoteTypeIds.includes(value) // Comprueba en los IDs iniciales\n        ) {\n            // El valor ya está presente en otra cotización, mostrar un mensaje de error y no realizar cambios\n            handleErrorAlert(\"El tipo de cotización no puede estar repetido.\");\n            currentQuote.quote_type_id = \"\";\n        } else {\n            itemsQuote[index] = currentQuote;\n\n            setItem((prev: any) => ({\n                ...prev,\n                quotes: itemsQuote,\n            }));\n\n            const nameData = field;\n            const valueData = value;\n            clearError(nameData);\n            validateErrors(nameData, valueData);\n        }\n    };\n\n\n\n\n\n    const isFormValid = () => {\n        const { name, note, price, price_fraction, details, quotes } = item;\n\n        // Verifica que los campos obligatorios estén llenos\n        const areRequiredFieldsFilled =\n            name && note && price && price_fraction && details;\n\n        // Verifica si hay al menos un elemento en el array 'quotes'\n        const isQuotesArrayNotEmpty = quotes.length > 0;\n\n        // Verifica si todos los elementos en 'quotes' tienen 'quote_type_id' y 'sort' válidos\n        const areQuotesValid = quotes.every(\n            (quote: any) =>\n                quote.quote_type_id.length > 0 &&\n                quote.sort.length > 0 &&\n                (validator.isNumeric(quote.quote_type_id) || validator.isAlphanumeric(quote.quote_type_id)) &&\n                (validator.isNumeric(quote.sort) || validator.isAlphanumeric(quote.sort))\n        );\n\n        const isFormValid = areRequiredFieldsFilled && isQuotesArrayNotEmpty;\n\n        return isFormValid;\n    };\n\n    useEffect(() => {\n        if (editItemData) {\n        }\n        if (!dataLoaded) {\n            fetchQDataQuoteTypes();\n            setDataLoaded(true);\n        }\n    }, [dataLoaded, fetchQDataQuoteTypes]);\n\n    useEffect(() => {\n        if (!!editItemData) {\n            setOrderAndQuoteType(editItemData.quotes);\n        }\n    }, [editItemData, dataLoaded, fetchQDataQuoteTypes]);\n\n    useEffect(() => {\n        // Llama a la función isFormValid() y actualiza el estado de 'disabledButton'\n        setDisabledButton(!isFormValid());\n    }, [item]);\n\n    return {\n        item,\n        //BUTTON\n        handleAdd,\n        handleDelete,\n        handleAddRow,\n        handleDeleteRow,\n        handleButtonClick,\n        //IMAGE\n        fileInputRef,\n        image,\n        //INPUTS\n        handleChangeName,\n        handleChange,\n        handleFocus,\n        handleBlur,\n        handleInputFocus,\n        inputFocus,\n        //BUTTON SUBMIT\n        handleSubmit,\n        //QUOTES        \n        getAvailableQuoteTypes,\n        handleChangeOrderAndQuoteType,\n        //ERRORS\n        errors,\n        combineErrors,\n        disabledButton\n    }\n};\n\nexport default ItemsContainer;\n","import React, { useState } from \"react\";\nimport { Button, Card, Col, Form, FormGroup, Row } from \"react-bootstrap\";\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { useLocation } from \"react-router-dom\";\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { TitleComponent, BreadCrumb, InputErrorMessage } from \"../../Global\";\nimport ItemsContainer from '../../../../containers/ItemsContainer'\n\n\nconst CreateOrEditItem: React.FC = () => {\n    const location: any = useLocation();\n    const { state: editItemData } = location;\n    const {\n        item,\n        //BUTTON\n        handleAdd,\n        handleDelete,\n        handleAddRow,\n        handleDeleteRow,\n        handleButtonClick,\n        //IMAGE\n        fileInputRef,\n        image,\n        //INPUTS\n        handleChangeName,\n        handleChange,\n        handleFocus,\n        handleBlur,\n        //BUTTON SUBMIT\n        handleSubmit,\n        //QUOTES        \n        getAvailableQuoteTypes,\n        handleChangeOrderAndQuoteType,\n        handleInputFocus,\n        inputFocus,\n        errors,\n        combineErrors,\n        disabledButton\n    } = ItemsContainer(editItemData, location);\n\n    const formatNumberInput = (inputValue: string) => {\n           // Quita cualquier coma existente para evitar problemas\n    const numericValue = parseFloat(inputValue.replace(/,/g, ''));\n    \n    // Verifica si el valor es un número válido\n    if (!isNaN(numericValue)) {\n      // Formatea el número con comas como separadores de miles y dos decimales\n      return numericValue.toLocaleString('en-US', { style: 'decimal', maximumFractionDigits: 2 });\n    } else {\n      // Si no es un número válido, muestra el valor tal como está\n      return inputValue;\n    }\n    }\n\n    // Función para eliminar los separadores de miles y convertir a número\n  const parseNumberInput = (inputValue: string) => {\n    // Elimina todas las comas de la cadena\n    const numericValue = parseFloat(inputValue.replace(/,/g, ''));\n    // Verifica si el valor es un número válido\n    if (!isNaN(numericValue)) {\n      return numericValue;\n    } else {\n      // Si no es un número válido, muestra el valor tal como está\n      return inputValue;\n    }\n  };\n\n    const [priceCurrency, setPriceCurrency] = useState(\"\");\n    const [normalPrice, setNormalPrice] = useState(0);\n\n    const handleCurrency = (e: any) => {\n        // Limpiar caracteres no numéricos\n        const inputValue = e.target.value.replace(/[^\\d]/g, \"\");\n\n        const newValueNumber = parseNumberInput(inputValue);\n        const newValueNotNumber = formatNumberInput(inputValue);\n        setPriceCurrency(newValueNotNumber);\n        console.log({newValueNumber});\n        console.log({newValueNotNumber});\n    }\n\n\n\n    return (\n        <>\n            {/* breadcrumb */}\n            <BreadCrumb\n                items={['inicio', 'Configuraciones', 'lista items', location?.state?.id ? \"Editar item\" : \"Agregar item\"]}\n                baseURL={['inicio', 'nexos/configuraciones', 'nexos/listaritems', location?.state?.id ? \"editprofile/\" + location?.state?.id : \"createprofile\"]}\n            />\n            {/* Title */}\n            <TitleComponent\n                title={location?.state?.id ? \"Editar item\" : \"Agregar item\"}\n                align=\"center\"\n            />\n\n            {/* Create and Edit Form */}\n            <Card className=\"box-shadow-0\">\n                <Card.Body className=\"p-4\">\n                    <Form className=\"form-horizontal\" onSubmit={handleSubmit}>\n                        <Row>\n                            <Col xs={12} sm={12} md={12} lg={4} xl={4}>\n                                <FormGroup className=\"form-group\">\n                                    <FormGroup className=\"control-group form-group\">\n                                        <Form.Label className=\"form-label\">\n                                            Nombre item\n                                        </Form.Label>\n                                        <InputErrorMessage message={errors.name} inputFocus={inputFocus}>\n                                            <input\n                                                type=\"text\"\n                                                className={`form-control text-capitalize`}\n                                                placeholder=\"\"\n                                                name=\"name\"\n                                                required\n                                                onChange={handleChangeName}\n                                                onFocus={handleInputFocus}\n                                                value={item?.name ?? \"\"}\n                                            />\n                                        </InputErrorMessage>\n                                    </FormGroup>\n                                </FormGroup>\n                                <FormGroup className=\"form-group\">\n                                    <FormGroup className=\"control-group form-group\">\n                                        <Form.Label className=\"form-label\">\n                                            Nota\n                                        </Form.Label>\n                                        <InputErrorMessage message={errors.note} inputFocus={inputFocus}>\n                                            <Form.Control\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"\"\n                                                name=\"note\"\n                                                required\n                                                value={item?.note ?? \"\"}\n                                                onChange={handleChange}\n                                                onFocus={handleInputFocus}\n                                            />\n                                        </InputErrorMessage>\n                                    </FormGroup>\n\n                                </FormGroup>\n                                <FormGroup className=\"form-group\">\n                                    <FormGroup className=\"control-group form-group\">\n                                        <Form.Label className=\"form-label\">\n                                            Valor 4 horas\n                                        </Form.Label>\n                                        <InputErrorMessage message={errors.price} inputFocus={inputFocus}>\n                                            <Form.Control\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                placeholder=\"\"\n                                                name=\"price\"\n                                                required\n                                                value={item.price ?? \"\"}\n                                                onChange={handleChange}\n                                                onFocus={handleFocus}\n                                                onBlur={handleBlur}\n                                            />\n                                        </InputErrorMessage>\n                                    </FormGroup>\n                                </FormGroup>\n                                <FormGroup className=\"form-group\">\n                                    <FormGroup className=\"control-group form-group\">\n                                        <Form.Label className=\"form-label\">\n                                            Valor 1 hora adicional\n                                        </Form.Label>\n                                        <InputErrorMessage message={errors.price_fraction} inputFocus={inputFocus}>\n                                            <Form.Control\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                placeholder=\"\"\n                                                name=\"price_fraction\"\n                                                required\n                                                value={item?.price_fraction ?? \"\"}\n                                                onChange={handleChange}\n                                                onFocus={handleFocus}\n                                                onBlur={handleBlur}\n                                            />\n                                        </InputErrorMessage>\n                                    </FormGroup>\n                                </FormGroup>\n                                <FormGroup className=\"form-group\">\n                                    <FormGroup className=\"control-group form-group\">\n                                        <Form.Label className=\"form-label\">\n                                            Condiciones del servicio\n                                        </Form.Label>\n                                        <InputErrorMessage message={errors.service_condition} inputFocus={inputFocus}>\n                                            <Form.Control\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"\"\n                                                name=\"service_condition\"\n                                                required\n                                                value={item?.service_condition ?? \"\"}\n                                                onFocus={handleInputFocus}\n                                                onChange={handleChange}\n                                            />\n                                        </InputErrorMessage>\n                                    </FormGroup>\n                                </FormGroup>\n                            </Col>\n\n                            {/* tipo cotizacion, orden, detalle del servicio */}\n                            <Col xs={12} sm={12} md={12} lg={4} xl={4} className=\"mt-sm-4 mt-lg-0\">\n                                <Row>\n                                    <Col xs={1} sm={1} md={1} lg={1} xl={1} className=\"d-flex align-items-center ps-0\">\n                                        <Form.Label className=\"form-label\">FM</Form.Label>\n                                    </Col>\n                                    <Col xs={7} sm={7} md={7} lg={7} xl={7} className=\"d-flex align-items-center ps-0\">\n                                        <Form.Label className=\"form-label\">Tipos de cotización</Form.Label>\n                                    </Col>\n                                    <Col xs={4} sm={4} md={4} lg={4} xl={4} className=\"mt-sm-4 mt-lg-0\">\n                                        <Form.Label className=\"form-label\">Orden</Form.Label>\n                                    </Col>\n                                </Row>\n                                {/* quotes  */}\n                                {Array.isArray(item.quotes) &&\n                                    item.quotes.map((itemQuote: any, index: number) => (\n                                        <Row key={index} className=\"mb-3\">\n                                            <>\n                                                <Col xs={1} sm={1} md={1} lg={1} xl={1} className=\"d-flex align-items-center ps-0\">\n                                                    <FormGroup className=\"form-group m-0\">\n                                                        <div className=\"custom-controls-stacked\">\n                                                            <Form.Label className=\"custom-control custom-checkbox\">\n                                                                <Form.Control\n                                                                    type=\"checkbox\"\n                                                                    className=\"custom-control-input\"\n                                                                    name=\"is_default\"\n                                                                    checked={itemQuote.is_default === 1}\n                                                                    onChange={(e) =>\n                                                                        handleChangeOrderAndQuoteType(\n                                                                            index,\n                                                                            \"is_default\",\n                                                                            (e.target as HTMLInputElement).checked ? 1 : 0\n                                                                        )\n                                                                    }\n                                                                />\n                                                                <span className=\"custom-control-label\"></span>\n                                                            </Form.Label>\n                                                        </div>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col xs={7} sm={7} md={7} lg={7} xl={7} className=\"d-flex align-items-center ps-0\">\n                                                    <FormGroup className=\"form-group w-100 m-0\">\n                                                        <FormGroup className=\"control-group form-group m-0 d-flex\">\n                                                            <div className=\"d-flex align-items-start flex-column w-100\">\n                                                                <Form.Select\n                                                                    name=\"quote_type_id\"\n                                                                    aria-label=\"Default select example\"\n                                                                    value={itemQuote?.quote_type_id ?? \"\"}\n                                                                    onChange={(e) => handleChangeOrderAndQuoteType(index, \"quote_type_id\", e.target.value)}\n                                                                >\n                                                                    <option></option>\n                                                                    {\n                                                                        getAvailableQuoteTypes(index)?.map((quote: any) => (\n                                                                            <option key={quote.id} value={quote.id}>\n                                                                                {quote.name}\n                                                                            </option>\n                                                                        ))}\n                                                                </Form.Select>\n                                                            </div>\n                                                        </FormGroup>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col xs={4} sm={4} md={4} lg={4} xl={4} className=\"d-flex align-items-end justify-content-center  p-0\">\n                                                    <div className=\"d-flex align-items-start flex-column w-100\">\n                                                        <Form.Control\n                                                            type=\"number\"\n                                                            className=\"form-control w-100\"\n                                                            name=\"sort\"\n                                                            value={itemQuote?.sort ?? \"\"}\n                                                            onChange={(e) => handleChangeOrderAndQuoteType(index, \"sort\", e.target.value)}\n                                                        />\n                                                    </div>\n                                                    <DeleteForeverIcon\n                                                        fontSize=\"medium\"\n                                                        className=\"text-primary mt-1 mx-2  cursor-pointer mb-2\"\n                                                        onClick={() => handleDeleteRow(index)}\n                                                    />\n                                                </Col>\n                                            </>\n                                        </Row>\n                                    ))}\n                                {/* quotes  */}\n                                <div className=\"d-flex justify-content-evenly align-items-center\" >\n                                    <InputErrorMessage message={combineErrors()} inputFocus={inputFocus}><></></InputErrorMessage>\n\n                                    <div className=\"text-end\">\n                                        <AddCircleOutlineIcon\n                                            fontSize=\"medium\"\n                                            className=\"text-primary ms-2 cursor-pointer\"\n                                            onClick={handleAddRow}\n                                        />\n                                    </div>\n                                </div>\n                                <FormGroup>\n                                    <Form.Label>Detalle del servicio</Form.Label>\n                                    <InputErrorMessage message={errors.details} inputFocus={inputFocus}>\n                                        <Form.Control\n                                            style={{ height: \"5.5cm\", maxHeight: \"8.25cm\" }}\n                                            as=\"textarea\"\n                                            name=\"details\"\n                                            value={item?.details ?? \"\"}\n                                            onChange={handleChange}\n                                            placeholder=\"Detalles del servicio...\"\n                                            required\n                                        />\n                                    </InputErrorMessage>\n                                </FormGroup>\n                            </Col>\n\n                            {/* File Uploader and State */}\n                            <Col xs={12} sm={12} md={12} lg={4} xl={4} className=\"mt-sm-4 mt-lg-0 d-flex flex-column justify-content-between\">\n                                {/* Image Upload */}\n                                <div className=\"d-flex flex-column align-items-center \">\n                                    <Form.Label>Suba aquí la foto del item</Form.Label>\n                                    <div className=\"position-relative rounded-circle hover_opacity_btn\">\n                                        <img\n                                            src={image || item?.photo || \"https://cdn.icon-icons.com/icons2/1880/PNG/512/iconfinder-upload-4341320_120532.png\"}\n                                            alt=\"Imagen perfil de usuario\"\n                                            className=\"avatar avatar-xxl rounded-circle cursor-pointer opacity-75\"\n                                        />\n                                        <input\n                                            type=\"file\"\n                                            onChange={handleAdd}\n                                            ref={fileInputRef}\n                                            name=\"file\"\n                                            id=\"file\"\n                                            className=\"d-none\"\n                                        />\n                                        <div onClick={handleButtonClick} style={{\n                                            position: \"absolute\",\n                                            top: \"30%\",\n                                            left: \"50%\",\n                                            transform: \"translateX(-50%)\",\n                                            cursor: \"pointer\",\n                                        }}>\n                                            <PhotoCameraIcon fontSize=\"large\" color=\"action\" />\n                                        </div>\n\n                                        <div onClick={handleDelete} style={{\n                                            position: \"absolute\",\n                                            bottom: \"0\",\n                                            left: \"90%\",\n                                            cursor: \"pointer\",\n                                        }}>\n                                            <HighlightOffIcon fontSize=\"medium\" color=\"action\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* estado */}\n                                <Row>\n                                    <Col xs={12} sm={12} md={12} lg={12} xl={12} >\n                                        {/* estado */}\n                                        <FormGroup className=\"form-group text-center\">\n                                            <Form.Label className=\"form-label\">Estado</Form.Label>\n                                            <div className=\"custom-controls-stacked d-flex justify-content-center gap-2\">\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"status_id\"\n                                                        value={1}\n                                                        checked={item?.status_id === 1}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Activo</span>\n                                                </Form.Label>\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"status_id\"\n                                                        value={0}\n                                                        checked={item?.status_id === 0}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Inactivo</span>\n                                                </Form.Label>\n                                            </div>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                {/* contable, muestra */}\n                                <Row>\n                                    <Col xs={12} sm={12} md={12} lg={12} xl={6} >\n                                        {/* contable */}\n                                        <FormGroup className=\"form-group text-center\">\n                                            <Form.Label className=\"form-label\">Contable</Form.Label>\n                                            <div className=\"custom-controls-stacked d-flex justify-content-center gap-2\">\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"contable\"\n                                                        value={1}\n                                                        checked={item?.contable === 1}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Activo</span>\n                                                </Form.Label>\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"contable\"\n                                                        value={0}\n                                                        checked={item?.contable === 0}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Inactivo</span>\n                                                </Form.Label>\n                                            </div>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col xs={12} sm={12} md={12} lg={12} xl={6} >\n                                        {/* muestra cantidad */}\n                                        <FormGroup className=\"form-group text-center\">\n                                            <Form.Label className=\"form-label\">Muestra Cantidad</Form.Label>\n                                            <div className=\"custom-controls-stacked d-flex justify-content-center gap-2\">\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"show_quantity\"\n                                                        value={1}\n                                                        checked={item?.show_quantity === 1}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Activo</span>\n                                                </Form.Label>\n                                                <Form.Label className=\"custom-control custom-radio\">\n                                                    <Form.Control\n                                                        type=\"radio\"\n                                                        className=\"custom-control-input\"\n                                                        name=\"show_quantity\"\n                                                        value={0}\n                                                        checked={item?.show_quantity === 0}\n                                                        onChange={handleChange}\n                                                    />\n                                                    <span className=\"custom-control-label\">Inactivo</span>\n                                                </Form.Label>\n                                            </div>\n                                        </FormGroup>\n                                    </Col>\n                                </Row>\n                                <Button\n                                    variant=\"\"\n                                    className=\"btn btn-primary\"\n                                    style={{ width: \"100%\" }}\n                                    type=\"submit\"\n                                    disabled={disabledButton}\n                                >\n                                    Guardar\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card.Body >\n            </Card >\n\n\n        </>\n    );\n};\n\nexport default CreateOrEditItem;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 2 7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n}, \"1\")], 'PhotoCamera');\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _utils.createSvgIcon;\n  }\n});\n\nvar _utils = require(\"@mui/material/utils\");","import { unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nexport default createChainedFunction;","import { unstable_deprecatedPropType as deprecatedPropType } from '@mui/utils';\nexport default deprecatedPropType;","export default function deprecatedPropType(validator, reason) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  return (props, propName, componentName, location, propFullName) => {\n    const componentNameSafe = componentName || '<<anonymous>>';\n    const propFullNameSafe = propFullName || propName;\n\n    if (typeof props[propName] !== 'undefined') {\n      return new Error(`The ${location} \\`${propFullNameSafe}\\` of ` + `\\`${componentNameSafe}\\` is deprecated. ${reason}`);\n    }\n\n    return null;\n  };\n}","import { unstable_requirePropFactory as requirePropFactory } from '@mui/utils';\nexport default requirePropFactory;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function requirePropFactory(componentNameInError, Component) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  } // eslint-disable-next-line react/forbid-foreign-prop-types\n\n\n  const prevPropTypes = Component ? _extends({}, Component.propTypes) : null;\n\n  const requireProp = requiredProp => (props, propName, componentName, location, propFullName, ...args) => {\n    const propFullNameSafe = propFullName || propName;\n    const defaultTypeChecker = prevPropTypes == null ? void 0 : prevPropTypes[propFullNameSafe];\n\n    if (defaultTypeChecker) {\n      const typeCheckerResult = defaultTypeChecker(props, propName, componentName, location, propFullName, ...args);\n\n      if (typeCheckerResult) {\n        return typeCheckerResult;\n      }\n    }\n\n    if (typeof props[propName] !== 'undefined' && !props[requiredProp]) {\n      return new Error(`The prop \\`${propFullNameSafe}\\` of ` + `\\`${componentNameInError}\\` can only be used together with the \\`${requiredProp}\\` prop.`);\n    }\n\n    return null;\n  };\n\n  return requireProp;\n}","import { unstable_setRef as setRef } from '@mui/utils';\nexport default setRef;","import { unstable_unsupportedProp as unsupportedProp } from '@mui/utils';\nexport default unsupportedProp;","export default function unsupportedProp(props, propName, componentName, location, propFullName) {\n  if (process.env.NODE_ENV === 'production') {\n    return null;\n  }\n\n  const propFullNameSafe = propFullName || propName;\n\n  if (typeof props[propName] !== 'undefined') {\n    return new Error(`The prop \\`${propFullNameSafe}\\` is not supported. Please remove it.`);\n  }\n\n  return null;\n}","import { unstable_ClassNameGenerator as ClassNameGenerator } from '@mui/base/className';\nexport { default as capitalize } from './capitalize';\nexport { default as createChainedFunction } from './createChainedFunction';\nexport { default as createSvgIcon } from './createSvgIcon';\nexport { default as debounce } from './debounce';\nexport { default as deprecatedPropType } from './deprecatedPropType';\nexport { default as isMuiElement } from './isMuiElement';\nexport { default as ownerDocument } from './ownerDocument';\nexport { default as ownerWindow } from './ownerWindow';\nexport { default as requirePropFactory } from './requirePropFactory';\nexport { default as setRef } from './setRef';\nexport { default as unstable_useEnhancedEffect } from './useEnhancedEffect';\nexport { default as unstable_useId } from './useId';\nexport { default as unsupportedProp } from './unsupportedProp';\nexport { default as useControlled } from './useControlled';\nexport { default as useEventCallback } from './useEventCallback';\nexport { default as useForkRef } from './useForkRef';\nexport { default as useIsFocusVisible } from './useIsFocusVisible'; // TODO: remove this export once ClassNameGenerator is stable\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_ClassNameGenerator = {\n  configure: generator => {\n    console.warn(['MUI: `ClassNameGenerator` import from `@mui/material/utils` is outdated and might cause unexpected issues.', '', \"You should use `import { unstable_ClassNameGenerator } from '@mui/material/className'` instead\", '', 'The detail of the issue: https://github.com/mui/material-ui/issues/30011#issuecomment-1024993401', '', 'The updated documentation: https://mui.com/guides/classname-generator/'].join('\\n'));\n    ClassNameGenerator.configure(generator);\n  }\n};","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["initialState","id","name","price","price_fraction","details","note","contable","status_id","show_quantity","file","quotes","editItemData","location","initialItemState","map","quote","quote_type_id","sort","is_default","useFetch","getAllData","postData","putData","useErrors","errors","setError","clearError","useState","inputFocus","setInputFocus","item","setItem","setOrderAndQuoteType","quoteTypes","setQuoteTypes","dataLoaded","setDataLoaded","useFile","handleAdd","fileInputRef","image","handleButtonClick","handleDelete","useAlert","handleEditConfirmation","handleErrorAlert","handleSuccessAlert","disabledButton","setDisabledButton","validateErrors","nameData","valueData","validationErrors","validator","service_condition","createItem","console","error","log","editItem","isConfirmed","item_price_id","quote_name","photo","rest","payload","voting_details","undefined","fetchQDataQuoteTypes","res","useEffect","areRequiredFieldsFilled","isQuotesArrayNotEmpty","length","every","isFormValid","handleAddRow","newQuotes","push","handleDeleteRow","index","splice","handleChangeName","e","target","value","updatedValue","toUpperCase","prev","handleChange","type","newValue","parseInt","handleFocus","handleBlur","handleInputFocus","handleSubmit","preventDefault","state","selectFunction","getAvailableQuoteTypes","selectedTypes","filter","includes","handleChangeOrderAndQuoteType","field","itemsQuote","currentQuote","quoteTypeIds","initialQuoteTypeIds","slice","combineErrors","errorMessages","Array","isArray","useLocation","ItemsContainer","items","baseURL","title","align","Card","className","Form","onSubmit","Row","Col","xs","sm","md","lg","xl","FormGroup","message","placeholder","required","onChange","onFocus","onBlur","itemQuote","checked","DeleteForever","fontSize","onClick","AddCircleOutline","style","height","maxHeight","as","src","alt","ref","position","top","left","transform","cursor","PhotoCamera","color","bottom","HighlightOff","Button","variant","width","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","Object","defineProperty","enumerable","get","_utils","createSvgIcon","reason","componentNameInError","Component","props","propName","componentName","propFullName","unstable_ClassNameGenerator","configure","generator","warn","join","ClassNameGenerator","module","obj","__esModule"],"sourceRoot":""}