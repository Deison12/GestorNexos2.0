{"version":3,"file":"static/js/7859.f93451ba.chunk.js","mappings":"2RAeMA,EAAmB,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACdC,EAAiBC,aAAaC,QAAQ,iBAC5CC,QAAQC,IAAI,cAAeX,EAASY,OACpC,IAAMC,EAAwB,CAC5B,CACEC,GAAI,EAAGC,KAAM,sBAAoBC,KAAM,GAAIC,MAAO,WAChDf,EAAS,GAAD,OAAIgB,aAAsB,mBCbtCV,aAAaW,WAAW,YACxBX,aAAaW,WAAW,YACxBX,aAAaW,WAAW,kBACxBX,aAAaW,WAAW,iBACxBX,aAAaW,WAAW,kBDWtB,GAEF,CAAEL,GAAI,EAAGC,KAAM,0BAA2BC,KAAM,GAAIC,MAAO,kBAAMf,EAAS,GAAD,OAAIgB,aAAsB,+BAA+B,CAAEN,MAAe,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUY,OAAQ,GAC7J,CACEE,GAAI,EAAGC,KAAM,kBAAmBC,KAAM,GAAIC,MAAO,WAC/Cf,EAAS,GAAD,OAAIgB,aAAsB,wCAClCV,aAAaY,QAAQ,kBAAmB,IAC1C,GAEF,CACEN,GAAI,EAAGC,KAAM,qBAAsBC,KAAM,GAAIC,MAAO,kBAAMf,EAAS,GAAD,OAAIgB,aAAsB,6BAA4B,IAGpHG,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,EAAO,yCAAG,6FACVhB,EAAe,CAAD,yCAESc,EAAW,uBAAD,OAAwBd,IAAkB,GAAM,OAA3EiB,EAAQ,OACdlB,EAAQkB,GAAK,gDAEbd,QAAQe,MAAM,uBAAuB,EAAD,IAAS,gCAG/CnB,EAAQ,IAAI,yDAEf,kBAXY,mCAiBb,OALAoB,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,KAID,iCACE,SAAC,KAAU,CACTI,MAAO,CAAC,SAAU,qBAClBC,QAAS,CAAC,SAAU,0BAGtB,SAAC,KAAc,CAACC,MAAO,yBAEvB,SAACC,EAAA,EAAI,WACH,SAACA,EAAA,OAAS,WACR,UAACC,EAAA,EAAG,YACF,SAACC,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAE,UACjB,gBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAAkC,UACrE,SAAC,KAAS,CAACC,OAAQjC,SAGvB,UAAC2B,EAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,EAAGK,UAAU,gDAA+C,WAC3E,eAAIA,UAAU,sBAAqB,sBAClC1B,EAAQ2B,KAAI,SAACC,GAAe,OAC3B,SAACV,EAAA,EAAG,WACF,UAACW,EAAA,EAAM,CACLC,QAAQ,UACRJ,UAAU,uCACVK,KAAK,SACLC,QAASJ,EAAIxB,MAAM,UAElBwB,EAAIzB,KAAI,IAAGyB,EAAI1B,SAPV0B,EAAI3B,GASR,gBAiBtB,EAEAf,EAAiB+C,aAAe,CAAC,EACjC,O","sources":["components/Nexos/pages/QuoteScreens/ListQuotes/PreviewQuoteView.tsx","helpers/LocalStorage.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, Row } from \"react-bootstrap\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { PDFViewer } from \"../../../Global\"; // Asegúrate de importar correctamente el componente PDFViewer\nimport { BreadCrumb, TitleComponent } from \"../../../Global\"; // Importa los componentes BreadCrumb y TitleComponent\nimport { removeAll } from \"../../../../../helpers\";\nimport { useFetch } from \"../../../hooks\";\n\ninterface objButtons {\n  id: number;\n  name: string;\n  icon: React.ReactNode;\n  click: () => void;\n}\n\nconst PreviewQuoteView = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [data, setData] = useState('');\n  const storageQuoteId = localStorage.getItem(\"form_quote_id\");\n  console.log(\"PDF VIEWER:\", location.state);\n  const buttons: objButtons[] = [\n    {\n      id: 1, name: 'Nueva Cotización', icon: \"\", click: () => {\n        navigate(`${process.env.PUBLIC_URL}/nexos/cotizar`)\n        removeAll()\n      }\n    },\n    { id: 2, name: 'Modificar Datos Cliente', icon: \"\", click: () => navigate(`${process.env.PUBLIC_URL}/nexos/cotizacionformulario`, { state: location?.state }) },\n    {\n      id: 3, name: 'Modificar Items', icon: \"\", click: () => {\n        navigate(`${process.env.PUBLIC_URL}/nexos/seleccionarserviciosacotizar`)\n        localStorage.setItem('create_quote_id', \"0\");\n      }\n    },\n    {\n      id: 4, name: 'Aplicar Descuentos', icon: \"\", click: () => navigate(`${process.env.PUBLIC_URL}/nexos/descuentosaaplicar`)\n    },\n  ];\n  const { getAllData } = useFetch();\n  const getData = async () => {\n    if (storageQuoteId) {\n      try {\n        const res: any = await getAllData(`api/quotes/document/${storageQuoteId}`, false)\n        setData(res);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    } else {\n      setData('');\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, []); \n\n\n  return (\n    <>\n      <BreadCrumb\n        items={['inicio', 'cotización PDF']}\n        baseURL={['inicio', 'nexos/cotizacionpdf']}\n      />\n      {/* Title */}\n      <TitleComponent title={\"Cotización - PDF\"} />\n\n      <Card>\n        <Card.Body>\n          <Row>\n            <Col xs={12} lg={8}>\n              <div style={{ width: '100%', height: '600px'/* , overflow: 'auto' */ }}>\n                <PDFViewer pdfUrl={data} />\n              </div>\n            </Col>\n            <Col xs={12} lg={4} className=\"d-flex flex-column justify-content-start pb-4\">\n              <h3 className=\"text-center fw-bold\">ACCIONES</h3>\n              {buttons.map((btn: objButtons) => (\n                <Row key={btn.id}>\n                  <Button\n                    variant=\"primary\"\n                    className=\"btn btn-primary mb-2 w-100 fw-normal\"\n                    type=\"submit\"\n                    onClick={btn.click}\n                  >\n                    {btn.icon} {btn.name}\n                  </Button>\n                </Row>\n              ))}\n              {/* <Row>\n                <Button\n                  variant=\"primary\"\n                  className=\"btn btn-primary mb-2 mt-4 w-100 fw-normal\"\n                  type=\"submit\"\n                >\n                  Enviar Cotización\n                </Button>\n              </Row> */}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\nPreviewQuoteView.propTypes = {};\nPreviewQuoteView.defaultProps = {};\nexport default PreviewQuoteView;","\n//add local storage\nexport function addAll(formId: any, nit: any, quoteId: any, clientId: any) {\n    localStorage.setItem('form1-ID', formId);\n    localStorage.setItem('form_nit', nit);\n    localStorage.setItem('form_quote_id', quoteId);\n    localStorage.setItem('form_client_id', clientId);\n}\n\n//remove local storage\nexport function removeAll() {\n    localStorage.removeItem('form1-ID');\n    localStorage.removeItem('form_nit');\n    localStorage.removeItem('form_client_id');\n    localStorage.removeItem('form_quote_id');\n    localStorage.removeItem('create_quote_id');\n}\n"],"names":["PreviewQuoteView","location","useLocation","navigate","useNavigate","useState","data","setData","storageQuoteId","localStorage","getItem","console","log","state","buttons","id","name","icon","click","process","removeItem","setItem","getAllData","useFetch","getData","res","error","useEffect","items","baseURL","title","Card","Row","Col","xs","lg","style","width","height","pdfUrl","className","map","btn","Button","variant","type","onClick","defaultProps"],"sourceRoot":""}