{"version":3,"file":"static/js/1749.326428a7.chunk.js","mappings":"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","sources":["components/Nexos/pages/ProfileScreens/CreateOrEditProfile/CreateOrEditProfile.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { Button, Card, Col, Form, Row } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport { useAlert, useFetch } from \"../../../hooks\";\n\nimport { TitleComponent, BreadCrumb, ConfirmationCardButton } from \"../../../Global\";\n\ninterface Profile {\n  id: number;\n  name: string;\n  status_id: number;\n}\n\nconst CreateOrEditProfile: React.FC = () => {\n  // State variables\n  const [name, setName] = useState<string>(\"\");\n  const [isActive, setIsActive] = useState<number>(1);\n  const [error, setError] = useState<string>(\"\");\n  const [originalName, setOriginalName] = useState<string>(\"\");\n  const [originalStatusId, setOriginalStatusId] = useState<number>(1);\n  const params = useParams<{ id?: string }>();\n  const location: any = useLocation();\n  const [inputFocus, setInputFocus] = useState(false);\n  const [nameTouched, setNameTouched] = useState(false);\n  const { handleSuccessAlert, handleErrorAlert, handleEditConfirmation } = useAlert();\n  const { postData, putData, error: hasError } = useFetch();\n\n  const handleInputFocus = () => {\n    setInputFocus(true);\n  };\n\n  // Validation function for profile name\n  const validateProfileName = (name: string): string => {\n    if (nameTouched && !name.trim()) { // Envía el error solo cuando el campo está tocado y vacío\n      return \"El campo nombre no puede estar vacío.\";\n    }\n    if (!validator.isAlpha(name.replace(/ /g, \"\"), \"es-ES\")) { // Elimina espacios en blanco y verifica si contiene solo letras\n      return \"No se permiten números o caracteres especiales en el nombre.\";\n    }\n    return \"\";\n  };\n\n  // Validation function for profile status\n  const validateProfileStatus = (status: string): string => {\n    if (status !== \"Activo\") {\n      return \"El estado debe ser 'Activo' para crear un perfil.\";\n    }\n    return \"\";\n  };\n\n  // Event handlers\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    // Eliminar los números del valor ingresado\n    const cleanedValue = value.replace(/\\d/g, '');\n\n    setName(cleanedValue.toLowerCase().replace(/\\b\\w/g, (char: string) => char.toUpperCase()));\n    if (!nameTouched && value.trim() !== \"\") {\n      setNameTouched(true);\n    }\n  };\n  \n  const handleStateChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsActive(parseInt(e.target.value));\n  };\n\n  // Confirmation dialog for editing profile\n  const handleEditConfirmationFn = async () => {\n    const result: any = await handleEditConfirmation(\"¿Estás seguro de que deseas editar el perfil?\");\n\n    if (result.isConfirmed) {\n      const jsonData: Profile = {\n        name,\n        status_id: isActive,\n        id: location?.state?.id ? parseInt(location?.state?.id, 10) : 0,\n      };\n\n      try {\n        await putData(jsonData, \"users/profiles/edit\", \"listarperfiles\");\n      } catch (error) {\n        console.error(\"Error al editar el perfil:\", error);\n        handleErrorAlert(\"Error, No se pudo editar el perfil.\");\n      }\n    }\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const nameError = validateProfileName(name);\n\n    // Allow \"Inactivo\" status only for editing profiles\n    const statusError = location?.state?.id ? \"\" : validateProfileStatus(\"Activo\");\n\n    console.log(\"Status Error\");\n    \n    if (nameError && statusError) {\n      setError(`${nameError}\\n${statusError}`);\n      return;\n    }\n    if (nameError) {\n      setError(nameError);\n      return;\n    }\n    if (statusError) {\n      setError(statusError);\n      return;\n    }\n\n    if (location?.state?.id) {\n      handleEditConfirmationFn();\n    } else {\n      if (isActive !== 1) {\n        handleErrorAlert(\"Error, Solo se puede agregar un perfil con estado 'Activo'.\");\n      } else {\n        const jsonData: Profile = {\n          name,\n          status_id: isActive,\n          id: location?.state?.id ? parseInt(location?.state?.id, 10) : 0,\n        };\n\n        try {\n          await postData(jsonData, \"users/profiles/create\");\n        } catch (error) {\n          console.error(\"Error al crear el perfil:\", error);\n        }\n      }\n    }\n  };\n\n  // Fetch profile data for editing (if editing mode)\n  const getData = () => {\n    if (location?.state?.id) {\n      const profile: any = location.state;\n      if (profile) {\n        setName(profile.name);\n        setIsActive(profile.status_id);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [location?.state?.id]);\n\n  // Function to check if the button should be enabled\n  const isButtonEnabled = () => {\n      return name.trim() === \"\" || isActive !== 1;\n  };\n\n  if (hasError) {\n    return (\n      <ConfirmationCardButton\n          baseURL=\"#\"\n          title=\"Error\"\n          subtitle={`${hasError?.message}`}\n      />\n    )\n  }\n\n  return (\n    <>\n      {/* breadcrumb */}\n      <BreadCrumb\n        items={['inicio', 'perfiles', location?.state?.id ? \"Editar perfil\" : \"Agregar perfil\"]}\n        baseURL={['inicio', 'listprofiles', location?.state?.id ? \"editprofile/\" + location?.state?.id : \"createprofile\"]}\n      />\n      {/* Title */}\n      <TitleComponent\n        title={location?.state?.id ? \"Editar perfil\" : \"Agregar perfil\"}\n        align=\"center\"\n      />\n      {/* Create and Edit Form */}\n      <Card>\n        <Card.Body>\n          <Form onSubmit={handleSubmit}>\n            <Row className=\"row-sm \">\n              <Col sm={12} md={12} lg={6} xl={6} className=\"text-center\">\n                <h5>Nombre de perfil</h5>\n                <br />\n                <Form.Group>\n                  {/* <InputErrorMessage message={validateProfileName(name)} inputFocus={inputFocus}> */}\n                  <Form.Control\n                    className=\"text-capitalize\"\n                    type=\"text\"\n                    onFocus={handleInputFocus}\n                    name=\"name\"\n                    placeholder=\"Nombre\"\n                    value={name}\n                    onChange={handleNameChange}\n                  />\n                  {/* </InputErrorMessage> */}\n                </Form.Group>\n              </Col>\n              <Col sm={12} md={12} lg={6} xl={6} className=\"text-center\">\n                <h5>Estado</h5>\n                <br />\n                <div className=\"d-flex justify-content-evenly\">\n                  <Form.Label className=\"custom-control custom-radio\">\n                    <Form.Control\n                      type=\"radio\"\n                      className=\"custom-control-input\"\n                      name=\"status_id\"\n                      value=\"1\"\n                      checked={isActive === 1}\n                      onChange={handleStateChange}\n                    />\n                    <span className=\"custom-control-label\">ACTIVO</span>\n                  </Form.Label>\n                  <Form.Label className=\"custom-control custom-radio\">\n                    <Form.Control\n                      type=\"radio\"\n                      className=\"custom-control-input\"\n                      name=\"status_id\"\n                      value=\"0\"\n                      checked={isActive === 0}\n                      onChange={handleStateChange}\n                    />\n                    <span className=\"custom-control-label\">INACTIVO</span>\n                  </Form.Label>\n                </div>\n              </Col>\n            </Row>\n            <div className=\"text-center text-md-end text-lg-end mt-4\">\n              <Button variant=\"\" type=\"submit\" className=\"btn btn-primary\" disabled={location?.state?.id ? false : isButtonEnabled()}>\n                {location?.state?.id ? \"Editar perfil\" : \"Agregar perfil\"}\n              </Button>\n            </div>\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default CreateOrEditProfile;\n"],"names":["useState","name","setName","isActive","setIsActive","setError","location","useParams","useLocation","setInputFocus","nameTouched","setNameTouched","useAlert","handleErrorAlert","handleSuccessAlert","handleEditConfirmation","useFetch","postData","putData","hasError","error","validateProfileName","trim","validator","replace","handleStateChange","e","parseInt","target","value","handleEditConfirmationFn","isConfirmed","jsonData","status_id","id","state","console","handleSubmit","preventDefault","nameError","statusError","log","useEffect","profile","getData","baseURL","title","subtitle","message","items","align","onSubmit","className","sm","md","lg","xl","type","onFocus","placeholder","onChange","cleanedValue","toLowerCase","char","toUpperCase","checked","variant","disabled"],"sourceRoot":""}